{
"version":3,
"file":"ld34.js",
"sourceRoot":"file:///",
"sources":["C:/HaxeToolkit/haxe/std/js/_std/EReg.hx","C:/Users/Kenton/Projects/LD34/src/GameTracker.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/system/input/Keycodes.hx","C:/HaxeToolkit/haxe/lib/glm/git/src/glm/Vec3.hx","C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","C:/Users/Kenton/Projects/tusk/src/tusk/Scene.hx","C:/Users/Kenton/Projects/LD34/src/Intro.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,21/src/main/promhx/Promise.hx","C:/Users/Kenton/Projects/tusk/src/tusk/macros/EventConnector.hx","C:/HaxeToolkit/haxe/std/List.hx","C:/Users/Kenton/Projects/LD34/src/LoadingScreen.hx","C:/Users/Kenton/Projects/tusk/src/tusk/Game.hx","C:/Users/Kenton/Projects/LD34/src/Main.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,21/src/main/promhx/Stream.hx","C:/HaxeToolkit/haxe/std/js/_std/Reflect.hx","C:/Users/Kenton/Projects/LD34/src/SpriteMaterial.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx","C:/HaxeToolkit/haxe/std/StringBuf.hx","C:/HaxeToolkit/haxe/std/StringTools.hx","C:/Users/Kenton/Projects/LD34/bin/web.build/haxe/TuskApp.hx","C:/HaxeToolkit/haxe/std/js/_std/Type.hx","C:/Users/Kenton/Projects/LD34/src/Util.hx","C:/HaxeToolkit/haxe/lib/glm/git/src/glm/GLM.hx","C:/HaxeToolkit/haxe/lib/glm/git/src/glm/Mat4.hx","C:/HaxeToolkit/haxe/lib/glm/git/src/glm/Mat3.hx","C:/HaxeToolkit/haxe/lib/glm/git/src/glm/Projection.hx","C:/HaxeToolkit/haxe/lib/glm/git/src/glm/Quat.hx","C:/HaxeToolkit/haxe/lib/glm/git/src/glm/Vec2.hx","C:/HaxeToolkit/haxe/lib/glm/git/src/glm/Vec4.hx","C:/HaxeToolkit/haxe/std/haxe/CallStack.hx","C:/HaxeToolkit/haxe/std/haxe/Int64.hx","C:/HaxeToolkit/haxe/std/haxe/Log.hx","C:/HaxeToolkit/haxe/std/haxe/Resource.hx","C:/HaxeToolkit/haxe/std/haxe/Serializer.hx","C:/HaxeToolkit/haxe/std/haxe/Timer.hx","C:/HaxeToolkit/haxe/std/haxe/Unserializer.hx","C:/HaxeToolkit/haxe/std/haxe/Utf8.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/io/Bytes.hx","C:/HaxeToolkit/haxe/std/haxe/crypto/Base64.hx","C:/HaxeToolkit/haxe/std/haxe/crypto/BaseCode.hx","C:/HaxeToolkit/haxe/std/haxe/ds/BalancedTree.hx","C:/HaxeToolkit/haxe/std/haxe/ds/EnumValueMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/IntMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/ObjectMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/HaxeToolkit/haxe/std/haxe/io/FPHelper.hx","C:/HaxeToolkit/haxe/std/haxe/io/Path.hx","C:/HaxeToolkit/haxe/lib/hxColorToolkit/1,6,0/hxColorToolkit/spaces/HSB.hx","C:/HaxeToolkit/haxe/lib/hxColorToolkit/1,6,0/hxColorToolkit/spaces/RGB.hx","C:/HaxeToolkit/haxe/std/js/Boot.hx","C:/HaxeToolkit/haxe/std/js/html/CanvasElement.hx","C:/HaxeToolkit/haxe/std/js/html/compat/ArrayBuffer.hx","C:/HaxeToolkit/haxe/std/js/html/compat/DataView.hx","C:/HaxeToolkit/haxe/std/js/html/compat/Uint8Array.hx","C:/Users/Kenton/Projects/tusk/src/tusk/Component.hx","C:/Users/Kenton/Projects/tusk/src/tusk/PromiseComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/macros/ComponentIndexer.hx","C:/Users/Kenton/Projects/LD34/src/loading/SlamComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/macros/AutoSerializer.hx","C:/Users/Kenton/Projects/tusk/src/tusk/Processor.hx","C:/Users/Kenton/Projects/LD34/src/loading/SlamProcessor.hx","C:/Users/Kenton/Projects/LD34/src/loading/SlideComponent.hx","C:/Users/Kenton/Projects/LD34/src/loading/SlideProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/BottleRocket.hx","C:/Users/Kenton/Projects/LD34/src/minigames/CaptainKnowItAll.hx","C:/Users/Kenton/Projects/LD34/src/minigames/SledTillYoureDead.hx","C:/Users/Kenton/Projects/LD34/src/minigames/bottlerocket/BackgroundMaterial.hx","C:/Users/Kenton/Projects/LD34/src/minigames/bottlerocket/PumpComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/bottlerocket/PumpProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/bottlerocket/TimerDisplayComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/bottlerocket/TimerDisplayProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/bottlerocket/TransformTrackerComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/bottlerocket/TransformTrackerProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/bottlerocket/VelocityComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/bottlerocket/VelocityProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/captainknowitall/ColourShiftComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/captainknowitall/ColourShiftProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/captainknowitall/PlayerAnswerComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/captainknowitall/PlayerAnswerProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/captainknowitall/PlayerScoreComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/captainknowitall/PlayerScoreProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/captainknowitall/PlayerTimerComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/captainknowitall/PlayerTimerProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/AnimatedSledComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/AnimatedSledProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/CollisionComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/CollisionProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/MovementComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/MovementProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/ScrollComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/ScrollProcessor.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/SpawnComponent.hx","C:/Users/Kenton/Projects/LD34/src/minigames/sledtillyouredead/SpawnProcessor.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,21/src/main/promhx/base/AsyncBase.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,21/src/main/promhx/Deferred.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,21/src/main/promhx/PublicStream.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,21/src/main/promhx/base/EventLoop.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/App.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/Snow.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/api/Debug.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/api/Promise.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/api/Timer.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/api/buffers/Float32Array.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/api/buffers/Int32Array.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/api/buffers/Uint8Array.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/core/web/Core.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/core/web/assets/Assets.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/core/web/input/DOMKeys.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/core/web/input/Input.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/core/web/io/IO.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/core/web/window/Windowing.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/modules/howlerjs/Audio.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/system/audio/Sound.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/modules/howlerjs/sound/Sound.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/modules/opengl/web/GL.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/system/assets/Asset.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/system/assets/Assets.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/system/audio/Audio.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/system/input/Input.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/system/io/IO.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/system/window/Window.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/system/window/Windowing.hx","C:/HaxeToolkit/haxe/lib/snow/git/snow/types/Types.hx","C:/Users/Kenton/Projects/tusk/src/tusk/Entity.hx","C:/Users/Kenton/Projects/tusk/src/tusk/Matcher.hx","C:/Users/Kenton/Projects/tusk/src/tusk/Tusk.hx","C:/Users/Kenton/Projects/tusk/src/tusk/debug/Log.hx","C:/Users/Kenton/Projects/tusk/src/tusk/debug/Exception.hx","C:/Users/Kenton/Projects/tusk/src/tusk/defaults/Fonts.hx","C:/Users/Kenton/Projects/tusk/src/tusk/defaults/Materials.hx","C:/Users/Kenton/Projects/tusk/src/tusk/defaults/Primitives.hx","C:/Users/Kenton/Projects/tusk/src/tusk/defaults/scenes/SplashScreen.hx","C:/Users/Kenton/Projects/tusk/src/tusk/defaults/scenes/TechScreen.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/Event.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/DestroyEvent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/EventRouter.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/KeyEvent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/LoadEvent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/MouseButtonEvent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/MouseMoveEvent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/RenderEvent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/StartEvent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/events/UpdateEvent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/Camera2DComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/CircleEffectComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/CustomUniformsComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/FadeEffectComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/MaterialComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/MeshComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/ParticleSystemComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/SoundComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/SplashScreen_ShakeComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/TextComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/TimedPromiseComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/comp/TransformComponent.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/Camera2DProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/CircleEffectRendererProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/FadeEffectRendererProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/MaterialProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/MeshProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/ParticleSystemProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/Renderer2DProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/SoundProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/SplashScreen_RoarShakeProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/TextProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/TimedPromiseProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/lib/proc/TransformProcessor.hx","C:/Users/Kenton/Projects/tusk/src/tusk/math/Ease.hx","C:/Users/Kenton/Projects/tusk/src/tusk/math/Lerp.hx","C:/Users/Kenton/Projects/tusk/src/tusk/math/MathTools.hx","C:/Users/Kenton/Projects/tusk/src/tusk/math/Random.hx","C:/Users/Kenton/Projects/tusk/src/tusk/modules/Assets.hx","C:/HaxeToolkit/haxe/lib/partials/1,0,0/partials/Partial.hx","C:/Users/Kenton/Projects/tusk/src/tusk/modules/partials/Textures.hx","C:/Users/Kenton/Projects/tusk/src/tusk/modules/partials/Sounds.hx","C:/Users/Kenton/Projects/tusk/src/tusk/modules/partials/Materials.hx","C:/Users/Kenton/Projects/tusk/src/tusk/modules/partials/Meshes.hx","C:/Users/Kenton/Projects/tusk/src/tusk/modules/partials/Fonts.hx","C:/Users/Kenton/Projects/tusk/src/tusk/modules/partials/Texts.hx","C:/Users/Kenton/Projects/tusk/src/tusk/modules/Sound.hx","C:/Users/Kenton/Projects/tusk/src/tusk/modules/tiled/TileMap.hx","C:/Users/Kenton/Projects/tusk/src/tusk/resources/Asset.hx","C:/Users/Kenton/Projects/tusk/src/tusk/resources/Font.hx","C:/Users/Kenton/Projects/tusk/src/tusk/resources/Material.hx","C:/Users/Kenton/Projects/tusk/src/tusk/resources/Mesh.hx","C:/Users/Kenton/Projects/tusk/src/tusk/resources/Shader.hx","C:/Users/Kenton/Projects/tusk/src/tusk/resources/Sound.hx","C:/Users/Kenton/Projects/tusk/src/tusk/resources/Text.hx","C:/Users/Kenton/Projects/tusk/src/tusk/resources/Texture.hx","C:/HaxeToolkit/haxe/std/js/_std/Math.hx","C:/Users/Kenton/Projects/tusk/src/tusk/macros/AssetFilesBuilder.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = new HaxeRegExp(r, opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","import snow.types.Types.Key;\n\nimport glm.Vec3;\n\nclass Player {\n\tpublic var name:String;\n\tpublic var isCPU:Bool;\n\tpublic var btnA:Int;\n\tpublic var btnB:Int;\n\tpublic var score:Int;\n\tpublic var btnAName:String;\n\tpublic var btnBName:String;\n\tpublic var colour:Vec3;\n\n\tpublic function new(name:String, isCPU:Bool, btnA:Int, btnAName:String, btnB:Int, btnBName:String, colour:Vec3) {\n\t\tthis.name = name;\n\t\tthis.isCPU = isCPU;\n\t\tthis.btnA = btnA;\n\t\tthis.btnB = btnB;\n\t\tthis.score = 0;\n\t\tthis.btnAName = btnAName;\n\t\tthis.btnBName = btnBName;\n\t\tthis.colour = colour;\n\t}\n}\n\nclass GameTracker {\n\tprivate function new(){}\n\n\tpublic static var player:Array<Player> = [\n\t\tnew Player('Player 1', false, Key.key_q, 'Q', Key.key_e, 'E', new Vec3(205, 53, 23) / 255),\n\t\tnew Player('Mr. Computer', true, Key.key_i, 'I', Key.key_p, 'P', new Vec3(238, 196, 49) / 255)\n\t];\n}","package snow.system.input;\r\n\r\n\r\n/** The keycode class, with conversion helpers for scancodes. The values below come directly from SDL header include files,\r\nbut they aren't specific to SDL so they are used generically */\r\n@:noCompletion class Keycodes {\r\n\r\n        /** Convert a scancode to a keycode for comparison */\r\n    public static function from_scan( scancode : Int ) : Int {\r\n        return (scancode | Scancodes.MASK);\r\n    } //from_scan\r\n\r\n        /** Convert a keycode to a scancode if possible.\r\n            NOTE - this will only map a large % but not all keys,\r\n            there is a list of unmapped keys commented in the code. */\r\n    public static function to_scan( keycode : Int ) : Int {\r\n\r\n            //quite a lot map directly to a masked scancode\r\n            //if that's the case, return it directly\r\n        if ((keycode & Scancodes.MASK) != 0) {\r\n            return keycode &~ Scancodes.MASK;\r\n        }\r\n\r\n            //now we translate them to the scan where unmapped\r\n\r\n        switch(keycode) {\r\n            case Keycodes.enter:         return Scancodes.enter;\r\n            case Keycodes.escape:        return Scancodes.escape;\r\n            case Keycodes.backspace:     return Scancodes.backspace;\r\n            case Keycodes.tab:           return Scancodes.tab;\r\n            case Keycodes.space:         return Scancodes.space;\r\n            case Keycodes.slash:         return Scancodes.slash;\r\n            case Keycodes.key_0:         return Scancodes.key_0;\r\n            case Keycodes.key_1:         return Scancodes.key_1;\r\n            case Keycodes.key_2:         return Scancodes.key_2;\r\n            case Keycodes.key_3:         return Scancodes.key_3;\r\n            case Keycodes.key_4:         return Scancodes.key_4;\r\n            case Keycodes.key_5:         return Scancodes.key_5;\r\n            case Keycodes.key_6:         return Scancodes.key_6;\r\n            case Keycodes.key_7:         return Scancodes.key_7;\r\n            case Keycodes.key_8:         return Scancodes.key_8;\r\n            case Keycodes.key_9:         return Scancodes.key_9;\r\n            case Keycodes.semicolon:     return Scancodes.semicolon;\r\n            case Keycodes.equals:        return Scancodes.equals;\r\n            case Keycodes.leftbracket:   return Scancodes.leftbracket;\r\n            case Keycodes.backslash:     return Scancodes.backslash;\r\n            case Keycodes.rightbracket:  return Scancodes.rightbracket;\r\n            case Keycodes.backquote:     return Scancodes.grave;\r\n            case Keycodes.key_a:         return Scancodes.key_a;\r\n            case Keycodes.key_b:         return Scancodes.key_b;\r\n            case Keycodes.key_c:         return Scancodes.key_c;\r\n            case Keycodes.key_d:         return Scancodes.key_d;\r\n            case Keycodes.key_e:         return Scancodes.key_e;\r\n            case Keycodes.key_f:         return Scancodes.key_f;\r\n            case Keycodes.key_g:         return Scancodes.key_g;\r\n            case Keycodes.key_h:         return Scancodes.key_h;\r\n            case Keycodes.key_i:         return Scancodes.key_i;\r\n            case Keycodes.key_j:         return Scancodes.key_j;\r\n            case Keycodes.key_k:         return Scancodes.key_k;\r\n            case Keycodes.key_l:         return Scancodes.key_l;\r\n            case Keycodes.key_m:         return Scancodes.key_m;\r\n            case Keycodes.key_n:         return Scancodes.key_n;\r\n            case Keycodes.key_o:         return Scancodes.key_o;\r\n            case Keycodes.key_p:         return Scancodes.key_p;\r\n            case Keycodes.key_q:         return Scancodes.key_q;\r\n            case Keycodes.key_r:         return Scancodes.key_r;\r\n            case Keycodes.key_s:         return Scancodes.key_s;\r\n            case Keycodes.key_t:         return Scancodes.key_t;\r\n            case Keycodes.key_u:         return Scancodes.key_u;\r\n            case Keycodes.key_v:         return Scancodes.key_v;\r\n            case Keycodes.key_w:         return Scancodes.key_w;\r\n            case Keycodes.key_x:         return Scancodes.key_x;\r\n            case Keycodes.key_y:         return Scancodes.key_y;\r\n            case Keycodes.key_z:         return Scancodes.key_z;\r\n\r\n\r\n                //These are unmappable because they are not keys\r\n                //but values on the key (like a shift key combo)\r\n                //and to hardcode them to the key you think it is,\r\n                //would be to map it to a fixed locale probably.\r\n                //They don't have scancodes, so we don't return one\r\n            // case exclaim:      ;\r\n            // case quotedbl:     ;\r\n            // case hash:         ;\r\n            // case percent:      ;\r\n            // case dollar:       ;\r\n            // case ampersand:    ;\r\n            // case quote:        ;\r\n            // case leftparen:    ;\r\n            // case rightparen:   ;\r\n            // case asterisk:     ;\r\n            // case plus:         ;\r\n            // case comma:        ;\r\n            // case minus:        ;\r\n            // case period:       ;\r\n            // case less:         ;\r\n            // case colon:        ;\r\n            // case greater:      ;\r\n            // case question:     ;\r\n            // case at:           ;\r\n            // case caret:        ;\r\n            // case underscore:   ;\r\n\r\n        } //switch(keycode)\r\n\r\n        return Scancodes.unknown;\r\n\r\n    } //to_scan\r\n\r\n        /** Convert a keycode to string */\r\n    public static function name( keycode : Int ) : String {\r\n\r\n        //we don't use to_scan because it would consume\r\n        //the typeable characters and we want those as unicode etc.\r\n\r\n        if ((keycode & Scancodes.MASK) != 0) {\r\n            return Scancodes.name(keycode &~ Scancodes.MASK);\r\n        }\r\n\r\n        switch(keycode) {\r\n\r\n            case Keycodes.enter:     return Scancodes.name(Scancodes.enter);\r\n            case Keycodes.escape:    return Scancodes.name(Scancodes.escape);\r\n            case Keycodes.backspace: return Scancodes.name(Scancodes.backspace);\r\n            case Keycodes.tab:       return Scancodes.name(Scancodes.tab);\r\n            case Keycodes.space:     return Scancodes.name(Scancodes.space);\r\n            case Keycodes.delete:    return Scancodes.name(Scancodes.delete);\r\n\r\n            default: {\r\n\r\n                var decoder = new haxe.Utf8();\r\n                    decoder.addChar(keycode);\r\n\r\n                return decoder.toString();\r\n\r\n            } //default\r\n\r\n        } //switch(keycode)\r\n\r\n    } //name\r\n\r\n    public static var unknown : Int                     = 0;\r\n\r\n    public static var enter : Int                       = 13;\r\n    public static var escape : Int                      = 27;\r\n    public static var backspace : Int                   = 8;\r\n    public static var tab : Int                         = 9;\r\n    public static var space : Int                       = 32;\r\n    public static var exclaim : Int                     = 33;\r\n    public static var quotedbl : Int                    = 34;\r\n    public static var hash : Int                        = 35;\r\n    public static var percent : Int                     = 37;\r\n    public static var dollar : Int                      = 36;\r\n    public static var ampersand : Int                   = 38;\r\n    public static var quote : Int                       = 39;\r\n    public static var leftparen : Int                   = 40;\r\n    public static var rightparen : Int                  = 41;\r\n    public static var asterisk : Int                    = 42;\r\n    public static var plus : Int                        = 43;\r\n    public static var comma : Int                       = 44;\r\n    public static var minus : Int                       = 45;\r\n    public static var period : Int                      = 46;\r\n    public static var slash : Int                       = 47;\r\n    public static var key_0 : Int                       = 48;\r\n    public static var key_1 : Int                       = 49;\r\n    public static var key_2 : Int                       = 50;\r\n    public static var key_3 : Int                       = 51;\r\n    public static var key_4 : Int                       = 52;\r\n    public static var key_5 : Int                       = 53;\r\n    public static var key_6 : Int                       = 54;\r\n    public static var key_7 : Int                       = 55;\r\n    public static var key_8 : Int                       = 56;\r\n    public static var key_9 : Int                       = 57;\r\n    public static var colon : Int                       = 58;\r\n    public static var semicolon : Int                   = 59;\r\n    public static var less : Int                        = 60;\r\n    public static var equals : Int                      = 61;\r\n    public static var greater : Int                     = 62;\r\n    public static var question : Int                    = 63;\r\n    public static var at : Int                          = 64;\r\n    /*\r\n       Skip uppercase letters\r\n     */\r\n    public static var leftbracket : Int                 = 91;\r\n    public static var backslash : Int                   = 92;\r\n    public static var rightbracket : Int                = 93;\r\n    public static var caret : Int                       = 94;\r\n    public static var underscore : Int                  = 95;\r\n    public static var backquote : Int                   = 96;\r\n    public static var key_a : Int                       = 97;\r\n    public static var key_b : Int                       = 98;\r\n    public static var key_c : Int                       = 99;\r\n    public static var key_d : Int                       = 100;\r\n    public static var key_e : Int                       = 101;\r\n    public static var key_f : Int                       = 102;\r\n    public static var key_g : Int                       = 103;\r\n    public static var key_h : Int                       = 104;\r\n    public static var key_i : Int                       = 105;\r\n    public static var key_j : Int                       = 106;\r\n    public static var key_k : Int                       = 107;\r\n    public static var key_l : Int                       = 108;\r\n    public static var key_m : Int                       = 109;\r\n    public static var key_n : Int                       = 110;\r\n    public static var key_o : Int                       = 111;\r\n    public static var key_p : Int                       = 112;\r\n    public static var key_q : Int                       = 113;\r\n    public static var key_r : Int                       = 114;\r\n    public static var key_s : Int                       = 115;\r\n    public static var key_t : Int                       = 116;\r\n    public static var key_u : Int                       = 117;\r\n    public static var key_v : Int                       = 118;\r\n    public static var key_w : Int                       = 119;\r\n    public static var key_x : Int                       = 120;\r\n    public static var key_y : Int                       = 121;\r\n    public static var key_z : Int                       = 122;\r\n\r\n    public static var capslock : Int             = from_scan(Scancodes.capslock);\r\n\r\n    public static var f1 : Int                   = from_scan(Scancodes.f1);\r\n    public static var f2 : Int                   = from_scan(Scancodes.f2);\r\n    public static var f3 : Int                   = from_scan(Scancodes.f3);\r\n    public static var f4 : Int                   = from_scan(Scancodes.f4);\r\n    public static var f5 : Int                   = from_scan(Scancodes.f5);\r\n    public static var f6 : Int                   = from_scan(Scancodes.f6);\r\n    public static var f7 : Int                   = from_scan(Scancodes.f7);\r\n    public static var f8 : Int                   = from_scan(Scancodes.f8);\r\n    public static var f9 : Int                   = from_scan(Scancodes.f9);\r\n    public static var f10 : Int                  = from_scan(Scancodes.f10);\r\n    public static var f11 : Int                  = from_scan(Scancodes.f11);\r\n    public static var f12 : Int                  = from_scan(Scancodes.f12);\r\n\r\n    public static var printscreen : Int          = from_scan(Scancodes.printscreen);\r\n    public static var scrolllock : Int           = from_scan(Scancodes.scrolllock);\r\n    public static var pause : Int                = from_scan(Scancodes.pause);\r\n    public static var insert : Int               = from_scan(Scancodes.insert);\r\n    public static var home : Int                 = from_scan(Scancodes.home);\r\n    public static var pageup : Int               = from_scan(Scancodes.pageup);\r\n    public static var delete : Int               = 127;\r\n    public static var end : Int                  = from_scan(Scancodes.end);\r\n    public static var pagedown : Int             = from_scan(Scancodes.pagedown);\r\n    public static var right : Int                = from_scan(Scancodes.right);\r\n    public static var left : Int                 = from_scan(Scancodes.left);\r\n    public static var down : Int                 = from_scan(Scancodes.down);\r\n    public static var up : Int                   = from_scan(Scancodes.up);\r\n\r\n    public static var numlockclear : Int         = from_scan(Scancodes.numlockclear);\r\n    public static var kp_divide : Int            = from_scan(Scancodes.kp_divide);\r\n    public static var kp_multiply : Int          = from_scan(Scancodes.kp_multiply);\r\n    public static var kp_minus : Int             = from_scan(Scancodes.kp_minus);\r\n    public static var kp_plus : Int              = from_scan(Scancodes.kp_plus);\r\n    public static var kp_enter : Int             = from_scan(Scancodes.kp_enter);\r\n    public static var kp_1 : Int                 = from_scan(Scancodes.kp_1);\r\n    public static var kp_2 : Int                 = from_scan(Scancodes.kp_2);\r\n    public static var kp_3 : Int                 = from_scan(Scancodes.kp_3);\r\n    public static var kp_4 : Int                 = from_scan(Scancodes.kp_4);\r\n    public static var kp_5 : Int                 = from_scan(Scancodes.kp_5);\r\n    public static var kp_6 : Int                 = from_scan(Scancodes.kp_6);\r\n    public static var kp_7 : Int                 = from_scan(Scancodes.kp_7);\r\n    public static var kp_8 : Int                 = from_scan(Scancodes.kp_8);\r\n    public static var kp_9 : Int                 = from_scan(Scancodes.kp_9);\r\n    public static var kp_0 : Int                 = from_scan(Scancodes.kp_0);\r\n    public static var kp_period : Int            = from_scan(Scancodes.kp_period);\r\n\r\n    public static var application : Int          = from_scan(Scancodes.application);\r\n    public static var power : Int                = from_scan(Scancodes.power);\r\n    public static var kp_equals : Int            = from_scan(Scancodes.kp_equals);\r\n    public static var f13 : Int                  = from_scan(Scancodes.f13);\r\n    public static var f14 : Int                  = from_scan(Scancodes.f14);\r\n    public static var f15 : Int                  = from_scan(Scancodes.f15);\r\n    public static var f16 : Int                  = from_scan(Scancodes.f16);\r\n    public static var f17 : Int                  = from_scan(Scancodes.f17);\r\n    public static var f18 : Int                  = from_scan(Scancodes.f18);\r\n    public static var f19 : Int                  = from_scan(Scancodes.f19);\r\n    public static var f20 : Int                  = from_scan(Scancodes.f20);\r\n    public static var f21 : Int                  = from_scan(Scancodes.f21);\r\n    public static var f22 : Int                  = from_scan(Scancodes.f22);\r\n    public static var f23 : Int                  = from_scan(Scancodes.f23);\r\n    public static var f24 : Int                  = from_scan(Scancodes.f24);\r\n    public static var execute : Int              = from_scan(Scancodes.execute);\r\n    public static var help : Int                 = from_scan(Scancodes.help);\r\n    public static var menu : Int                 = from_scan(Scancodes.menu);\r\n    public static var select : Int               = from_scan(Scancodes.select);\r\n    public static var stop : Int                 = from_scan(Scancodes.stop);\r\n    public static var again : Int                = from_scan(Scancodes.again);\r\n    public static var undo : Int                 = from_scan(Scancodes.undo);\r\n    public static var cut : Int                  = from_scan(Scancodes.cut);\r\n    public static var copy : Int                 = from_scan(Scancodes.copy);\r\n    public static var paste : Int                = from_scan(Scancodes.paste);\r\n    public static var find : Int                 = from_scan(Scancodes.find);\r\n    public static var mute : Int                 = from_scan(Scancodes.mute);\r\n    public static var volumeup : Int             = from_scan(Scancodes.volumeup);\r\n    public static var volumedown : Int           = from_scan(Scancodes.volumedown);\r\n    public static var kp_comma : Int             = from_scan(Scancodes.kp_comma);\r\n    public static var kp_equalsas400 : Int       = from_scan(Scancodes.kp_equalsas400);\r\n\r\n    public static var alterase : Int             = from_scan(Scancodes.alterase);\r\n    public static var sysreq : Int               = from_scan(Scancodes.sysreq);\r\n    public static var cancel : Int               = from_scan(Scancodes.cancel);\r\n    public static var clear : Int                = from_scan(Scancodes.clear);\r\n    public static var prior : Int                = from_scan(Scancodes.prior);\r\n    public static var return2 : Int              = from_scan(Scancodes.return2);\r\n    public static var separator : Int            = from_scan(Scancodes.separator);\r\n    public static var out : Int                  = from_scan(Scancodes.out);\r\n    public static var oper : Int                 = from_scan(Scancodes.oper);\r\n    public static var clearagain : Int           = from_scan(Scancodes.clearagain);\r\n    public static var crsel : Int                = from_scan(Scancodes.crsel);\r\n    public static var exsel : Int                = from_scan(Scancodes.exsel);\r\n\r\n    public static var kp_00 : Int                = from_scan(Scancodes.kp_00);\r\n    public static var kp_000 : Int               = from_scan(Scancodes.kp_000);\r\n    public static var thousandsseparator : Int   = from_scan(Scancodes.thousandsseparator);\r\n    public static var decimalseparator : Int     = from_scan(Scancodes.decimalseparator);\r\n    public static var currencyunit : Int         = from_scan(Scancodes.currencyunit);\r\n    public static var currencysubunit : Int      = from_scan(Scancodes.currencysubunit);\r\n    public static var kp_leftparen : Int         = from_scan(Scancodes.kp_leftparen);\r\n    public static var kp_rightparen : Int        = from_scan(Scancodes.kp_rightparen);\r\n    public static var kp_leftbrace : Int         = from_scan(Scancodes.kp_leftbrace);\r\n    public static var kp_rightbrace : Int        = from_scan(Scancodes.kp_rightbrace);\r\n    public static var kp_tab : Int               = from_scan(Scancodes.kp_tab);\r\n    public static var kp_backspace : Int         = from_scan(Scancodes.kp_backspace);\r\n    public static var kp_a : Int                 = from_scan(Scancodes.kp_a);\r\n    public static var kp_b : Int                 = from_scan(Scancodes.kp_b);\r\n    public static var kp_c : Int                 = from_scan(Scancodes.kp_c);\r\n    public static var kp_d : Int                 = from_scan(Scancodes.kp_d);\r\n    public static var kp_e : Int                 = from_scan(Scancodes.kp_e);\r\n    public static var kp_f : Int                 = from_scan(Scancodes.kp_f);\r\n    public static var kp_xor : Int               = from_scan(Scancodes.kp_xor);\r\n    public static var kp_power : Int             = from_scan(Scancodes.kp_power);\r\n    public static var kp_percent : Int           = from_scan(Scancodes.kp_percent);\r\n    public static var kp_less : Int              = from_scan(Scancodes.kp_less);\r\n    public static var kp_greater : Int           = from_scan(Scancodes.kp_greater);\r\n    public static var kp_ampersand : Int         = from_scan(Scancodes.kp_ampersand);\r\n    public static var kp_dblampersand : Int      = from_scan(Scancodes.kp_dblampersand);\r\n    public static var kp_verticalbar : Int       = from_scan(Scancodes.kp_verticalbar);\r\n    public static var kp_dblverticalbar : Int    = from_scan(Scancodes.kp_dblverticalbar);\r\n    public static var kp_colon : Int             = from_scan(Scancodes.kp_colon);\r\n    public static var kp_hash : Int              = from_scan(Scancodes.kp_hash);\r\n    public static var kp_space : Int             = from_scan(Scancodes.kp_space);\r\n    public static var kp_at : Int                = from_scan(Scancodes.kp_at);\r\n    public static var kp_exclam : Int            = from_scan(Scancodes.kp_exclam);\r\n    public static var kp_memstore : Int          = from_scan(Scancodes.kp_memstore);\r\n    public static var kp_memrecall : Int         = from_scan(Scancodes.kp_memrecall);\r\n    public static var kp_memclear : Int          = from_scan(Scancodes.kp_memclear);\r\n    public static var kp_memadd : Int            = from_scan(Scancodes.kp_memadd);\r\n    public static var kp_memsubtract : Int       = from_scan(Scancodes.kp_memsubtract);\r\n    public static var kp_memmultiply : Int       = from_scan(Scancodes.kp_memmultiply);\r\n    public static var kp_memdivide : Int         = from_scan(Scancodes.kp_memdivide);\r\n    public static var kp_plusminus : Int         = from_scan(Scancodes.kp_plusminus);\r\n    public static var kp_clear : Int             = from_scan(Scancodes.kp_clear);\r\n    public static var kp_clearentry : Int        = from_scan(Scancodes.kp_clearentry);\r\n    public static var kp_binary : Int            = from_scan(Scancodes.kp_binary);\r\n    public static var kp_octal : Int             = from_scan(Scancodes.kp_octal);\r\n    public static var kp_decimal : Int           = from_scan(Scancodes.kp_decimal);\r\n    public static var kp_hexadecimal : Int       = from_scan(Scancodes.kp_hexadecimal);\r\n\r\n    public static var lctrl : Int                = from_scan(Scancodes.lctrl);\r\n    public static var lshift : Int               = from_scan(Scancodes.lshift);\r\n    public static var lalt : Int                 = from_scan(Scancodes.lalt);\r\n    public static var lmeta : Int                = from_scan(Scancodes.lmeta);\r\n    public static var rctrl : Int                = from_scan(Scancodes.rctrl);\r\n    public static var rshift : Int               = from_scan(Scancodes.rshift);\r\n    public static var ralt : Int                 = from_scan(Scancodes.ralt);\r\n    public static var rmeta : Int                = from_scan(Scancodes.rmeta);\r\n\r\n    public static var mode : Int                 = from_scan(Scancodes.mode);\r\n\r\n    public static var audionext : Int            = from_scan(Scancodes.audionext);\r\n    public static var audioprev : Int            = from_scan(Scancodes.audioprev);\r\n    public static var audiostop : Int            = from_scan(Scancodes.audiostop);\r\n    public static var audioplay : Int            = from_scan(Scancodes.audioplay);\r\n    public static var audiomute : Int            = from_scan(Scancodes.audiomute);\r\n    public static var mediaselect : Int          = from_scan(Scancodes.mediaselect);\r\n    public static var www : Int                  = from_scan(Scancodes.www);\r\n    public static var mail : Int                 = from_scan(Scancodes.mail);\r\n    public static var calculator : Int           = from_scan(Scancodes.calculator);\r\n    public static var computer : Int             = from_scan(Scancodes.computer);\r\n    public static var ac_search : Int            = from_scan(Scancodes.ac_search);\r\n    public static var ac_home : Int              = from_scan(Scancodes.ac_home);\r\n    public static var ac_back : Int              = from_scan(Scancodes.ac_back);\r\n    public static var ac_forward : Int           = from_scan(Scancodes.ac_forward);\r\n    public static var ac_stop : Int              = from_scan(Scancodes.ac_stop);\r\n    public static var ac_refresh : Int           = from_scan(Scancodes.ac_refresh);\r\n    public static var ac_bookmarks : Int         = from_scan(Scancodes.ac_bookmarks);\r\n\r\n    public static var brightnessdown : Int       = from_scan(Scancodes.brightnessdown);\r\n    public static var brightnessup : Int         = from_scan(Scancodes.brightnessup);\r\n    public static var displayswitch : Int        = from_scan(Scancodes.displayswitch);\r\n    public static var kbdillumtoggle : Int       = from_scan(Scancodes.kbdillumtoggle);\r\n    public static var kbdillumdown : Int         = from_scan(Scancodes.kbdillumdown);\r\n    public static var kbdillumup : Int           = from_scan(Scancodes.kbdillumup);\r\n    public static var eject : Int                = from_scan(Scancodes.eject);\r\n    public static var sleep : Int                = from_scan(Scancodes.sleep);\r\n\r\n} //Keycodes\r\n\r\n\r\n/** The scancode class. The values below come directly from SDL header include files,\r\nbut they aren't specific to SDL so they are used generically */\r\n@:noCompletion class Scancodes {\r\n\r\n        /** Convert a scancode to a name */\r\n    public static function name( scancode : Int ) : String {\r\n\r\n        var res = null;\r\n\r\n        if (scancode >= 0 && scancode < scancode_names.length) {\r\n            res = scancode_names[scancode];\r\n        }\r\n\r\n        return res != null ? res : \"\";\r\n\r\n    } //name\r\n\r\n        //special value remains caps\r\n    public static var MASK:Int                      = (1<<30);\r\n\r\n    public static var unknown : Int                 = 0;\r\n\r\n       // Usage page 0x07\r\n       // These values are from usage page 0x07 (USB keyboard page).\r\n\r\n    public static var key_a : Int                   = 4;\r\n    public static var key_b : Int                   = 5;\r\n    public static var key_c : Int                   = 6;\r\n    public static var key_d : Int                   = 7;\r\n    public static var key_e : Int                   = 8;\r\n    public static var key_f : Int                   = 9;\r\n    public static var key_g : Int                   = 10;\r\n    public static var key_h : Int                   = 11;\r\n    public static var key_i : Int                   = 12;\r\n    public static var key_j : Int                   = 13;\r\n    public static var key_k : Int                   = 14;\r\n    public static var key_l : Int                   = 15;\r\n    public static var key_m : Int                   = 16;\r\n    public static var key_n : Int                   = 17;\r\n    public static var key_o : Int                   = 18;\r\n    public static var key_p : Int                   = 19;\r\n    public static var key_q : Int                   = 20;\r\n    public static var key_r : Int                   = 21;\r\n    public static var key_s : Int                   = 22;\r\n    public static var key_t : Int                   = 23;\r\n    public static var key_u : Int                   = 24;\r\n    public static var key_v : Int                   = 25;\r\n    public static var key_w : Int                   = 26;\r\n    public static var key_x : Int                   = 27;\r\n    public static var key_y : Int                   = 28;\r\n    public static var key_z : Int                   = 29;\r\n\r\n    public static var key_1 : Int                   = 30;\r\n    public static var key_2 : Int                   = 31;\r\n    public static var key_3 : Int                   = 32;\r\n    public static var key_4 : Int                   = 33;\r\n    public static var key_5 : Int                   = 34;\r\n    public static var key_6 : Int                   = 35;\r\n    public static var key_7 : Int                   = 36;\r\n    public static var key_8 : Int                   = 37;\r\n    public static var key_9 : Int                   = 38;\r\n    public static var key_0 : Int                   = 39;\r\n\r\n    public static var enter : Int                   = 40;\r\n    public static var escape : Int                  = 41;\r\n    public static var backspace : Int               = 42;\r\n    public static var tab : Int                     = 43;\r\n    public static var space : Int                   = 44;\r\n\r\n    public static var minus : Int                   = 45;\r\n    public static var equals : Int                  = 46;\r\n    public static var leftbracket : Int             = 47;\r\n    public static var rightbracket : Int            = 48;\r\n\r\n/** Located at the lower left of the return\r\n    key on ISO keyboards and at the right end\r\n    of the QWERTY row on ANSI keyboards.\r\n    Produces REVERSE SOLIDUS (backslash) and\r\n    VERTICAL LINE in a US layout, REVERSE\r\n    SOLIDUS and VERTICAL LINE in a UK Mac\r\n    layout, NUMBER SIGN and TILDE in a UK\r\n    Windows layout, DOLLAR SIGN and POUND SIGN\r\n    in a Swiss German layout, NUMBER SIGN and\r\n    APOSTROPHE in a German layout, GRAVE\r\n    ACCENT and POUND SIGN in a French Mac\r\n    layout, and ASTERISK and MICRO SIGN in a\r\n    French Windows layout.\r\n*/\r\n    public static var backslash : Int               = 49;\r\n\r\n/** ISO USB keyboards actually use this code\r\n    instead of 49 for the same key, but all\r\n    OSes I've seen treat the two codes\r\n    identically. So, as an implementor, unless\r\n    your keyboard generates both of those\r\n    codes and your OS treats them differently,\r\n    you should generate public static var BACKSLASH\r\n    instead of this code. As a user, you\r\n    should not rely on this code because SDL\r\n    will never generate it with most (all?)\r\n    keyboards.\r\n*/\r\n    public static var nonushash : Int          = 50;\r\n    public static var semicolon : Int          = 51;\r\n    public static var apostrophe : Int         = 52;\r\n\r\n/** Located in the top left corner (on both ANSI\r\n    and ISO keyboards). Produces GRAVE ACCENT and\r\n    TILDE in a US Windows layout and in US and UK\r\n    Mac layouts on ANSI keyboards, GRAVE ACCENT\r\n    and NOT SIGN in a UK Windows layout, SECTION\r\n    SIGN and PLUS-MINUS SIGN in US and UK Mac\r\n    layouts on ISO keyboards, SECTION SIGN and\r\n    DEGREE SIGN in a Swiss German layout (Mac:\r\n    only on ISO keyboards); CIRCUMFLEX ACCENT and\r\n    DEGREE SIGN in a German layout (Mac: only on\r\n    ISO keyboards), SUPERSCRIPT TWO and TILDE in a\r\n    French Windows layout, COMMERCIAL AT and\r\n    NUMBER SIGN in a French Mac layout on ISO\r\n    keyboards, and LESS-THAN SIGN and GREATER-THAN\r\n    SIGN in a Swiss German, German, or French Mac\r\n    layout on ANSI keyboards.\r\n*/\r\n    public static var grave : Int              = 53;\r\n    public static var comma : Int              = 54;\r\n    public static var period : Int             = 55;\r\n    public static var slash : Int              = 56;\r\n\r\n    public static var capslock : Int           = 57;\r\n\r\n    public static var f1 : Int                 = 58;\r\n    public static var f2 : Int                 = 59;\r\n    public static var f3 : Int                 = 60;\r\n    public static var f4 : Int                 = 61;\r\n    public static var f5 : Int                 = 62;\r\n    public static var f6 : Int                 = 63;\r\n    public static var f7 : Int                 = 64;\r\n    public static var f8 : Int                 = 65;\r\n    public static var f9 : Int                 = 66;\r\n    public static var f10 : Int                = 67;\r\n    public static var f11 : Int                = 68;\r\n    public static var f12 : Int                = 69;\r\n\r\n    public static var printscreen : Int        = 70;\r\n    public static var scrolllock : Int         = 71;\r\n    public static var pause : Int              = 72;\r\n\r\n/** insert on PC, help on some Mac keyboards (but does send code 73, not 117) */\r\n    public static var insert : Int             = 73;\r\n    public static var home : Int               = 74;\r\n    public static var pageup : Int             = 75;\r\n    public static var delete : Int             = 76;\r\n    public static var end : Int                = 77;\r\n    public static var pagedown : Int           = 78;\r\n    public static var right : Int              = 79;\r\n    public static var left : Int               = 80;\r\n    public static var down : Int               = 81;\r\n    public static var up : Int                 = 82;\r\n\r\n/** num lock on PC, clear on Mac keyboards */\r\n    public static var numlockclear : Int       = 83;\r\n    public static var kp_divide : Int          = 84;\r\n    public static var kp_multiply : Int        = 85;\r\n    public static var kp_minus : Int           = 86;\r\n    public static var kp_plus : Int            = 87;\r\n    public static var kp_enter : Int           = 88;\r\n    public static var kp_1 : Int               = 89;\r\n    public static var kp_2 : Int               = 90;\r\n    public static var kp_3 : Int               = 91;\r\n    public static var kp_4 : Int               = 92;\r\n    public static var kp_5 : Int               = 93;\r\n    public static var kp_6 : Int               = 94;\r\n    public static var kp_7 : Int               = 95;\r\n    public static var kp_8 : Int               = 96;\r\n    public static var kp_9 : Int               = 97;\r\n    public static var kp_0 : Int               = 98;\r\n    public static var kp_period : Int          = 99;\r\n\r\n\r\n/** This is the additional key that ISO\r\n    keyboards have over ANSI ones,\r\n    located between left shift and Y.\r\n    Produces GRAVE ACCENT and TILDE in a\r\n    US or UK Mac layout, REVERSE SOLIDUS\r\n    (backslash) and VERTICAL LINE in a\r\n    US or UK Windows layout, and\r\n    LESS-THAN SIGN and GREATER-THAN SIGN\r\n    in a Swiss German, German, or French\r\n    layout. */\r\n    public static var nonusbackslash : Int     = 100;\r\n\r\n/** windows contextual menu, compose */\r\n    public static var application : Int        = 101;\r\n\r\n/** The USB document says this is a status flag,\r\n    not a physical key - but some Mac keyboards\r\n    do have a power key. */\r\n    public static var power : Int              = 102;\r\n    public static var kp_equals : Int          = 103;\r\n    public static var f13 : Int                = 104;\r\n    public static var f14 : Int                = 105;\r\n    public static var f15 : Int                = 106;\r\n    public static var f16 : Int                = 107;\r\n    public static var f17 : Int                = 108;\r\n    public static var f18 : Int                = 109;\r\n    public static var f19 : Int                = 110;\r\n    public static var f20 : Int                = 111;\r\n    public static var f21 : Int                = 112;\r\n    public static var f22 : Int                = 113;\r\n    public static var f23 : Int                = 114;\r\n    public static var f24 : Int                = 115;\r\n    public static var execute : Int            = 116;\r\n    public static var help : Int               = 117;\r\n    public static var menu : Int               = 118;\r\n    public static var select : Int             = 119;\r\n    public static var stop : Int               = 120;\r\n\r\n/** redo */\r\n    public static var again : Int              = 121;\r\n    public static var undo : Int               = 122;\r\n    public static var cut : Int                = 123;\r\n    public static var copy : Int               = 124;\r\n    public static var paste : Int              = 125;\r\n    public static var find : Int               = 126;\r\n    public static var mute : Int               = 127;\r\n    public static var volumeup : Int           = 128;\r\n    public static var volumedown : Int         = 129;\r\n\r\n// not sure whether there's a reason to enable these\r\n//     public static var lockingcapslock = 130,\r\n//     public static var lockingnumlock = 131,\r\n//     public static var lockingscrolllock = 132,\r\n\r\n    public static var kp_comma : Int           = 133;\r\n    public static var kp_equalsas400 : Int     = 134;\r\n\r\n/** used on Asian keyboards; see footnotes in USB doc */\r\n    public static var international1 : Int     = 135;\r\n    public static var international2 : Int     = 136;\r\n\r\n/** Yen */\r\n    public static var international3 : Int     = 137;\r\n    public static var international4 : Int     = 138;\r\n    public static var international5 : Int     = 139;\r\n    public static var international6 : Int     = 140;\r\n    public static var international7 : Int     = 141;\r\n    public static var international8 : Int     = 142;\r\n    public static var international9 : Int     = 143;\r\n/** Hangul/English toggle */\r\n    public static var lang1 : Int              = 144;\r\n/** Hanja conversion */\r\n    public static var lang2 : Int              = 145;\r\n/** Katakana */\r\n    public static var lang3 : Int              = 146;\r\n/** Hiragana */\r\n    public static var lang4 : Int              = 147;\r\n/** Zenkaku/Hankaku */\r\n    public static var lang5 : Int              = 148;\r\n/** reserved */\r\n    public static var lang6 : Int              = 149;\r\n/** reserved */\r\n    public static var lang7 : Int              = 150;\r\n/** reserved */\r\n    public static var lang8 : Int              = 151;\r\n/** reserved */\r\n    public static var lang9 : Int              = 152;\r\n/** Erase-Eaze */\r\n    public static var alterase : Int           = 153;\r\n    public static var sysreq : Int             = 154;\r\n    public static var cancel : Int             = 155;\r\n    public static var clear : Int              = 156;\r\n    public static var prior : Int              = 157;\r\n    public static var return2 : Int            = 158;\r\n    public static var separator : Int          = 159;\r\n    public static var out : Int                = 160;\r\n    public static var oper : Int               = 161;\r\n    public static var clearagain : Int         = 162;\r\n    public static var crsel : Int              = 163;\r\n    public static var exsel : Int              = 164;\r\n\r\n    public static var kp_00 : Int              = 176;\r\n    public static var kp_000 : Int             = 177;\r\n    public static var thousandsseparator : Int = 178;\r\n    public static var decimalseparator : Int   = 179;\r\n    public static var currencyunit : Int       = 180;\r\n    public static var currencysubunit : Int    = 181;\r\n    public static var kp_leftparen : Int       = 182;\r\n    public static var kp_rightparen : Int      = 183;\r\n    public static var kp_leftbrace : Int       = 184;\r\n    public static var kp_rightbrace : Int      = 185;\r\n    public static var kp_tab : Int             = 186;\r\n    public static var kp_backspace : Int       = 187;\r\n    public static var kp_a : Int               = 188;\r\n    public static var kp_b : Int               = 189;\r\n    public static var kp_c : Int               = 190;\r\n    public static var kp_d : Int               = 191;\r\n    public static var kp_e : Int               = 192;\r\n    public static var kp_f : Int               = 193;\r\n    public static var kp_xor : Int             = 194;\r\n    public static var kp_power : Int           = 195;\r\n    public static var kp_percent : Int         = 196;\r\n    public static var kp_less : Int            = 197;\r\n    public static var kp_greater : Int         = 198;\r\n    public static var kp_ampersand : Int       = 199;\r\n    public static var kp_dblampersand : Int    = 200;\r\n    public static var kp_verticalbar : Int     = 201;\r\n    public static var kp_dblverticalbar : Int  = 202;\r\n    public static var kp_colon : Int           = 203;\r\n    public static var kp_hash : Int            = 204;\r\n    public static var kp_space : Int           = 205;\r\n    public static var kp_at : Int              = 206;\r\n    public static var kp_exclam : Int          = 207;\r\n    public static var kp_memstore : Int        = 208;\r\n    public static var kp_memrecall : Int       = 209;\r\n    public static var kp_memclear : Int        = 210;\r\n    public static var kp_memadd : Int          = 211;\r\n    public static var kp_memsubtract : Int     = 212;\r\n    public static var kp_memmultiply : Int     = 213;\r\n    public static var kp_memdivide : Int       = 214;\r\n    public static var kp_plusminus : Int       = 215;\r\n    public static var kp_clear : Int           = 216;\r\n    public static var kp_clearentry : Int      = 217;\r\n    public static var kp_binary : Int          = 218;\r\n    public static var kp_octal : Int           = 219;\r\n    public static var kp_decimal : Int         = 220;\r\n    public static var kp_hexadecimal : Int     = 221;\r\n\r\n    public static var lctrl : Int              = 224;\r\n    public static var lshift : Int             = 225;\r\n/** alt, option */\r\n    public static var lalt : Int               = 226;\r\n/** windows, command (apple), meta */\r\n    public static var lmeta : Int              = 227;\r\n    public static var rctrl : Int              = 228;\r\n    public static var rshift : Int             = 229;\r\n/** alt gr, option */\r\n    public static var ralt : Int               = 230;\r\n/** windows, command (apple), meta */\r\n    public static var rmeta : Int              = 231;\r\n\r\n/** Not sure if this is really not covered\r\n    by any of the above, but since there's a\r\n    special KMOD_MODE for it I'm adding it here */\r\n    public static var mode : Int               = 257;\r\n\r\n\r\n    //\r\n    //    Usage page 0x0C\r\n    //    These values are mapped from usage page 0x0C (USB consumer page).\r\n\r\n    public static var audionext : Int          = 258;\r\n    public static var audioprev : Int          = 259;\r\n    public static var audiostop : Int          = 260;\r\n    public static var audioplay : Int          = 261;\r\n    public static var audiomute : Int          = 262;\r\n    public static var mediaselect : Int        = 263;\r\n    public static var www : Int                = 264;\r\n    public static var mail : Int               = 265;\r\n    public static var calculator : Int         = 266;\r\n    public static var computer : Int           = 267;\r\n    public static var ac_search : Int          = 268;\r\n    public static var ac_home : Int            = 269;\r\n    public static var ac_back : Int            = 270;\r\n    public static var ac_forward : Int         = 271;\r\n    public static var ac_stop : Int            = 272;\r\n    public static var ac_refresh : Int         = 273;\r\n    public static var ac_bookmarks : Int       = 274;\r\n\r\n      // Walther keys\r\n      // These are values that Christian Walther added (for mac keyboard?).\r\n\r\n    public static var brightnessdown : Int     = 275;\r\n    public static var brightnessup : Int       = 276;\r\n\r\n/** display mirroring/dual display switch, video mode switch */\r\n    public static var displayswitch : Int      = 277;\r\n\r\n    public static var kbdillumtoggle : Int     = 278;\r\n    public static var kbdillumdown : Int       = 279;\r\n    public static var kbdillumup : Int         = 280;\r\n    public static var eject : Int              = 281;\r\n    public static var sleep : Int              = 282;\r\n\r\n    public static var app1 : Int               = 283;\r\n    public static var app2 : Int               = 284;\r\n\r\n    static var scancode_names:Array<String> = [\r\n        null, null, null, null,\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"E\",\r\n        \"F\",\r\n        \"G\",\r\n        \"H\",\r\n        \"I\",\r\n        \"J\",\r\n        \"K\",\r\n        \"L\",\r\n        \"M\",\r\n        \"N\",\r\n        \"O\",\r\n        \"P\",\r\n        \"Q\",\r\n        \"R\",\r\n        \"S\",\r\n        \"T\",\r\n        \"U\",\r\n        \"V\",\r\n        \"W\",\r\n        \"X\",\r\n        \"Y\",\r\n        \"Z\",\r\n        \"1\",\r\n        \"2\",\r\n        \"3\",\r\n        \"4\",\r\n        \"5\",\r\n        \"6\",\r\n        \"7\",\r\n        \"8\",\r\n        \"9\",\r\n        \"0\",\r\n        \"Enter\",\r\n        \"Escape\",\r\n        \"Backspace\",\r\n        \"Tab\",\r\n        \"Space\",\r\n        \"-\",\r\n        \"=\",\r\n        \"[\",\r\n        \"]\",\r\n        \"\\\\\",\r\n        \"#\",\r\n        \";\",\r\n        \"'\",\r\n        \"`\",\r\n        \",\",\r\n        \".\",\r\n        \"/\",\r\n        \"CapsLock\",\r\n        \"F1\",\r\n        \"F2\",\r\n        \"F3\",\r\n        \"F4\",\r\n        \"F5\",\r\n        \"F6\",\r\n        \"F7\",\r\n        \"F8\",\r\n        \"F9\",\r\n        \"F10\",\r\n        \"F11\",\r\n        \"F12\",\r\n        \"PrintScreen\",\r\n        \"ScrollLock\",\r\n        \"Pause\",\r\n        \"Insert\",\r\n        \"Home\",\r\n        \"PageUp\",\r\n        \"Delete\",\r\n        \"End\",\r\n        \"PageDown\",\r\n        \"Right\",\r\n        \"Left\",\r\n        \"Down\",\r\n        \"Up\",\r\n        \"Numlock\",\r\n        \"Keypad /\",\r\n        \"Keypad *\",\r\n        \"Keypad -\",\r\n        \"Keypad +\",\r\n        \"Keypad Enter\",\r\n        \"Keypad 1\",\r\n        \"Keypad 2\",\r\n        \"Keypad 3\",\r\n        \"Keypad 4\",\r\n        \"Keypad 5\",\r\n        \"Keypad 6\",\r\n        \"Keypad 7\",\r\n        \"Keypad 8\",\r\n        \"Keypad 9\",\r\n        \"Keypad 0\",\r\n        \"Keypad .\",\r\n        null,\r\n        \"Application\",\r\n        \"Power\",\r\n        \"Keypad =\",\r\n        \"F13\",\r\n        \"F14\",\r\n        \"F15\",\r\n        \"F16\",\r\n        \"F17\",\r\n        \"F18\",\r\n        \"F19\",\r\n        \"F20\",\r\n        \"F21\",\r\n        \"F22\",\r\n        \"F23\",\r\n        \"F24\",\r\n        \"Execute\",\r\n        \"Help\",\r\n        \"Menu\",\r\n        \"Select\",\r\n        \"Stop\",\r\n        \"Again\",\r\n        \"Undo\",\r\n        \"Cut\",\r\n        \"Copy\",\r\n        \"Paste\",\r\n        \"Find\",\r\n        \"Mute\",\r\n        \"VolumeUp\",\r\n        \"VolumeDown\",\r\n        null, null, null,\r\n        \"Keypad ,\",\r\n        \"Keypad = (AS400)\",\r\n        null, null, null, null, null, null, null, null, null, null, null, null,\r\n        null, null, null, null, null, null,\r\n        \"AltErase\",\r\n        \"SysReq\",\r\n        \"Cancel\",\r\n        \"Clear\",\r\n        \"Prior\",\r\n        \"Enter\",\r\n        \"Separator\",\r\n        \"Out\",\r\n        \"Oper\",\r\n        \"Clear / Again\",\r\n        \"CrSel\",\r\n        \"ExSel\",\r\n        null, null, null, null, null, null, null, null, null, null, null,\r\n        \"Keypad 00\",\r\n        \"Keypad 000\",\r\n        \"ThousandsSeparator\",\r\n        \"DecimalSeparator\",\r\n        \"CurrencyUnit\",\r\n        \"CurrencySubUnit\",\r\n        \"Keypad (\",\r\n        \"Keypad )\",\r\n        \"Keypad {\",\r\n        \"Keypad }\",\r\n        \"Keypad Tab\",\r\n        \"Keypad Backspace\",\r\n        \"Keypad A\",\r\n        \"Keypad B\",\r\n        \"Keypad C\",\r\n        \"Keypad D\",\r\n        \"Keypad E\",\r\n        \"Keypad F\",\r\n        \"Keypad XOR\",\r\n        \"Keypad ^\",\r\n        \"Keypad %\",\r\n        \"Keypad <\",\r\n        \"Keypad >\",\r\n        \"Keypad &\",\r\n        \"Keypad &&\",\r\n        \"Keypad |\",\r\n        \"Keypad ||\",\r\n        \"Keypad :\",\r\n        \"Keypad #\",\r\n        \"Keypad Space\",\r\n        \"Keypad @\",\r\n        \"Keypad !\",\r\n        \"Keypad MemStore\",\r\n        \"Keypad MemRecall\",\r\n        \"Keypad MemClear\",\r\n        \"Keypad MemAdd\",\r\n        \"Keypad MemSubtract\",\r\n        \"Keypad MemMultiply\",\r\n        \"Keypad MemDivide\",\r\n        \"Keypad +/-\",\r\n        \"Keypad Clear\",\r\n        \"Keypad ClearEntry\",\r\n        \"Keypad Binary\",\r\n        \"Keypad Octal\",\r\n        \"Keypad Decimal\",\r\n        \"Keypad Hexadecimal\",\r\n        null, null,\r\n        \"Left Ctrl\",\r\n        \"Left Shift\",\r\n        \"Left Alt\",\r\n        \"Left Meta\",\r\n        \"Right Ctrl\",\r\n        \"Right Shift\",\r\n        \"Right Alt\",\r\n        \"Right Meta\",\r\n        null, null, null, null, null, null, null, null, null, null, null, null,\r\n        null, null, null, null, null, null, null, null, null, null, null, null,\r\n        null,\r\n        \"ModeSwitch\",\r\n        \"AudioNext\",\r\n        \"AudioPrev\",\r\n        \"AudioStop\",\r\n        \"AudioPlay\",\r\n        \"AudioMute\",\r\n        \"MediaSelect\",\r\n        \"WWW\",\r\n        \"Mail\",\r\n        \"Calculator\",\r\n        \"Computer\",\r\n        \"AC Search\",\r\n        \"AC Home\",\r\n        \"AC Back\",\r\n        \"AC Forward\",\r\n        \"AC Stop\",\r\n        \"AC Refresh\",\r\n        \"AC Bookmarks\",\r\n        \"BrightnessDown\",\r\n        \"BrightnessUp\",\r\n        \"DisplaySwitch\",\r\n        \"KBDIllumToggle\",\r\n        \"KBDIllumDown\",\r\n        \"KBDIllumUp\",\r\n        \"Eject\",\r\n        \"Sleep\",\r\n    ]; //scancode names\r\n\r\n\r\n} //Scancodes\r\n\r\n","package glm;\r\n\r\n/**\r\n * Utility class for dealing with 3D vectors\r\n */\r\nabstract Vec3(Array<Float>) {\r\n\t/**\r\n\t * Utility accessor for the first element\r\n\t */\r\n\tpublic var x(get, set):Float;\r\n\tfunction get_x():Float {\r\n\t\treturn this[0];\r\n\t}\r\n\tfunction set_x(v:Float) {\r\n\t\treturn this[0] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the second element\r\n\t */\r\n\tpublic var y(get, set):Float;\r\n\tfunction get_y():Float {\r\n\t\treturn this[1];\r\n\t}\r\n\tfunction set_y(v:Float) {\r\n\t\treturn this[1] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the third element\r\n\t */\r\n\tpublic var z(get, set):Float;\r\n\tfunction get_z():Float {\r\n\t\treturn this[2];\r\n\t}\r\n\tfunction set_z(v:Float) {\r\n\t\treturn this[2] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the first element\r\n\t */\r\n\tpublic var r(get, set):Float;\r\n\tfunction get_r():Float {\r\n\t\treturn this[0];\r\n\t}\r\n\tfunction set_r(v:Float) {\r\n\t\treturn this[0] = v;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Utility accessor for the second element\r\n\t */\r\n\tpublic var g(get, set):Float;\r\n\tfunction get_g():Float {\r\n\t\treturn this[1];\r\n\t}\r\n\tfunction set_g(v:Float) {\r\n\t\treturn this[1] = v;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Utility accessor for the third element\r\n\t */\r\n\tpublic var b(get, set):Float;\r\n\tfunction get_b():Float {\r\n\t\treturn this[2];\r\n\t}\r\n\tfunction set_b(v:Float) {\r\n\t\treturn this[2] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the first element\r\n\t */\r\n\tpublic var s(get, set):Float;\r\n\tfunction get_s():Float {\r\n\t\treturn this[0];\r\n\t}\r\n\tfunction set_s(v:Float) {\r\n\t\treturn this[0] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the second element\r\n\t */\r\n\tpublic var t(get, set):Float;\r\n\tfunction get_t():Float {\r\n\t\treturn this[1];\r\n\t}\r\n\tfunction set_t(v:Float) {\r\n\t\treturn this[1] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the third element\r\n\t */\r\n\tpublic var p(get, set):Float;\r\n\tfunction get_p():Float {\r\n\t\treturn this[2];\r\n\t}\r\n\tfunction set_p(v:Float) {\r\n\t\treturn this[2] = v;\r\n\t}\r\n\r\n\tpublic function new(x:Float=0, y:Float=0, z:Float=0) {\r\n\t\tvar arr:Array<Float> = new Array<Float>();\r\n\t\tarr.push(x);\r\n\t\tarr.push(y);\r\n\t\tarr.push(z);\r\n\t\tthis = arr;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility function to set the components\r\n\t */\r\n\tpublic function set(?x:Float, ?y:Float, ?z:Float):Vec3 {\r\n\t\tif(x != null) this[0] = x;\r\n\t\tif(y != null) this[1] = y;\r\n\t\tif(z != null) this[2] = z;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all the values to be 0\r\n\t * @return `this`\r\n\t */\r\n\tpublic function zero():Vec3 {\r\n\t\tthis[0] = 0;\r\n\t\tthis[1] = 0;\r\n\t\tthis[2] = 0;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the square of the L2-norm of the vector, `sqrt` it to get the length.\r\n\t * @return `x^2 + y^2 + z^2`\r\n\t */\r\n\tpublic function sqrLength():Float {\r\n\t\treturn (this[0] * this[0]) + (this[1] * this[1]) + (this[2] * this[2]);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the L2-norm of the vector\r\n\t * @return The length (magnitude) of the vector\r\n\t */\r\n\tpublic function length():Float {\r\n\t\treturn Math.sqrt(sqrLength());\r\n\t}\r\n\r\n\t/**\r\n\t * Normalizes the vector such that its `length == 1` while maintaining direction\r\n\t * @return `this`, normalized\r\n\t */\r\n\tpublic function normalize():Vec3 {\r\n\t\tvar l:Float = length();\r\n\t\tif(l != 0) {\r\n\t\t\tthis[0] /= l;\r\n\t\t\tthis[1] /= l;\r\n\t\t\tthis[2] /= l;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tzero();\r\n\t\t}\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Photocopies `this`\r\n\t * @return A new `Vec3` who's elements are the same as `this`\r\n\t */\r\n\tpublic function clone():Vec3 {\r\n\t\tvar copy:Vec3 = new Vec3();\r\n\t\tcopy[0] = this[0];\r\n\t\tcopy[1] = this[1];\r\n\t\tcopy[2] = this[2];\r\n\t\treturn copy;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Copies the values of `v` into `this`\r\n\t * @param v The vector to copy from\r\n\t * @return `this`\r\n\t */\r\n\tpublic function copy(v:Vec3):Vec3 {\r\n\t\tthis[0] = v[0];\r\n\t\tthis[1] = v[1];\r\n\t\tthis[2] = v[2];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Element-based addition\r\n\t * @param  b The vector to add to `this`\r\n\t * @return   `this.x + b.x`, etc\r\n\t */\r\n\tpublic function addVec3(b:Vec3):Vec3 {\r\n\t\tthis[0] += b[0];\r\n\t\tthis[1] += b[1];\r\n\t\tthis[2] += b[2];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows adding two vectors together\r\n\t */\r\n\t@:op(A + B)\r\n\tpublic static inline function addVec3Op(a:Vec3, b:Vec3):Vec3 {\r\n\t\treturn a.clone().addVec3(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Element-based subtraction\r\n\t * @param  b The vector to subtract from `this`\r\n\t * @return   `this.x - b.x`, etc\r\n\t */\r\n\tpublic function subtractVec3(b:Vec3):Vec3 {\r\n\t\tthis[0] -= b[0];\r\n\t\tthis[1] -= b[1];\r\n\t\tthis[2] -= b[2];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows subtracting two vectors\r\n\t */\r\n\t@:op(A - B)\r\n\tpublic static inline function subtractVec3Op(a:Vec3, b:Vec3):Vec3 {\r\n\t\treturn a.clone().subtractVec3(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Add a scalar to this\r\n\t * @param  b The scalar to add\r\n\t * @return   `b` added to `this`\r\n\t */\r\n\tpublic function addScalar(b:Float):Vec3 {\r\n\t\tthis[0] += b;\r\n\t\tthis[1] += b;\r\n\t\tthis[2] += b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows adding by a scalar (`this + 4.2`)\r\n\t */\r\n\t@:op(A + B)\r\n\tpublic static inline function addScalarOp(a:Vec3, b:Float):Vec3 {\r\n\t\treturn a.clone().addScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows adding by a scalar (`4.2 + this`)\r\n\t */\r\n\t@:op(A + B)\r\n\tpublic static inline function addScalarOp2(b:Float, a:Vec3):Vec3 {\r\n\t\treturn a.clone().addScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Subtract a scalar from this\r\n\t * @param  b The scalar to subtract\r\n\t * @return   `b` subtracted from `this`\r\n\t */\r\n\tpublic function subtractScalar(b:Float):Vec3 {\r\n\t\tthis[0] -= b;\r\n\t\tthis[1] -= b;\r\n\t\tthis[2] -= b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows subtracting by a scalar (`this + 4.2`)\r\n\t */\r\n\t@:op(A - B)\r\n\tpublic static inline function subtractScalarOp(a:Vec3, b:Float):Vec3 {\r\n\t\treturn a.clone().subtractScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows subtracting by a scalar (`4.2 + this`)\r\n\t */\r\n\t@:op(A - B)\r\n\tpublic static inline function subtractScalarOp2(a:Float, b:Vec3):Vec3 {\r\n\t\treturn b.clone().multiplyScalar(-1).addScalar(a);\r\n\t}\r\n\r\n\t/**\r\n\t * Mutliply this by a scalar\r\n\t * @param  b The scalar to multiply by\r\n\t * @return   `this`, scaled by `b`\r\n\t */\r\n\tpublic function multiplyScalar(b:Float):Vec3 {\r\n\t\tthis[0] *= b;\r\n\t\tthis[1] *= b;\r\n\t\tthis[2] *= b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying by a scalar (`this * 4.2`)\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyScalarOp(a:Vec3, b:Float):Vec3 {\r\n\t\treturn a.clone().multiplyScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying by a scalar (`4.2 * this`)\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyScalarOp2(b:Float, a:Vec3):Vec3 {\r\n\t\treturn a.clone().multiplyScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Dividy this by a scalar\r\n\t * @param  b The scalar to divide by\r\n\t * @return   `this`, divided by `b`\r\n\t */\r\n\tpublic function divideScalar(b:Float):Vec3 {\r\n\t\tthis[0] /= b;\r\n\t\tthis[1] /= b;\r\n\t\tthis[2] /= b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows dividing by a scalar (`this / 4.2`)\r\n\t */\r\n\t@:op(A / B)\r\n\tpublic static inline function divideScalarOp(a:Vec3, b:Float):Vec3 {\r\n\t\treturn a.clone().divideScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `vec[i]` where `i ∈ [0, 1, 2]`\r\n\t */\r\n\t@:arrayAccess public inline function arrayGet(i:Int):Float {\r\n\t\treturn this[i];\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `vec[i] = x` where `i ∈ [0, 1, 2]`\r\n\t */\r\n\t@:arrayAccess public inline function arraySet(i:Int, x:Float):Float {\r\n\t\treturn this[i] = x;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `this` to an array of floats\r\n\t * @return `this`\r\n\t */\r\n\tpublic inline function toArray():Array<Float> {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolate `this` from its current value to the target\r\n\t * @param  target The target endpoint\r\n\t * @param  t      a number in the range `[0, 1]` which describes how far\r\n\t *                along to interpolate.\r\n\t * @return        `this`\r\n\t */\r\n\tpublic inline function lerp(target:Vec3, t:Float):Vec3 {\r\n\t\tthis[0] = GLM.lerp(this[0], target[0], t);\r\n\t\tthis[1] = GLM.lerp(this[1], target[1], t);\r\n\t\tthis[2] = GLM.lerp(this[2], target[2], t);\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Up-converts `this` to a Vec4 by padding the `w` component\r\n\t * of the result to be `0`\r\n\t */\r\n\tpublic inline function toVec4():Vec4 {\r\n\t\treturn new Vec4(x, y, z, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the dot product between two Vec3s\r\n\t */\r\n\tpublic static inline function dot(a:Vec3, b:Vec3):Float {\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the cross product between two Vec3s\r\n\t * @return   `a ✕ b`\r\n\t */\r\n\tpublic static inline function cross(a:Vec3, b:Vec3):Vec3 {\r\n\t\treturn new Vec3(\r\n\t\t\ta.y * b.z - b.y * a.z,\r\n\t\t\ta.z * b.x - b.z * a.x,\r\n\t\t\ta.x * b.y - b.x * a.y\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts from Vec2s to Vec3s using standard casting\r\n\t */\r\n\t@:from\r\n\tpublic static inline function fromVec2(v:Vec2):Vec3 {\r\n\t\treturn new Vec3(v.x, v.y, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts from Vec4s to Vec3s using standard casting\r\n\t */\r\n\t@:from\r\n\tpublic static inline function fromVec4(v:Vec4):Vec3 {\r\n\t\treturn new Vec3(v.x, v.y, v.z);\r\n\t}\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","package tusk;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.events.*;\r\n\r\nimport promhx.Deferred;\r\n\r\n#if editor\r\nimport tusk.editor.EditorEvent;\r\n#end\r\n\r\n@:autoBuild(tusk.macros.EventConnector.connect())\r\nclass Scene {\r\n\tpublic var name(default, null):String = null;\r\n\r\n\tpublic var sceneDone:Deferred<Scene> = new Deferred<Scene>();\r\n\r\n\t/**\r\n\t * All the processors used in the scene\r\n\t */\r\n\tpublic var processors:Array<Processor>;\r\n\r\n\t/**\r\n\t * All the entities in the scene\r\n\t */\r\n\tpublic var entities:Array<Entity>;\r\n\r\n    #if editor\r\n    public var entitiesChanged:EditorEvent = new EditorEvent();\r\n    #end\r\n\r\n\tpublic function new(?name:String) {\r\n\t\tthis.name = name;\r\n\t\tprocessors = new Array<Processor>();\r\n\t\tentities = new Array<Entity>();\r\n\r\n\t\t#if editor\r\n\t\tentitiesChanged.trigger();\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * These will be replaced by a macro\r\n\t */\r\n\t@:dox(hide)\r\n\tpublic function ___connectRoutes() {}\r\n\t@:dox(hide)\r\n\tpublic function ___disconnectRoutes() {}\r\n\r\n\t/**\r\n\t * Checks whether the given processor exists or not\r\n\t * @param  processor the processor\r\n\t * @return          A boolean indicating its existence in the game\r\n\t */\r\n\tfunction hasProcessor(processor:Processor):Bool {\r\n\t\treturn processors.indexOf(processor) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given processor to the list of processors\r\n\t * @param  processor [description]\r\n\t * @return           [description]\r\n\t */\r\n\t// todo: allow multiple processors of the same type\r\n\tfunction useProcessor(processor:Processor) {\r\n\t\tif(hasProcessor(processor)) {\r\n\t\t\tthrow new tusk.debug.Exception(\"Can't add processor '\" + Type.getClassName(Type.getClass(processor)) + \"' because it already exists!\");\r\n\t\t}\r\n\t\tprocessor.___connectRoutes();\r\n\t\tprocessors.push(processor);\r\n\t}\r\n\r\n\t/**\r\n\t * Get a processor by its type\r\n\t * @param  type<Processor> The `Class` of the processor to get\r\n\t * @return                 The instance of the processor\r\n\t */\r\n\tfunction getProcessor(type:Class<Processor>):Processor {\r\n\t\tfor(processor in processors) {\r\n\t\t\tif(Type.getClass(processor) == type) {\r\n\t\t\t\treturn processor;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Override to hook into when the application is ready\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onLoad(event:LoadEvent) {}\r\n\r\n\t/**\r\n\t * Override to hook into when the application is being destroyed\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onDestroy(event:DestroyEvent) {}\r\n\r\n\t/**\r\n\t * Override to hook into when the application's timer updates\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onUpdate(event:UpdateEvent) {}\r\n\r\n\t/**\r\n\t * Override to hook into the render function\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onRender(event:RenderEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when a key is pressed\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onKeyDown(event:KeyEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when a key is released\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onKeyUp(event:KeyEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when a mouse button is pressed\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onMouseDown(event:MouseButtonEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when a mouse button is released\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onMouseUp(event:MouseButtonEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when the mouse is moved\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onMouseMove(event:MouseMoveEvent) {}\r\n}","import tusk.debug.Log;\nimport tusk.lib.comp.Camera2DComponent;\nimport tusk.lib.comp.MaterialComponent;\nimport tusk.lib.comp.MeshComponent;\nimport tusk.lib.comp.TransformComponent;\nimport tusk.lib.comp.TextComponent;\nimport tusk.lib.comp.TimedPromiseComponent;\nimport tusk.lib.comp.CircleEffectComponent;\nimport tusk.lib.proc.Camera2DProcessor;\nimport tusk.lib.proc.MaterialProcessor;\nimport tusk.lib.proc.MeshProcessor;\nimport tusk.lib.proc.Renderer2DProcessor;\nimport tusk.lib.proc.TransformProcessor;\nimport tusk.lib.proc.TextProcessor;\nimport tusk.lib.proc.TimedPromiseProcessor;\nimport tusk.lib.proc.CircleEffectRendererProcessor;\nimport tusk.Tusk;\nimport tusk.Scene;\nimport tusk.Entity;\nimport tusk.resources.*;\n\nimport promhx.Promise;\n\nimport glm.Vec2;\nimport glm.Vec3;\nimport glm.Quat;\nimport glm.Vec4;\n\nimport tusk.events.*;\n\nclass Intro extends Scene {\n\tpublic function new() {\n\t\tsuper('Intro screen!');\n\t}\n\n\tvar cec:CircleEffectComponent;\n\tvar p2Text:TextComponent;\n\n\toverride public function onLoad(event:LoadEvent) {\n\t\tif(event.scene != this) return;\n\t\tLog.info(\"loading intro..\");\n\n\t\t// load the resources\n\t\tPromise.when(\n\t\t\ttusk.defaults.Primitives.loadTextMesh(),\n\t\t\t/*Tusk.assets.loadTexture(tusk.Files.fonts___paper_cuts__png),\n\t\t\tTusk.assets.loadText(tusk.Files.fonts___paper_cuts__fnt),*/\n\t\t\ttusk.defaults.Fonts.loadSubatomic_Screen(),\n\t\t\ttusk.defaults.Materials.loadTextBasic(),\n\t\t\ttusk.defaults.Primitives.loadQuad(),\n\t\t\ttusk.defaults.Materials.loadEffectCircleOut(),\n\t\t\ttusk.defaults.Materials.loadUnlitColoured()\n\t\t).then(function(textMesh:Mesh, /*fontTexture:Texture, fontSrc:Text*/font:Font, fontMat:Material, quad:Mesh, circleOutMat:Material, bgMaterial:Material) {\n\t\t\tCamera2DProcessor.cameras = new Array<Camera2DComponent>();\n\t\t\t// set the material's texture\n\t\t\tfontMat.textures = new Array<Texture>();\n\t\t\tfontMat.textures.push(font.texture);\n\n\t\t\t// create the font\n\t\t\t//tusk.resources.Font.load('papercuts.fnt', fontSrc.text, font.texture).then(function(font:Font) {\n\t\t\t\t// load processors\n\t\t\t\tthis.useProcessor(new TimedPromiseProcessor());\n\t\t\t\tthis.useProcessor(new MaterialProcessor());\n\t\t\t\tthis.useProcessor(new Camera2DProcessor());\n\t\t\t\tthis.useProcessor(new TransformProcessor());\n\t\t\t\tthis.useProcessor(new TextProcessor());\n\t\t\t\tthis.useProcessor(new MeshProcessor());\n\t\t\t\tthis.useProcessor(new Renderer2DProcessor(new Vec4(0.25, 0.25, 0.25, 1.0)));\n\t\t\t\tthis.useProcessor(new CircleEffectRendererProcessor());\n\n\t\t\t\t// create the camera\n\t\t\t\tvar w:Float = Tusk.instance.app.window.width;\n\t\t\t\tvar h:Float = Tusk.instance.app.window.height;\n\t\t\t\tentities.push(new Entity(this, 'Camera', [\n\t\t\t\t\tnew TransformComponent(),\n\t\t\t\t\tnew Camera2DComponent(new Vec2(w, h) / -2.0, new Vec2(w, h) / 2.0, -100, 100)\n\t\t\t\t]));\n\n\t\t\t\t// create the background\n\t\t\t\tvar bgMesh:Mesh = quad.clone('mesh.bgintro');\n\t\t\t\tbgMesh.colours = new Array<Vec4>();\n\t\t\t\tvar gradientColours:Array<Vec4> = Util.randomGradientColours();\n\t\t\t\tfor(v in bgMesh.vertices) {\n\t\t\t\t\tvar colour:Vec4 = gradientColours[if(v.y > 0) 1 else 0];\n\t\t\t\t\tbgMesh.colours.push(colour);\n\t\t\t\t}\n\t\t\t\tentities.push(new Entity(this, 'Image', [\n\t\t\t\t\tnew TransformComponent(new Vec3(0, 0, 1), Quat.identity(), new Vec3(1024, 1024, 1024)),\n\t\t\t\t\tnew MeshComponent(bgMesh),\n\t\t\t\t\tnew MaterialComponent(bgMaterial),\n\t\t\t\t]));\n\n\t\t\t\t// create the title\n\t\t\t\tentities.push(new Entity(this, 'title', [\n\t\t\t\t\tnew TransformComponent(new Vec3(0, 116, 0.05), Quat.identity(), new Vec3(5, 5, 5)),\n\t\t\t\t\tnew MeshComponent(textMesh.clone('titletext')),\n\t\t\t\t\tnew MaterialComponent(fontMat.path),\n\t\t\t\t\tnew TextComponent(font, 'Ludum Party!',\n\t\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\n\t\t\t\t\t\tnew Vec4(1, 1, 1, 1))\n\t\t\t\t]));\n\n\t\t\t\t// create the instructions\n\t\t\t\tentities.push(new Entity(this, 'instructions', [\n\t\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0.05), Quat.identity(), new Vec3(3, 3, 3)),\n\t\t\t\t\tnew MeshComponent(textMesh.clone('instructionstext')),\n\t\t\t\t\tnew MaterialComponent(fontMat.path),\n\t\t\t\t\tnew TextComponent(font, 'Player 1:\\nHold down A+B to start!',\n\t\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\n\t\t\t\t\t\tnew Vec4(1, 1, 1, 1))\n\t\t\t\t]));\n\n\t\t\t\t// create player 1's indication\n\t\t\t\tentities.push(new Entity(this, 'p1keys', [\n\t\t\t\t\tnew TransformComponent(new Vec3(-256, -192, 0.05), Quat.identity(), new Vec3(3, 3, 3)),\n\t\t\t\t\tnew MeshComponent(textMesh.clone('p1keystext')),\n\t\t\t\t\tnew MaterialComponent(fontMat.path),\n\t\t\t\t\tnew TextComponent(font, 'Player 1:\\nA => Q\\nB => E',\n\t\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\n\t\t\t\t\t\tnew Vec4(1, 1, 1, 1))\n\t\t\t\t]));\n\n\t\t\t\t// create player 2 / CPU indication\n\t\t\t\tp2Text = new TextComponent(font, 'Player 2:\\nCPU\\nPress \\'I\\' to join!',\n\t\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\n\t\t\t\t\t\tnew Vec4(1, 1, 1, 1));\n\t\t\t\tentities.push(new Entity(this, 'p2keys', [\n\t\t\t\t\tnew TransformComponent(new Vec3(256, -192, 0.05), Quat.identity(), new Vec3(3, 3, 3)),\n\t\t\t\t\tnew MeshComponent(textMesh.clone('p2keystext')),\n\t\t\t\t\tnew MaterialComponent(fontMat.path),\n\t\t\t\t\tp2Text\n\t\t\t\t]));\n\n\t\t\t\tcec = new CircleEffectComponent(true);\n\t\t\t\tentities.push(new Entity(this, 'Circle Effect', [\n\t\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0.1), Quat.identity(), new Vec3(1024, 1024, 1024)),\n\t\t\t\t\tnew MeshComponent(quad.path),\n\t\t\t\t\tnew MaterialComponent(circleOutMat.path),\n\t\t\t\t\tcec\n\t\t\t\t]));\n\n\t\t\t\t// tell the processors we've started\n\t\t\t\tTusk.router.onEvent(tusk.events.EventType.Start);\n\t\t\t//});\n\t\t});\n\t}\n\n\toverride function onKeyDown(event:KeyEvent) {\n\t\tif(p2Text != null && (event.keyCode == snow.types.Types.Key.key_i || event.keyCode == snow.types.Types.Key.key_p)) {\n\t\t\tGameTracker.player[1].isCPU = !GameTracker.player[1].isCPU;\n\t\t\tp2Text.text = if(GameTracker.player[1].isCPU) {\n\t\t\t\t'Player 2:\\nCPU\\nPress \\'I\\' to join!';\n\t\t\t}\n\t\t\telse {\n\t\t\t\t'Player 2:\\nA => I\\nB => P';\n\t\t\t}\n\t\t}\n\t}\n\n\tvar startTimer:Float = 0;\n\toverride function onUpdate(event:UpdateEvent) {\n\t\tif(cec == null || !cec.done.isResolved() || startTimer < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar aDown:Bool = Tusk.instance.app.input.keydown(GameTracker.player[0].btnA);\n\t\tvar bDown:Bool = Tusk.instance.app.input.keydown(GameTracker.player[0].btnB);\n\t\tif(aDown && bDown) {\n\t\t\tstartTimer += event.dt;\n\t\t}\n\t\telse {\n\t\t\tstartTimer = 0;\n\t\t}\n\n\t\tif(startTimer >= 0.5) {\n\t\t\tstartTimer = -1;\n\t\t\tcec.t = 0;\n\t\t\tcec.circleIn = false;\n\t\t\tcec.reset();\n\t\t\tcec.done.then(function(_) {\n\t\t\t\tsceneDone.resolve(this);\n\t\t\t});\n\t\t}\n\t}\n}","package promhx;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Context;\n#end\nimport promhx.base.EventLoop;\nimport promhx.base.AsyncBase;\nimport promhx.error.PromiseError;\n\n@:expose\nclass Promise<T> extends AsyncBase<T>{\n    var _rejected   : Bool;\n    public function new(?d:Deferred<T>){\n        super(d);\n        _rejected = false;\n    }\n\n    /**\n      Macro method that binds the promise arguments to a single function\n      callback that is triggered when all promises are resolved.\n      Note: You may call this function on as many promise arguments as you\n      like.\n     **/\n    macro public static function when<T>( args : Array<ExprOf<Promise<Dynamic>>>) : Expr {\n\n        // a default position\n        var pos = Context.currentPos();\n\n        //the macro arguments translated to an array expression.\n        var eargs = {expr:EArrayDecl(args), pos:pos};\n\n        // An array of the resolved promise values\n        var epargs = [for (i in 0...args.length) macro arr[$v{i}]._val];\n\n        // the returned function that actually does the runtime work.\n        return macro @:privateAccess {\n            // a function that accepts a variable argument function\n            var varargf = function(f){\n                // we wait on all of the promises with the iterable-based \"whenAll\"\n                // this will resolve an array, so we use pipe to ignore it, and set\n                // up a new promise for return.\n                // this new promise resolves via a macro-defined function expression\n                // on \"f\" that provides arity and types for the resolved promise values.\n                var ret = new promhx.Promise();\n                var arr : Array<promhx.Promise<Dynamic>> = $eargs;\n                var p = promhx.Promise.whenAll(arr);\n                p._update.push({\n                    async : ret,\n                    linkf : function(x) ret.handleResolve(f($a{epargs}))\n                });\n                return ret;\n            };\n\n            // return an anonymous object with the function definition for \"then\"\n            { then : varargf };\n        }\n    }\n\n    /**\n      Utility function to determine if a Promise value has been rejected.\n     **/\n    public inline function isRejected(): Bool {\n        return _rejected;\n    }\n\n    /**\n      Rejects the promise, throwing an error.\n     **/\n    public function reject(e : Dynamic): Void {\n        _rejected = true;\n        handleError(e);\n    }\n\n    /**\n      Transforms an iterable of promises into a single promise which resolves\n      to an array of values.\n     **/\n    public static function whenAll<T>(itb : Iterable<Promise<T>>) : Promise<Array<T>> {\n        var ret : Promise<Array<T>> = new Promise();\n        AsyncBase.linkAll(itb, ret);\n        return ret;\n    }\n\n    /**\n      Resolves the given value for processing on any waiting functions.\n     **/\n    override function handleResolve(val : T): Void {\n        if (_resolved) {\n            var msg = \"Promise has already been resolved\";\n            throw(AlreadyResolved(msg));\n        }\n        _resolve(val);\n    }\n\n    /**\n      add a wait function directly to the Promise instance.\n     **/\n    override public function then<A>(f : T->A): Promise<A> {\n        var ret  = new Promise<A>();\n        AsyncBase.link(this, ret, f);\n        return ret;\n    }\n\n    override public function unlink( to : AsyncBase<Dynamic>) {\n        EventLoop.enqueue(function(){\n            if (!isFulfilled()) {\n                var msg = \"Downstream Promise is not fullfilled\";\n                handleError(DownstreamNotFullfilled(msg));\n            }\n            else{\n                _update =  _update.filter(function(x) return x.async != to);\n            }\n        });\n    }\n\n    override function handleError(error : Dynamic) : Void {\n       _rejected = true; \n       _handleError(error);\n    }\n\n    public function pipe<A>(f : T->Promise<A>) : Promise<A> {\n        var ret = new Promise<A>();\n        AsyncBase.pipeLink(this, ret, f);\n        return ret;\n    }\n\n    /**\n      Pipes an error back into a normal type.\n      **/\n    public function errorPipe( f: Dynamic-> Promise<T>){\n        var ret = new Promise<T>();\n        catchError(function(e){\n            var piped = f(e);\n            piped.then(ret._resolve);\n        });\n        then(ret._resolve);\n        return ret;\n    }\n\n    /**\n      Converts any value to a resolved Promise\n     **/\n    public static function promise<T>(_val : T): Promise<T> {\n        var ret = new Promise<T>();\n        ret.handleResolve(_val);\n        return ret;\n    }\n}\n\n","package tusk.macros;\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\n\r\n/**\r\n * This a build macro which will fill out the function `___connectRoutes`\r\n * with routing expressions for the tusk core.\r\n */\r\n@:noCompletion class EventConnector {\r\n    /**\r\n     * Connect the fields. Apply to a game class using:\r\n     * ```haxe\r\n     * @:autoBuild(tusk.macros.EventConnector.connect())\r\n     * ```\r\n     * @return an array of the fields in the class (the `___connectRoutes` function will be modified)\r\n     */\r\n    macro public static function connect():Array<Field> {\r\n        // grab all the fields\r\n        var fields = Context.getBuildFields();\r\n        var connectField:Field = null;\r\n        var disconnectField:Field = null;\r\n\r\n        // find the connection function\r\n        for(field in fields) {\r\n            switch(field.name) {\r\n                case '___connectRoutes': connectField = field;\r\n                case '___disconnectRoutes': connectField = field;\r\n            }\r\n        }\r\n\r\n        // make sure we have the connection field\r\n        if(connectField == null) {\r\n            connectField = {\r\n                name: '___connectRoutes',\r\n                doc: null, meta: [], access: [AOverride, APublic],\r\n                pos: Context.currentPos(),\r\n                kind: FFun({ params:[], args:[], ret:null, expr:macro { tusk.debug.Log.trace('Connecting routes for \\'' + Type.getClassName(Type.getClass(this)) + '\\'...'); } })\r\n            };\r\n            fields.push(connectField);\r\n        }\r\n\r\n        // make sure we have the disconnection field\r\n        if(disconnectField == null) {\r\n            disconnectField = {\r\n                name: '___disconnectRoutes',\r\n                doc: null, meta: [], access: [AOverride, APublic],\r\n                pos: Context.currentPos(),\r\n                kind: FFun({ params:[], args:[], ret:null, expr:macro { tusk.debug.Log.trace('Disconnecting routes for \\'' + Type.getClassName(Type.getClass(this)) + '\\'...'); } })\r\n            };\r\n            fields.push(disconnectField);\r\n        }\r\n\r\n        // now find all our methods to auto-connect\r\n        for(field in fields) {\r\n            switch(field.name) {\r\n                case 'onLoad',\r\n                     'onStart',\r\n                     'onUpdate',\r\n                     'onRender',\r\n                     'onDestroy',\r\n                     'onKeyDown',\r\n                     'onKeyUp',\r\n                     'onMouseDown',\r\n                     'onMouseUp',\r\n                     'onMouseMove': {\r\n                     \tconnectEvent(connectField, field);\r\n                        disconnectEvent(disconnectField, field);\r\n                     }\r\n            }\r\n        }\r\n\r\n        return fields;\r\n    }\r\n\r\n    /**\r\n     * Assuming we've found events to connect, use this to insert\r\n     * the routing expression into the connection method\r\n     * @param connectField the field corresponding to the `___connectRoutes` method\r\n     * @param eventField   the field corresponding to the detected event method\r\n     */\r\n    private static function connectEvent(connectField:Field, eventField:Field) {\r\n        #if !docgen\r\n        var eventName:String = eventField.name.substr(2);\r\n        switch(connectField.kind) {\r\n            default:\r\n            case FFun(f):\r\n                switch(f.expr.expr) {\r\n                    default:\r\n                    case EBlock(exprs):\r\n                        exprs.push(Context.parse('tusk.Tusk.routeEvent(tusk.events.EventType.${eventName}, ${eventField.name})', eventField.pos));\r\n                }\r\n        }\r\n        #end\r\n    }\r\n\r\n    /**\r\n     * Assuming we've found events to disconnect, use this to insert\r\n     * the routing expression into the disconnection method\r\n     * @param connectField the field corresponding to the `___disconnectRoutes` method\r\n     * @param eventField   the field corresponding to the detected event method\r\n     */\r\n    private static function disconnectEvent(disconnectField:Field, eventField:Field) {\r\n        #if !docgen\r\n        var eventName:String = eventField.name.substr(2);\r\n        switch(disconnectField.kind) {\r\n            default:\r\n            case FFun(f):\r\n                switch(f.expr.expr) {\r\n                    default:\r\n                    case EBlock(exprs):\r\n                        exprs.push(Context.parse('tusk.Tusk.unrouteEvent(tusk.events.EventType.${eventName}, ${eventField.name})', eventField.pos));\r\n                }\r\n        }\r\n        #end\r\n    }\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA linked-list of elements. The list is composed of two-elements arrays\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole array content every time.\n**/\nclass List<T> {\n\n\tprivate var h : Array<Dynamic>;\n\tprivate var q : Array<Dynamic>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq[1] = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x : Array<Dynamic> = #if neko\n\t\t\tuntyped __dollar__array(item,h)\n\t\t#else\n\t\t\t[item,h]\n\t\t#end;\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h[0];\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q[0];\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h[0];\n\t\th = h[1];\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l[0] == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l[1];\n\t\t\t\telse\n\t\t\t\t\tprev[1] = l[1];\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l[1];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l[0]));\n\t\t\tl = l[1];\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l[0]);\n\t\t\tl = l[1];\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\nprivate class ListIterator<T> {\n\tvar head:Array<Dynamic>;\n\tvar val:Dynamic;\n\n\tpublic inline function new(head:Array<Dynamic>) {\n\t\tthis.head = head;\n\t\tthis.val = null;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tval = head[0];\n\t\thead = head[1];\n\t\treturn val;\n\t}\n}\n","import tusk.debug.Log;\nimport tusk.lib.comp.TextComponent;\nimport tusk.lib.comp.*;\nimport tusk.lib.proc.*;\nimport tusk.Tusk;\nimport tusk.Scene;\nimport tusk.Entity;\nimport tusk.resources.*;\n\nimport promhx.Promise;\n\nimport glm.Vec2;\nimport glm.Vec3;\nimport glm.Quat;\nimport glm.Vec4;\n\nimport tusk.events.*;\n\nclass LoadingScreen extends Scene {\n\tprivate var gameName:String;\n\tprivate var loadingDone:Promise<Scene>;\n\n\tpublic function new(gameName:String, loadingDone:Promise<Scene>) {\n\t\tthis.gameName = gameName;\n\t\tthis.loadingDone = loadingDone;\n\t\tsuper('LoadingScreen');\n\t}\n\n\tprivate static var salutations:Array<String> = ['Mr.', 'Mrs.', 'Ms.', 'Dr.', 'The'];\n\tprivate static var adjectives:Array<String> = ['Purple', 'Green', 'Fast', 'Slow', 'Time-Travelling', 'Time Traveller\\'s', 'Clever', 'Crispy',\n\t\t'Clumsy', 'Thrifty', 'Quick', 'Cranky', 'Lumpy', 'Polite', 'Sparkling', 'Sturdy', 'Creaky', 'Odd', 'Friendly'];\n\tprivate static var nouns:Array<String> = ['Wife', 'Husband', 'Son', 'Daughter', 'Lawyer', 'Swordfish', 'Squid', 'Cheetah', 'Space-man',\n\t\t'Cosmonaut', 'Apprentice', 'Champ', 'Pancake', 'Chicken', 'Unicorn', 'Bunny', 'Gnome', 'Mermaid'];\n\tprivate function generateName():String {\n\t\tvar s:StringBuf = new StringBuf();\n\t\ts.add(salutations[tusk.math.Random.int(0, salutations.length - 1)]);\n\t\ts.add(' ');\n\t\ts.add(adjectives[tusk.math.Random.int(0, adjectives.length - 1)]);\n\t\ts.add(' ');\n\t\ts.add(nouns[tusk.math.Random.int(0, nouns.length - 1)]);\n\t\treturn s.toString();\n\t}\n\n\toverride public function onLoad(event:LoadEvent) {\n\t\tif(event.scene != this) return;\n\t\tLog.info(\"load screen..\");\n\n\t\t// load the resources\n\t\tPromise.when(\n\t\t\ttusk.defaults.Primitives.loadTextMesh(),\n\t\t\ttusk.defaults.Fonts.loadSubatomic_Screen(),\n\t\t\ttusk.defaults.Materials.loadTextBasic(),\n\t\t\ttusk.defaults.Primitives.loadQuad(),\n\t\t\ttusk.defaults.Materials.loadEffectCircleOut(),\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___loadingcrunch__ogg),\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___introwobble__ogg),\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___introtrumpet__ogg),\n\t\t\ttusk.defaults.Materials.loadUnlitColoured()\n\t\t).then(function(textMesh:Mesh, font:Font, fontMat:Material, quad:Mesh, circleOutMat:Material, loadingCrunch:Sound, introWobble:Sound, trumpet:Sound, bgMaterial:Material) {\n\t\t\tCamera2DProcessor.cameras = new Array<Camera2DComponent>();\n\t\t\t// set the material's texture\n\t\t\tfontMat.textures = new Array<Texture>();\n\t\t\tfontMat.textures.push(font.texture);\n\n\t\t\t// load processors\n\t\t\tthis.useProcessor(new TimedPromiseProcessor());\n\t\t\tthis.useProcessor(new MaterialProcessor());\n\t\t\tthis.useProcessor(new Camera2DProcessor());\n\t\t\tthis.useProcessor(new loading.SlamProcessor());\n\t\t\tthis.useProcessor(new loading.SlideProcessor());\n\t\t\tthis.useProcessor(new TransformProcessor());\n\t\t\tthis.useProcessor(new TextProcessor());\n\t\t\tthis.useProcessor(new MeshProcessor());\n\t\t\tthis.useProcessor(new Renderer2DProcessor(new Vec4(0.25, 0.25, 0.25, 1.0)));\n\t\t\tthis.useProcessor(new CircleEffectRendererProcessor());\n\t\t\tthis.useProcessor(new SoundProcessor());\n\n\t\t\t// create the camera\n\t\t\tvar w:Float = Tusk.instance.app.window.width;\n\t\t\tvar h:Float = Tusk.instance.app.window.height;\n\t\t\tentities.push(new Entity(this, 'Camera', [\n\t\t\t\tnew TransformComponent(),\n\t\t\t\tnew Camera2DComponent(new Vec2(w, h) / -2.0, new Vec2(w, h) / 2.0, -100, 100)\n\t\t\t]));\n\n\t\t\t// create the background\n\t\t\tvar bgMesh:Mesh = quad.clone('mesh.bgintro');\n\t\t\tbgMesh.colours = new Array<Vec4>();\n\t\t\tvar gradientColours:Array<Vec4> = Util.randomGradientColours();\n\t\t\tfor(v in bgMesh.vertices) {\n\t\t\t\tvar colour:Vec4 = gradientColours[if(v.y > 0) 1 else 0];\n\t\t\t\tbgMesh.colours.push(colour);\n\t\t\t}\n\t\t\tentities.push(new Entity(this, 'Image', [\n\t\t\t\tnew TransformComponent(new Vec3(0, 0, 1), Quat.identity(), new Vec3(1024, 1024, 1024)),\n\t\t\t\tnew MeshComponent(bgMesh),\n\t\t\t\tnew MaterialComponent(bgMaterial),\n\t\t\t]));\n\n\t\t\tvar cec:CircleEffectComponent = new CircleEffectComponent(true);\n\t\t\tentities.push(new Entity(this, 'Circle Effect', [\n\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0.1), Quat.identity(), new Vec3(1024, 1024, 1024)),\n\t\t\t\tnew MeshComponent(quad.path),\n\t\t\t\tnew MaterialComponent(circleOutMat.path),\n\t\t\t\tcec\n\t\t\t]));\n\t\t\tcec.done.pipe(function(_) {\n\t\t\t\tentities.push(new Entity(this, '', [new SoundComponent(loadingCrunch.path, true)]));\n\t\t\t\tvar scp1:loading.SlamComponent = new loading.SlamComponent(0.5, 16, 2);\n\t\t\t\tentities.push(new Entity(this, 'Player 1', [\n\t\t\t\t\tnew TransformComponent(new Vec3(-256, 192, 0.05), Quat.identity(), new Vec3(2, 2, 2)),\n\t\t\t\t\tnew MeshComponent(textMesh.clone('p1text')),\n\t\t\t\t\tnew MaterialComponent(fontMat.path),\n\t\t\t\t\tnew TextComponent(font, '${GameTracker.player[0].name}\\nAKA. ${generateName()}\\n(with ${GameTracker.player[0].score} points!)',\n\t\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\n\t\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\n\t\t\t\t\tscp1\n\t\t\t\t]));\n\t\t\t\treturn scp1.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\tentities.push(new Entity(this, '', [new SoundComponent(loadingCrunch.path, true)]));\n\t\t\t\tvar scvs:loading.SlamComponent = new loading.SlamComponent(0.5, 96, 16);\n\t\t\t\tentities.push(new Entity(this, 'VS', [\n\t\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0.05), Quat.identity(), new Vec3(16, 16, 16)),\n\t\t\t\t\tnew MeshComponent(textMesh.clone('vstext')),\n\t\t\t\t\tnew MaterialComponent(fontMat.path),\n\t\t\t\t\tnew TextComponent(font, 'VS',\n\t\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Top,\n\t\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\n\t\t\t\t\tscvs\n\t\t\t\t]));\n\t\t\t\treturn scvs.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\tentities.push(new Entity(this, '', [new SoundComponent(loadingCrunch.path, true)]));\n\t\t\t\tvar scp2:loading.SlamComponent = new loading.SlamComponent(0.5, 16, 2);\n\t\t\t\tentities.push(new Entity(this, 'Player 2', [\n\t\t\t\t\tnew TransformComponent(new Vec3(256, 192, 0.05), Quat.identity(), new Vec3(2, 2, 2)),\n\t\t\t\t\tnew MeshComponent(textMesh.clone('p2text')),\n\t\t\t\t\tnew MaterialComponent(fontMat.path),\n\t\t\t\t\tnew TextComponent(font, '${GameTracker.player[1].name}\\nAKA. ${generateName()}\\n(with ${GameTracker.player[1].score} points!)',\n\t\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\n\t\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\n\t\t\t\t\tscp2\n\t\t\t\t]));\n\t\t\t\treturn scp2.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\tentities.push(new Entity(this, '', [new SoundComponent(introWobble.path, true)]));\n\t\t\t\tvar scn:loading.SlideComponent = new loading.SlideComponent(1, new Vec3(0, -300, 0.05), new Vec3(0, -192, 0.05));\n\t\t\t\tentities.push(new Entity(this, 'in:\\n${this.gameName}', [\n\t\t\t\t\tnew TransformComponent(new Vec3(0, -192, 0.05), Quat.identity(), new Vec3(4, 4, 4)),\n\t\t\t\t\tnew MeshComponent(textMesh.clone('vstext')),\n\t\t\t\t\tnew MaterialComponent(fontMat.path),\n\t\t\t\t\tnew TextComponent(font, 'in:\\n${this.gameName}',\n\t\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\n\t\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\n\t\t\t\t\tscn\n\t\t\t\t]));\n\t\t\t\treturn scn.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\t// create the trumpet sound effect\n\t\t\t\tentities.push(new Entity(this, 'Trumpet', [\n\t\t\t\t\tnew SoundComponent(trumpet.path, true)\n\t\t\t\t]));\n\n\t\t\t\t// wait a second\n\t\t\t\tvar fadeDelay:TimedPromiseComponent = new TimedPromiseComponent(1);\n\t\t\t\tentities.push(new Entity(this, 'Delay', [fadeDelay]));\n\t\t\t\treturn fadeDelay.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\tLog.info('Waiting for loading to complete..');\n\t\t\t\treturn loadingDone;\n\t\t\t}).pipe(function(_) {\n\t\t\t\tcec.t = 0;\n\t\t\t\tcec.circleIn = false;\n\t\t\t\tcec.reset();\n\t\t\t\treturn cec.done;\n\t\t\t}).then(function(_) {\n\t\t\t\tLog.info('Loading screen done!');\n\t\t\t\tsceneDone.resolve(this);\n\t\t\t}).catchError(function(err:Dynamic) {\n\t\t\t\tLog.error(err);\n\t\t\t});\n\n\t\t\t// tell the processors we've started\n\t\t\tTusk.router.onEvent(tusk.events.EventType.Start);\n\t\t});\n\t}\n}","package tusk;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.events.*;\r\n\r\nimport haxe.ds.StringMap;\r\n\r\n/**\r\n * The Game class is meant to be overridden by your game class\r\n */\r\nclass Game {\r\n\t/**\r\n\t * The title of the game\r\n\t * \r\n\t * Override this to set the title of your game\r\n\t */\r\n\tpublic var title(get, null):String;\r\n\tpublic function get_title():String {\r\n\t\treturn \"Unbranded Tusk Game\";\r\n\t}\r\n\r\n\tpublic var width(get, null):Int;\r\n\tpublic function get_width():Int {\r\n\t\treturn 960;\r\n\t}\r\n\r\n\tpublic var height(get, null):Int;\r\n\tpublic function get_height():Int {\r\n\t\treturn 540;\r\n\t}\r\n\r\n\tpublic var currentScenes:Array<Scene> = new Array<Scene>();\r\n\r\n\tpublic function new() {}\r\n\tpublic function setup() {}\r\n}","import tusk.*;\n\nimport tusk.debug.Log;\nimport tusk.events.*;\n\nimport tusk.resources.Texture;\nimport tusk.macros.ComponentIndexer;\n\nimport promhx.Deferred;\nimport promhx.Promise;\nimport promhx.Stream;\n\nimport haxe.ds.StringMap;\nimport tusk.defaults.scenes.TechScreen;\nimport tusk.defaults.scenes.SplashScreen;\n\nclass Main extends Game {\n\toverride public function get_title():String {\n\t\treturn \"Ludum Party!\";\n\t}\n\toverride public function get_width():Int {\n\t\treturn 900;\n\t}\n\n\tprivate var shuffleIndex:Int = 0;\n\tprivate var sceneIndices:Array<Int> = [0, 1, 2];\n\tprivate var minigameDone:Deferred<Scene> = new Deferred<Scene>();\n\tprivate function pickRandomLevel() {\n\t\tvar scene:Scene = switch(sceneIndices[shuffleIndex]) {\n\t\t\tdefault: new minigames.BottleRocket();\n\t\t\tcase 1: new minigames.SledTillYoureDead();\n\t\t\tcase 2: new minigames.CaptainKnowItAll();\n\t\t}\n\t\tTusk.pushScene(scene).then(function(scene:Scene) {\n\t\t\tTusk.removeScene(scene);\n\t\t\tshuffleIndex++;\n\t\t\tif(shuffleIndex >= sceneIndices.length) {\n\t\t\t\tsceneIndices = Util.shuffle(sceneIndices);\n\t\t\t\tshuffleIndex = 0;\n\t\t\t}\n\t\t\tminigameDone.resolve(scene);\n\t\t});\n\t}\n\n\toverride public function setup() {\n\t\tLog.info('Setting up game...');\n\t\tsceneIndices = Util.shuffle(sceneIndices);\n\t\tTusk.pushScene(new tusk.defaults.scenes.SplashScreen()).pipe(function(scene:tusk.Scene) {\n\t\t\tTusk.removeScene(scene);\n\t\t\treturn Tusk.pushScene(new Intro());\n\t\t}).then(function(scene:Scene) {\n\t\t\tTusk.removeScene(scene);\n\t\t\tpickRandomLevel();\n\t\t\tStream.whenever(minigameDone.stream()).then(function(_) {\n\t\t\t\tpickRandomLevel();\n\t\t\t});\n\t\t});\n\t\t\n\t\t//Tusk.pushScene(new Intro());\n\t\t//Tusk.pushScene(new minigames.BottleRocket());\n\t\t//Tusk.pushScene(new minigames.SledTillYoureDead());\n\t\t//Tusk.pushScene(new minigames.CaptainKnowItAll());\n\t}\n}","package promhx;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Context;\n#end\nimport promhx.base.EventLoop;\nimport promhx.base.AsyncBase;\nimport haxe.ds.Option;\n\n@:expose\nclass Stream<T> extends AsyncBase<T> {\n    var deferred      : Deferred<T>;\n    var _pause        : Bool;\n    var _end          : Bool;\n    var _end_promise  : Promise<Option<T>>;\n    var _end_deferred : Deferred<Option<T>>;\n\n    public function new(?d : Deferred<T>){\n        super(d);\n        _end_deferred = new Deferred<Option<T>>();\n        _end_promise = _end_deferred.promise();\n    }\n\n    /**\n      Macro method that binds the stream arguments to a single function\n      callback that is triggered when all streams are updated.\n      Note: You may call this function on as many stream arguments as you\n      like.\n     **/\n    macro public static function whenever<T>( args : Array<ExprOf<AsyncBase<Dynamic>>>) : Expr {\n\n        // a default position\n        var pos = Context.currentPos();\n\n        //the macro arguments translated to an array expression.\n        var eargs = {expr:EArrayDecl(args), pos:pos};\n\n        // An array of the resolved stream values\n        var epargs = [for (i in 0...args.length) macro arr[$v{i}]._val];\n\n        // the returned function that actually does the runtime work.\n        return macro @:privateAccess {\n            // a function that accepts a variable argument function\n            var varargf = function(f){\n                // we wait on all of the streams with the iterable-based \"whenAll\"\n                // this will resolve an array, so we use pipe to ignore it, and set\n                // up a new stream for return.\n                // this new stream resolves via a macro-defined function expression\n                // on \"f\" that provides arity and types for the resolved stream values.\n                var ret = new promhx.Stream();\n                var arr : Array<promhx.base.AsyncBase<Dynamic>> = $eargs;\n                var p = promhx.Stream.wheneverAll(arr);\n                p._update.push({\n                    async: ret,\n                    linkf: function(x) ret.handleResolve(f($a{epargs}))\n                });\n                return ret;\n            };\n\n            // return an anonymous object with the function definition for \"then\"\n            { then : varargf };\n        }\n    }\n\n    /**\n      Creates a stream from the iterable [itb] that will immediately update\n      for each value, and then end.\n     **/\n    public static function foreach<T>(itb : Iterable<T>) : Stream<T> {\n        var s = new Stream<T>();\n        for (i in itb) s.handleResolve(i);\n        s.end();\n        return s;\n    }\n\n\n    /**\n      add a wait function directly to the Stream instance.\n     **/\n    override public function then<A>(f : T->A) : Stream<A> {\n        var ret  = new Stream<A>();\n        AsyncBase.link(this, ret, f);\n        _end_promise.then(function(x) ret.end());\n        return ret;\n    }\n\n    public function detachStream(str : Stream<Dynamic>) : Bool {\n        var filtered = [];\n        var removed = false;\n        for (u in _update){\n            if (u.async == str)  removed = true;\n            else filtered.push(u);\n        }\n        _update = filtered;\n        return removed;\n    }\n\n    /**\n      Transforms an iterable of streams into a single stream which resolves\n      to an array of values.\n     **/\n    public static function wheneverAll<T>(itb : Iterable<AsyncBase<T>>) : Stream<Array<T>> {\n        var ret = new Stream<Array<T>>();\n        AsyncBase.linkAll(itb, ret);\n        return ret;\n    }\n\n    /**\n      Concatenates all the streams in the iterable argument to a single stream.  See\n      the [concat] instance method.\n     **/\n    public static function concatAll<T>(itb : Iterable<Stream<T>>) : Stream<T> {\n        var ret = new Stream<T>();\n        for (i in itb) ret.concat(i);\n        return ret;\n    }\n\n    /**\n      Merges all the streams in the iterable argument to a single stream.  See\n      the [merge] instance method.\n     **/\n    public static function mergeAll<T>(itb : Iterable<Stream<T>>) : Stream<T> {\n        var ret = new Stream<T>();\n        for (i in itb) ret.merge(i);\n        return ret;\n    }\n\n    /**\n      Returns a Promise that will resolve only for the first stream update.\n     **/\n    public inline function first() : Promise<T> {\n        var s = new Promise<T>();\n        then(function(x) if (!s.isResolved()) s.handleResolve(x));\n        return s;\n    }\n\n    override function handleResolve(val : T) : Void {\n        if (!_end && !_pause) _resolve(val);\n    }\n\n    /**\n      Momentarily disable updates for the stream.  Set the pause state with\n      the argument.  Call it without the argument to toggle the current state.\n     **/\n    public function pause(?set : Bool){\n        if (set == null) set = !_pause;\n        _pause = set;\n    }\n\n    public function pipe<A>(f : T->Stream<A>) : Stream<A> {\n        var ret = new Stream<A>();\n        AsyncBase.pipeLink(this, ret, f);\n        _end_promise.then(function(x) ret.end());\n        return ret;\n    }\n\n    /**\n      Pipes an error back into a normal type.\n      **/\n    public function errorPipe( f: Dynamic-> Stream<T>) : Stream<T>{\n        var ret = new Stream<T>();\n        catchError(function(e){\n            var piped = f(e);\n            piped.then(ret._resolve);\n            piped._end_promise.then(ret._end_promise._resolve);\n        });\n        then(ret._resolve);\n        _end_promise.then(function(x) ret.end());\n        return ret;\n    }\n\n    /**\n      I need this as a private function to call recursively.\n     **/\n    function handleEnd(){\n        // If the async is still pending, check on the next loop.\n        if (isPending()) EventLoop.enqueue(handleEnd);\n        else if (_end_promise.isResolved()) return;\n        else {\n            _end = true;\n            var o = isResolved() ? Some(_val) : None;\n            _end_promise.handleResolve(o);\n            _update = [];\n            _error = [];\n        }\n    }\n\n    public function end(){\n        EventLoop.enqueue(handleEnd);\n        return this;\n    }\n\n    inline public function endThen<A>(f : Option<T>->A) : Promise<A>{\n       return _end_promise.then(f);\n    }\n\n    /**\n      Creates a new stream linked to the current instance that only updates\n      if the [f] argument is true.\n     **/\n    public function filter(f : T->Bool) : Stream<T>{\n        var ret = new Stream<T>();\n        _update.push({\n            async : ret,\n            linkf : function(x) if (f(x)) ret.handleResolve(x)\n        });\n        AsyncBase.immediateLinkUpdate(this, ret, function(x) return x);\n        return ret;\n    }\n\n    /**\n      Creates a new stream that updates with the values from the current\n      stream until the stream ends, and then takes values from the next stream\n      [s] until that stream ends.\n     **/\n    public function concat(s : Stream<T>) : Stream<T> {\n        var ret = new Stream<T>();\n        _update.push({\n            async : ret,\n            linkf : ret.handleResolve\n        });\n        AsyncBase.immediateLinkUpdate(this, ret, function(x) return x);\n        endThen(function(_){\n            s.pipe(function(x){\n                ret.handleResolve(x);\n                return ret;\n            });\n            s.endThen(function(_){\n                ret.end();\n            });\n        });\n        return ret;\n    }\n\n    /**\n      Merges another stream into the current one.\n     **/\n    public function merge(s : Stream<T>) : Stream<T> {\n        var ret = new Stream<T>();\n        _update.push({\n            async : ret,\n            linkf : ret.handleResolve\n        });\n        s._update.push({\n            async : ret,\n            linkf : ret.handleResolve\n        });\n        AsyncBase.immediateLinkUpdate(this, ret, function(x) return x);\n        AsyncBase.immediateLinkUpdate(s, ret, function(x) return x);\n        return ret;\n    }\n\n    /**\n      Converts any value to a resolved Stream\n     **/\n    public static function stream<A>(_val : A): Stream<A> {\n        var ret = new Stream<A>();\n        ret.handleResolve(_val);\n        return ret;\n    }\n\n}\n\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","import glm.Mat4;\n\nimport tusk.resources.Shader;\nimport tusk.resources.Material;\nimport tusk.resources.Text;\n\nimport promhx.Deferred;\nimport promhx.Promise;\n\nimport snow.modules.opengl.GL;\nimport snow.modules.opengl.GL.GLBuffer;\n\nimport tusk.Tusk;\n\nclass SpriteMaterial {\n\tpublic static function load():Promise<Material> {\n\t\tvar d:Deferred<Material> = new Deferred<Material>();\n\t\t/*if(Tusk.assets.isLoaded(\"textured.colourkey\")) {\n\t\t\td.resolve(Tusk.assets.getMaterial(\"textured.colourkey\"));\n\t\t\treturn d.promise();\n\t\t}*/\n\n\t\tPromise.when(\n\t\t\tTusk.assets.loadText(tusk.Files.shaders___colourkey__vert),\n\t\t\tTusk.assets.loadText(tusk.Files.shaders___colourkey__frag))\n\t\t.then(function(vert:Text, frag:Text) {\n\t\t\tvar shader:Shader = new Shader(\"textured.colourkey\",\n\t\t\t\tvert.text,\n\t\t\t\tfrag.text);\n\t\t\tvar mat = new Material(\"textured.colourkey\", shader);\n\n\t\t\t// setup the attribute flags\n\t\t\tmat.attributeFlags.set(AttributeTypes.Pos3);\n\t\t\tmat.attributeFlags.set(AttributeTypes.UV);\n\n\t\t\tGL.useProgram(mat.shader.program);\n\t\t\tvar posLocation:Int = mat.shader.getAttributeLocation(\"position\");\n\t\t\tvar uvLocation:Int = mat.shader.getAttributeLocation(\"uv\");\n\n\t\t\tmat.onRender = function(setupUniforms:SetupRenderUniformsCallback, vertexBuffer:GLBuffer, vertexCount:Int) {\n\t\t\t\tGL.useProgram(mat.shader.program);\n\t\t\t\tGL.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\n\n\t\t\t\tif(mat.textures != null && mat.textures.length > 0) {\n\t\t\t\t\tGL.activeTexture(GL.TEXTURE0);\n\t\t\t\t\tGL.bindTexture(GL.TEXTURE_2D, mat.textures[0].texture);\n\t\t\t\t}\n\n\t\t\t\tsetupUniforms(mat);\n\n\t\t\t\tGL.enableVertexAttribArray(posLocation);\n\t\t\t\tGL.enableVertexAttribArray(uvLocation);\n\t\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer);\n\n\t\t\t\tGL.vertexAttribPointer(posLocation, 3, GL.FLOAT, false, 5*4, 0);\n\t\t\t\tGL.vertexAttribPointer(uvLocation, 2, GL.FLOAT, false, 5*4, 3*4);\n\n\t\t\t\tGL.drawArrays(GL.TRIANGLES, 0, vertexCount);\n\n\t\t\t\tGL.bindTexture(GL.TEXTURE_2D, null);\n\t\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\n\t\t\t\tGL.disableVertexAttribArray(posLocation);\n\t\t\t\tGL.disableVertexAttribArray(uvLocation);\n\t\t\t\tGL.useProgram(null);\n\t\t\t}\n\n\t\t\tTusk.assets.loadMaterial(\"textured.colourkey\", mat).then(function(mat:Material) {\n\t\t\t\td.resolve(mat);\n\t\t\t});\n\t\t});\n\t\treturn d.promise();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cpp\nusing cpp.NativeString;\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length<start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor(i in 0...start.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length<end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add( s.length-end.length );\n\t\tvar p1 = end.c_str();\n\t\tfor(i in 0...end.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if python\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than String.charCodeAt() on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash || cpp)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","import Main;\r\n\r\nimport tusk.Tusk;\r\nimport tusk.debug.Exception;\r\nimport tusk.debug.Log;\r\nimport snow.Snow;\r\nimport snow.types.Types.SnowConfig;\r\n\r\nclass TuskApp {\r\n\tpublic static function main() {\r\n\t\tvar snow:Snow = new Snow();\r\n\t\t\r\n\t\tvar hasLoop:Bool = true;\r\n\t\t#if (docgen || testing)\r\n\t\thasLoop = false;\r\n\t\t#end\r\n\t\tvar snowConfig:SnowConfig = {\r\n\t\t\thas_loop: hasLoop,\r\n\t\t\tapp_package: 'com.blazingmammothgames.ld34'\r\n\t\t};\r\n\t\t\r\n\t\t// initialize!\r\n        Log.info('Starting tusk ' + Tusk.version);\r\n\t\ttry {\r\n\t\t\tsnow.init(snowConfig, new Tusk(new Main()));\r\n\t\t}\r\n\t\tcatch(exception:Exception) {\r\n\t\t\tif(exception.fatal) {\r\n\t\t\t\tLog.fatal(exception.message);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tLog.error(exception);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","import glm.Vec4;\r\nimport hxColorToolkit.spaces.HSB;\r\nimport hxColorToolkit.spaces.RGB;\r\n\r\nclass Util {\r\n\tpublic static function randomGradientColours():Array<Vec4> {\r\n\t\t// pick a random hue\r\n\t\tvar hue:Float = tusk.math.Random.float(0, 359.9);\r\n\t\tvar topColour:HSB = new HSB(hue, 75, 90);\r\n\t\tvar bottomColour:HSB = new HSB(hue, 75, 10);\r\n\r\n\t\tvar trgb:RGB = topColour.toRGB();\r\n\t\tvar brgb:RGB = bottomColour.toRGB();\r\n\r\n\t\treturn [\r\n\t\t\tnew Vec4(brgb.red, brgb.green, brgb.blue, 255) / 255,\r\n\t\t\tnew Vec4(trgb.red, trgb.green, trgb.blue, 255) / 255\r\n\t\t];\r\n\t}\r\n\r\n\t// http://stackoverflow.com/questions/23689001/how-to-reliably-format-a-floating-point-number-to-a-specified-number-of-decimal\r\n\tpublic static function floatToStringPrecision(n:Float, prec:Int):String {\r\n\t\tn = Math.round(n * Math.pow(10, prec));\r\n\t\tvar str = ''+n;\r\n\t\tvar len = str.length;\r\n\t\tif(len <= prec) {\r\n\t\t\twhile(len < prec) {\r\n\t\t\t\tstr = '0'+str;\r\n\t\t\t\tlen++;\r\n\t\t\t}\r\n\t\t\treturn '0.'+str;\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn str.substr(0, str.length-prec) + '.'+str.substr(str.length-prec);\r\n\t\t}\r\n\t}\r\n\r\n\t// taken from https://github.com/jasononeil/hxrandom/blob/master/src/Random.hx\r\n\tpublic static function shuffle<T>(arr:Array<T>):Array<T>\r\n\t{\r\n\t\tif (arr!=null) {\r\n\t\t\tfor (i in 0...arr.length) {\r\n\t\t\t\tvar j = tusk.math.Random.int(0, arr.length - 1);\r\n\t\t\t\tvar a = arr[i];\r\n\t\t\t\tvar b = arr[j];\r\n\t\t\t\tarr[i] = b;\r\n\t\t\t\tarr[j] = a;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n}","package glm;\r\n\r\nimport glm.Vec3;\r\nimport glm.Mat4;\r\n\r\nclass GLM {\r\n\t/**\r\n\t * Efficient and convenient access to Math.PI / 180.0\r\n\t */\r\n\tpublic static inline var degToRad:Float = 0.017453292519943295;\r\n\t/**\r\n\t * Efficient and convenient access to 180.0 / Math.PI\r\n\t */\r\n\tpublic static inline var radToDeg:Float = 57.29577951308232;\r\n\t\r\n\t/**\r\n\t * Translates a matrix by the 3D translation vector\r\n\t * @param  ?m          A matrix to apply the transformation on. If `m == null`,\r\n\t *                     an identity matrix will be used.\r\n\t * @param  translation A vector describing the translation\r\n\t */\r\n\tpublic static function translate(?m:Mat4, translation:Vec3):Mat4 {\r\n\t\tvar t:Mat4 = new Mat4(1.0);\r\n\t\tt[0][3] = translation.x;\r\n\t\tt[1][3] = translation.y;\r\n\t\tt[2][3] = translation.z;\r\n\t\tif(m == null) return t;\r\n\t\treturn t * m;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales a matrix by the 3D scale vector\r\n\t * @param  ?m    A matrix to apply the transformation on. If `m == null`,\r\n\t *               an identity matrix will be used.\r\n\t * @param  scale A vector describing the scaling\r\n\t */\r\n\tpublic static function scale(?m:Mat4, scale:Vec3):Mat4 {\r\n\t\tvar t:Mat4 = new Mat4(1.0);\r\n\t\tt[0][0] = scale.x;\r\n\t\tt[1][1] = scale.y;\r\n\t\tt[2][2] = scale.z;\r\n\t\tif(m == null) return t;\r\n\t\treturn t * m;\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a quaternion which represents a rotation of `angle`\r\n\t * around the axis `axis`.\r\n\t * @param  axis  The axis to rotate about\r\n\t * @param  angle The angle to rotate by (in radians)\r\n\t * @return       A quaternion which can be used to rotate vectors in 3D\r\n\t */\r\n\tpublic static function axisAngle(axis:Vec3, angle:Float):Quat {\r\n\t\tangle /= 2;\r\n\t\tvar s:Float = Math.sin(angle);\r\n\t\tvar q:Quat = new glm.Quat(\r\n\t\t\tMath.cos(angle),\r\n\t\t\ts * axis.x,\r\n\t\t\ts * axis.y,\r\n\t\t\ts * axis.z\r\n\t\t);\r\n\t\treturn q;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the vector `v` by the quaternion `q` (typically constructed using\r\n\t * `axisAngle`). Applies `q * v * q^-1`\r\n\t * @param  q The quaternion to rotate with\r\n\t * @param  v The vector to rotate\r\n\t * @return   `v`, rotated by `q`\r\n\t */\r\n\tpublic static function rotate(q:Quat, v:Vec3):Vec3 {\r\n\t\tq.normalize();\r\n\t\tvar qv:Quat = new Quat(0, v.x, v.y, v.z);\r\n\t\tvar r:Quat = (q * qv) * q.conjugate();\r\n\t\treturn new Vec3(r.x, r.y, r.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolate a float between two values\r\n\t * @param a the \"starting\" value\r\n\t * @param b the \"ending\" value\r\n\t * @param t a number in the range `[0, 1]` which describes how far along to\r\n\t * interpolate.\r\n\t */\r\n\tpublic static function lerp(a:Float, b:Float, t:Float):Float {\r\n\t\treturn a + t * (b - a);\r\n\t}\r\n}","package glm;\r\n\r\n/**\r\n * Utility class for dealing with 4x4 matrices\r\n */\r\nabstract Mat4(Array<glm.Vec4>) {\r\n\tpublic function new(scale:Float = 0) {\r\n\t\tvar arr:Array<glm.Vec4> = [\r\n\t\t\tnew Vec4(scale, 0, 0, 0),\r\n\t\t\tnew Vec4(0, scale, 0, 0),\r\n\t\t\tnew Vec4(0, 0, scale, 0),\r\n\t\t\tnew Vec4(0, 0, 0, scale)\r\n\t\t];\r\n\t\tthis = arr;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Construct a Mat4 from a series of Vec4s (representing rows)\r\n\t * @param  rows<Vec4> the rows\r\n\t * @return            a Mat4\r\n\t */\r\n\tpublic static function fromRowArray(rows:Array<Vec4>):Mat4 {\r\n\t\tif(rows.length != 4) {\r\n\t\t\tthrow \"You must supply 4 Vec4s to build a Mat4 this way!\";\r\n\t\t}\r\n\t\tvar m:Mat4 = new Mat4();\r\n\t\tm[0] = rows[0];\r\n\t\tm[1] = rows[1];\r\n\t\tm[2] = rows[2];\r\n\t\tm[3] = rows[3];\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Construct a Mat4 from a series of Vec4s (representing rows)\r\n\t * @param  a row 0\r\n\t * @param  b row 1\r\n\t * @param  c row 2\r\n\t * @param  d row 3\r\n\t * @return   a Mat4\r\n\t */\r\n\tpublic static function fromRows(a:Vec4, b:Vec4, c:Vec4, d:Vec4):Mat4 {\r\n\t\tvar m:Mat4 = new Mat4();\r\n\t\tm[0] = a;\r\n\t\tm[1] = b;\r\n\t\tm[2] = c;\r\n\t\tm[3] = d;\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes every element in `this` `=0`\r\n\t * @return `this`\r\n\t */\r\n\tpublic function setZero():Mat4 {\r\n\t\tthis[0].zero();\r\n\t\tthis[1].zero();\r\n\t\tthis[2].zero();\r\n\t\tthis[3].zero();\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a new mat4 where all elements = 0\r\n\t */\r\n\tpublic static function zero():Mat4 {\r\n\t\tvar m:Mat4 = new Mat4();\r\n\t\tm.setZero();\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Mat4 where the elements exactly equal the elements of `this`\r\n\t */\r\n\tpublic function clone():Mat4 {\r\n\t\tvar copy:Mat4 = new Mat4();\r\n\t\tcopy[0] = this[0].clone();\r\n\t\tcopy[1] = this[1].clone();\r\n\t\tcopy[2] = this[2].clone();\r\n\t\tcopy[3] = this[3].clone();\r\n\t\treturn copy;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Copies the values of m into this matrix\r\n\t * @return `this`\r\n\t */\r\n\tpublic function copy(m:Mat4):Mat4 {\r\n\t\tthis[0].copy(m[0]);\r\n\t\tthis[1].copy(m[1]);\r\n\t\tthis[2].copy(m[2]);\r\n\t\tthis[3].copy(m[3]);\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes `this` an identity matrix\r\n\t * @return `this`\r\n\t */\r\n\tpublic function setIdentity():Mat4 {\r\n\t\tthis[0].set(1, 0, 0, 0);\r\n\t\tthis[1].set(0, 1, 0, 0);\r\n\t\tthis[2].set(0, 0, 1, 0);\r\n\t\tthis[3].set(0, 0, 0, 1);\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a new mat4 representing an identity matrix\r\n\t */\r\n\tpublic static function identity():Mat4 {\r\n\t\tvar m:Mat4 = new Mat4();\r\n\t\tm.setIdentity();\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `mat[i]` where `i ∈ [0, 1, 2, 3]`\r\n\t * @return a `Vec4` representing the `i`th row\r\n\t */\r\n\t@:arrayAccess public inline function arrayGet(i:Int):Vec4 {\r\n\t\treturn this[i];\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `mat[i] = x` where `i ∈ [0, 1, 2, 3]`\r\n\t * @return a `Vec4` representing the `i`th row (which has been set)\r\n\t */\r\n\t@:arrayAccess public inline function arraySet(i:Int, x:Vec4):Vec4 {\r\n\t\treturn this[i] = x;\r\n\t}\r\n\r\n\t/**\r\n\t * Flattens `this` into [Row-major](https://en.wikipedia.org/wiki/Row-major_order) order\r\n\t */\r\n\tpublic function toArrayRowMajor():Array<Float> {\r\n\t\treturn this[0].toArray().concat(\r\n\t\t\tthis[1].toArray().concat(\r\n\t\t\t\tthis[2].toArray().concat(\r\n\t\t\t\t\tthis[3].toArray()\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Flattens `this` into [Column-major](https://en.wikipedia.org/wiki/Column-major_order) order\r\n\t */\r\n\tpublic function toArrayColMajor():Array<Float> {\r\n\t\tvar ret:Array<Float> = new Array<Float>();\r\n\t\tfor(j in 0...4) {\r\n\t\t\tfor(i in 0...4) {\r\n\t\t\t\tret.push(this[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies `b` by `this`\r\n\t * @param  b The vec4 to multiply by\r\n\t * @return   `this` ✕ `b`\r\n\t */\r\n\tpublic function multVec4(b:Vec4):Vec4 {\r\n\t\treturn new Vec4(\r\n\t\t\tthis[0][0] * b[0] + this[0][1] * b[1] + this[0][2] * b[2] + this[0][3] * b[3],\r\n\t\t\tthis[1][0] * b[0] + this[1][1] * b[1] + this[1][2] * b[2] + this[1][3] * b[3],\r\n\t\t\tthis[2][0] * b[0] + this[2][1] * b[1] + this[2][2] * b[2] + this[2][3] * b[3],\r\n\t\t\tthis[3][0] * b[0] + this[3][1] * b[1] + this[3][2] * b[2] + this[3][3] * b[3]\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying matrices and vectors\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyVec4Op(a:Mat4, b:Vec4):Vec4 {\r\n\t\treturn a.multVec4(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies `b` by `this`\r\n\t * @param  b The mat4 to multiply by\r\n\t * @return   `this` ✕ `b`\r\n\t */\r\n\tpublic inline function multMat4(b:Mat4):Mat4 {\r\n\t\tvar rows:Array<Vec4> = [\r\n\t\t\tthis[0][0] * b[0] + this[0][1] * b[1] + this[0][2] * b[2] + this[0][3] * b[3],\r\n\t\t\tthis[1][0] * b[0] + this[1][1] * b[1] + this[1][2] * b[2] + this[1][3] * b[3],\r\n\t\t\tthis[2][0] * b[0] + this[2][1] * b[1] + this[2][2] * b[2] + this[2][3] * b[3],\r\n\t\t\tthis[3][0] * b[0] + this[3][1] * b[1] + this[3][2] * b[2] + this[3][3] * b[3]\r\n\t\t];\r\n\t\tthis = rows;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying two matrices\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyMat4Op(a:Mat4, b:Mat4):Mat4 {\r\n\t\treturn a.multMat4(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Transposes the matrix\r\n\t */\r\n\tpublic inline function transpose():Mat4 {\r\n\t\tvar t01 = this[0][1];\r\n\t\tvar t02 = this[0][2];\r\n\t\tvar t03 = this[0][3];\r\n\t\tvar t12 = this[1][2];\r\n\t\tvar t13 = this[1][3];\r\n\t\tvar t23 = this[2][3];\r\n\r\n\t\tthis[0][1] = this[1][0];\r\n\t\tthis[0][2] = this[2][0];\r\n\t\tthis[0][3] = this[3][0];\r\n\t\tthis[1][2] = this[2][1];\r\n\t\tthis[1][3] = this[3][1];\r\n\t\tthis[2][3] = this[3][2];\r\n\t\tthis[1][0] = t01;\r\n\t\tthis[2][0] = t02;\r\n\t\tthis[3][0] = t03;\r\n\t\tthis[2][1] = t12;\r\n\t\tthis[3][1] = t13;\r\n\t\tthis[3][2] = t23;\r\n\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts the matrix (m^-1)\r\n\t * @return The inverse of `this`\r\n\t */\r\n\tpublic inline function invert():Mat4 {\r\n\t\tvar det:Float = determinant();\r\n\t\tif(det == 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tdet = 1.0 / det;\r\n\r\n\t\tvar t00:Float = this[0][0];\r\n\t\tvar t01:Float = this[0][1];\r\n\t\tvar t02:Float = this[0][2];\r\n\t\tvar t03:Float = this[0][3];\r\n\t\tvar t10:Float = this[1][0];\r\n\t\tvar t11:Float = this[1][1];\r\n\t\tvar t12:Float = this[1][2];\r\n\t\tvar t13:Float = this[1][3];\r\n\t\tvar t20:Float = this[2][0];\r\n\t\tvar t21:Float = this[2][1];\r\n\t\tvar t22:Float = this[2][2];\r\n\t\tvar t23:Float = this[2][3];\r\n\t\tvar t30:Float = this[3][0];\r\n\t\tvar t31:Float = this[3][1];\r\n\t\tvar t32:Float = this[3][2];\r\n\t\tvar t33:Float = this[3][3];\r\n\r\n\t\tvar b00 = t00 * t11 - t01 * t10;\r\n\t\tvar b01 = t00 * t12 - t02 * t10;\r\n\t\tvar b02 = t00 * t13 - t03 * t10;\r\n\t\tvar b03 = t01 * t12 - t02 * t11;\r\n\t\tvar b04 = t01 * t13 - t03 * t11;\r\n\t\tvar b05 = t02 * t13 - t03 * t12;\r\n\t\tvar b06 = t20 * t31 - t21 * t30;\r\n\t\tvar b07 = t20 * t32 - t22 * t30;\r\n\t\tvar b08 = t20 * t33 - t23 * t30;\r\n\t\tvar b09 = t21 * t32 - t22 * t31;\r\n\t\tvar b10 = t21 * t33 - t23 * t31;\r\n\t\tvar b11 = t22 * t33 - t23 * t32;\r\n\r\n\t\tthis[0][0] = (t11 * b11 - t12 * b10 + t13 * b09) * det;\r\n\t\tthis[0][1] = (t02 * b10 - t01 * b11 - t03 * b09) * det;\r\n\t\tthis[0][2] = (t31 * b05 - t32 * b04 + t33 * b03) * det;\r\n\t\tthis[0][3] = (t22 * b04 - t21 * b05 - t23 * b03) * det;\r\n\t\tthis[1][0] = (t12 * b08 - t10 * b11 - t13 * b07) * det;\r\n\t\tthis[1][1] = (t00 * b11 - t02 * b08 + t03 * b07) * det;\r\n\t\tthis[1][2] = (t32 * b02 - t30 * b05 - t33 * b01) * det;\r\n\t\tthis[1][3] = (t20 * b05 - t22 * b02 + t23 * b01) * det;\r\n\t\tthis[2][0] = (t10 * b10 - t11 * b08 + t13 * b06) * det;\r\n\t\tthis[2][1] = (t01 * b08 - t00 * b10 - t03 * b06) * det;\r\n\t\tthis[2][2] = (t30 * b04 - t31 * b02 + t33 * b00) * det;\r\n\t\tthis[2][3] = (t21 * b02 - t20 * b04 - t23 * b00) * det;\r\n\t\tthis[3][0] = (t11 * b07 - t10 * b09 - t12 * b06) * det;\r\n\t\tthis[3][1] = (t00 * b09 - t01 * b07 + t02 * b06) * det;\r\n\t\tthis[3][2] = (t31 * b01 - t30 * b03 - t32 * b00) * det;\r\n\t\tthis[3][3] = (t20 * b03 - t21 * b01 + t22 * b00) * det;\r\n\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the determinant of `this`\r\n\t */\r\n\tpublic inline function determinant():Float {\r\n\t\tvar b00:Float = this[0][0] * this[1][1] - this[0][1] * this[1][0];\r\n\t\tvar b01:Float = this[0][0] * this[1][2] - this[0][2] * this[1][0];\r\n\t\tvar b02:Float = this[0][0] * this[1][3] - this[0][3] * this[1][0];\r\n\t\tvar b03:Float = this[0][1] * this[1][2] - this[0][2] * this[1][1];\r\n\t\tvar b04:Float = this[0][1] * this[1][3] - this[0][3] * this[1][1];\r\n\t\tvar b05:Float = this[0][2] * this[1][3] - this[0][3] * this[1][2];\r\n\t\tvar b06:Float = this[2][0] * this[3][1] - this[2][1] * this[3][0];\r\n\t\tvar b07:Float = this[2][0] * this[3][2] - this[2][2] * this[3][0];\r\n\t\tvar b08:Float = this[2][0] * this[3][3] - this[2][3] * this[3][0];\r\n\t\tvar b09:Float = this[2][1] * this[3][2] - this[2][2] * this[3][1];\r\n\t\tvar b10:Float = this[2][1] * this[3][3] - this[2][3] * this[3][1];\r\n\t\tvar b11:Float = this[2][2] * this[3][3] - this[2][3] * this[3][2];\r\n\t\treturn b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts from Mat3s to Mat4s using standard casting\r\n\t */\r\n\t@:from\r\n\tpublic static inline function fromMat3(v:Mat3):Mat4 {\r\n\t\tvar r:Mat4 = Mat4.fromRows(\r\n\t\t\tnew Vec4(v[0][0], v[0][1], v[0][2], 0),\r\n\t\t\tnew Vec4(v[1][0], v[1][1], v[1][2], 0),\r\n\t\t\tnew Vec4(v[2][0], v[2][1], v[2][2], 0),\r\n\t\t\tnew Vec4(0, 0, 0, 1)\r\n\t\t);\r\n\t\treturn r;\r\n\t}\r\n}","package glm;\r\n\r\n/**\r\n * Utility class for dealing with 3x3 matrices\r\n */\r\nabstract Mat3(Array<glm.Vec3>) {\r\n\tpublic function new(scale:Float = 0) {\r\n\t\tvar arr:Array<glm.Vec3> = [\r\n\t\t\tnew Vec3(scale, 0, 0),\r\n\t\t\tnew Vec3(0, scale, 0),\r\n\t\t\tnew Vec3(0, 0, scale)\r\n\t\t];\r\n\t\tthis = arr;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Construct a Mat3 from a series of Vec3s (representing rows)\r\n\t * @param  rows<Vec3> the rows\r\n\t * @return            a Mat3\r\n\t */\r\n\tpublic static function fromRowArray(rows:Array<Vec3>):Mat3 {\r\n\t\tif(rows.length != 3) {\r\n\t\t\tthrow \"You must supply 3 Vec3s to build a Mat3 this way!\";\r\n\t\t}\r\n\t\tvar m:Mat3 = new Mat3();\r\n\t\tm[0] = rows[0];\r\n\t\tm[1] = rows[1];\r\n\t\tm[2] = rows[2];\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Construct a Mat3 from a series of Vec3s (representing rows)\r\n\t * @param  a row 0\r\n\t * @param  b row 1\r\n\t * @param  c row 2\r\n\t * @return   a Mat3\r\n\t */\r\n\tpublic static function fromRows(a:Vec3, b:Vec3, c:Vec3):Mat3 {\r\n\t\tvar m:Mat3 = new Mat3();\r\n\t\tm[0] = a;\r\n\t\tm[1] = b;\r\n\t\tm[2] = c;\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Construct a Mat3 from a quaternion\r\n\t * @param  q The quaternion to build from\r\n\t * @return   a new `Mat3`\r\n\t */\r\n\tpublic static function fromQuat(q:Quat):Mat3 {\r\n\t\tvar qx2:Float = Math.pow(q.x, 2);\r\n\t\tvar qy2:Float = Math.pow(q.y, 2);\r\n\t\tvar qz2:Float = Math.pow(q.z, 2);\r\n\t\tvar m:Mat3 = Mat3.fromRows(\r\n\t\t\tnew Vec3(1 - 2*qy2 - 2*qz2, 2*q.x*q.y - 2*q.z*q.w, 2*q.x*q.z + 2*q.y*q.w),\r\n\t\t\tnew Vec3(2*q.x*q.y + 2*q.z*q.w, 1 - 2*qx2 - 2*qz2, 2*q.y*q.z - 2*q.x*q.w),\r\n\t\t\tnew Vec3(2*q.x*q.z - 2*q.y*q.w, 2*q.y*q.z + 2*q.x*q.w, 1 - 2*qx2 - 2*qy2)\r\n\t\t);\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes every element in `this` `=0`\r\n\t * @return `this`\r\n\t */\r\n\tpublic function setZero():Mat3 {\r\n\t\tthis[0].zero();\r\n\t\tthis[1].zero();\r\n\t\tthis[2].zero();\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a new mat3 where all elements = 0\r\n\t */\r\n\tpublic static function zero():Mat3 {\r\n\t\tvar m:Mat3 = new Mat3();\r\n\t\tm.setZero();\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Mat3 where the elements exactly equal the elements of `this`\r\n\t */\r\n\tpublic function clone():Mat3 {\r\n\t\tvar copy:Mat3 = new Mat3();\r\n\t\tcopy[0] = this[0].clone();\r\n\t\tcopy[1] = this[1].clone();\r\n\t\tcopy[2] = this[2].clone();\r\n\t\treturn copy;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Copies the values of m into this matrix\r\n\t * @return `this`\r\n\t */\r\n\tpublic function copy(m:Mat3):Mat3 {\r\n\t\tthis[0].copy(m[0]);\r\n\t\tthis[1].copy(m[1]);\r\n\t\tthis[1].copy(m[2]);\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes `this` an identity matrix\r\n\t * @return `this`\r\n\t */\r\n\tpublic function setIdentity():Mat3 {\r\n\t\tthis[0].set(1, 0, 0);\r\n\t\tthis[1].set(0, 1, 0);\r\n\t\tthis[2].set(0, 0, 1);\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a new mat3 representing an identity matrix\r\n\t */\r\n\tpublic static function identity():Mat3 {\r\n\t\tvar m:Mat3 = new Mat3();\r\n\t\tm.setIdentity();\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `mat[i]` where `i ∈ [0, 1, 2]`\r\n\t * @return a `Vec3` representing the `i`th row\r\n\t */\r\n\t@:arrayAccess public inline function arrayGet(i:Int):Vec3 {\r\n\t\treturn this[i];\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `mat[i] = x` where `i ∈ [0, 1, 2]`\r\n\t * @return a `Vec3` representing the `i`th row (which has been set)\r\n\t */\r\n\t@:arrayAccess public inline function arraySet(i:Int, x:Vec3):Vec3 {\r\n\t\treturn this[i] = x;\r\n\t}\r\n\r\n\t/**\r\n\t * Flattens `this` into [Row-major](https://en.wikipedia.org/wiki/Row-major_order) order\r\n\t */\r\n\tpublic function toArrayRowMajor():Array<Float> {\r\n\t\treturn this[0].toArray().concat(\r\n\t\t\tthis[1].toArray().concat(\r\n\t\t\t\tthis[2].toArray()\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Flattens `this` into [Column-major](https://en.wikipedia.org/wiki/Column-major_order) order\r\n\t */\r\n\tpublic function toArrayColMajor():Array<Float> {\r\n\t\tvar ret:Array<Float> = new Array<Float>();\r\n\t\tfor(j in 0...3) {\r\n\t\t\tfor(i in 0...3) {\r\n\t\t\t\tret.push(this[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies `b` by `this`\r\n\t * @param  b The vec4 to multiply by\r\n\t * @return   `this` ✕ `b`\r\n\t */\r\n\tpublic function multVec3(b:Vec3):Vec3 {\r\n\t\treturn new Vec3(\r\n\t\t\tthis[0][0] * b[0] + this[0][1] * b[1] + this[0][2] * b[2],\r\n\t\t\tthis[1][0] * b[0] + this[1][1] * b[1] + this[1][2] * b[2],\r\n\t\t\tthis[2][0] * b[0] + this[2][1] * b[1] + this[2][2] * b[2]\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying matrices and vectors\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyVec3Op(a:Mat3, b:Vec3):Vec3 {\r\n\t\treturn a.multVec3(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies `b` by `this`\r\n\t * @param  b The mat4 to multiply by\r\n\t * @return   `this` ✕ `b`\r\n\t */\r\n\tpublic inline function multMat3(b:Mat3):Mat3 {\r\n\t\tvar rows:Array<Vec3> = [\r\n\t\t\tthis[0][0] * b[0] + this[0][1] * b[1] + this[0][2] * b[2],\r\n\t\t\tthis[1][0] * b[0] + this[1][1] * b[1] + this[1][2] * b[2],\r\n\t\t\tthis[2][0] * b[0] + this[2][1] * b[1] + this[2][2] * b[2]\r\n\t\t];\r\n\t\tthis = rows;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying two matrices\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyMat3Op(a:Mat3, b:Mat3):Mat3 {\r\n\t\treturn a.multMat3(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Transposes the matrix\r\n\t */\r\n\tpublic inline function transpose():Mat3 {\r\n\t\tvar t01 = this[0][1];\r\n\t\tvar t02 = this[0][2];\r\n\t\tvar t12 = this[1][2];\r\n\r\n\t\tthis[0][1] = this[1][0];\r\n\t\tthis[0][2] = this[2][0];\r\n\t\tthis[1][2] = this[2][1];\r\n\t\tthis[1][0] = t01;\r\n\t\tthis[2][0] = t02;\r\n\t\tthis[2][1] = t12;\r\n\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts the matrix (m^-1)\r\n\t * @return The inverse of `this`\r\n\t */\r\n\tpublic inline function invert():Mat3 {\r\n\t\tvar det:Float = determinant();\r\n\t\tif(det == 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tdet = 1.0 / det;\r\n\r\n\t\tvar t00:Float = this[0][0];\r\n\t\tvar t01:Float = this[0][1];\r\n\t\tvar t02:Float = this[0][2];\r\n\t\tvar t10:Float = this[1][0];\r\n\t\tvar t11:Float = this[1][1];\r\n\t\tvar t12:Float = this[1][2];\r\n\t\tvar t20:Float = this[2][0];\r\n\t\tvar t21:Float = this[2][1];\r\n\t\tvar t22:Float = this[2][2];\r\n\r\n\t\tthis[0][0] = (t22 * t11 - t12 * t21) * det;\r\n\t\tthis[0][1] = (-t22 * t01 + t02 * t21) * det;\r\n\t\tthis[0][2] = (t12 * t01 - t02 * t11) * det;\r\n\t\tthis[1][0] = (-t22 * t10 + t12 * t20) * det;\r\n\t\tthis[1][1] = (t22 * t00 - t02 * t20) * det;\r\n\t\tthis[1][2] = (-t12 * t00 + t02 * t10) * det;\r\n\t\tthis[2][0] = (t21 * t10 - t11 * t20) * det;\r\n\t\tthis[2][1] = (-t21 * t00 + t01 * t20) * det;\r\n\t\tthis[2][2] = (t11 * t00 - t01 * t10) * det;\r\n\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the determinant of `this`\r\n\t */\r\n\tpublic inline function determinant():Float {\r\n\t\treturn this[0][0] * (this[2][2] * this[1][1] - this[1][2] * this[2][1])\r\n\t\t\t+ this[0][1] * (-this[2][2] * this[1][0] + this[1][2] * this[2][0])\r\n\t\t\t+ this[0][2] * (this[2][1] * this[1][0] - this[1][1] * this[2][0]);\r\n\t}\r\n}","package glm;\r\n\r\nimport glm.Vec3;\r\nimport glm.Vec4;\r\nimport glm.Mat4;\r\n\r\nclass Projection {\r\n\tpublic static function ortho(left:Float, right:Float, bottom:Float, top:Float, near:Float=-1, far:Float=1):Mat4 {\r\n\t\tvar result:Mat4 = Mat4.fromRows(\r\n\t\t\tnew Vec4(2 / (right - left), 0, 0, -(right + left) / (right - left)),\r\n\t\t\tnew Vec4(0, 2 / (top -bottom), 0, -(top + bottom) / (top - bottom)),\r\n\t\t\tnew Vec4(0, 0, -2 / (far - near), -(far + near) / (far - near)),\r\n\t\t\tnew Vec4(0, 0, 0, 1)\r\n\t\t);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static function perspective(fovy:Float, aspect:Float, near:Float, far:Float):Mat4 {\r\n\t\tvar result:Mat4 = Mat4.identity();\r\n\t\tresult[0][0] = 1 / (aspect * Math.tan(fovy / 2));\r\n\t\tresult[1][1] = 1 / (Math.tan(fovy / 2));\r\n\t\tresult[2][2] = -(far + near) / (far - near);\r\n\t\tresult[3][2] = -1;\r\n\t\tresult[2][3] = -(2 * far * near) / (far - near);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static function frustum(left:Float, right:Float, bottom:Float, top:Float, near:Float=-1, far:Float=1):Mat4 {\r\n\t\tvar result:Mat4 = Mat4.fromRows(\r\n\t\t\tnew Vec4(2*near/(right-left), 0, (right+left)/(right-left), 0),\r\n\t\t\tnew Vec4(0, 2*near/(top-bottom), (top+bottom)/(top-bottom), 0),\r\n\t\t\tnew Vec4(0, 0, -(far+near)/(far-near), -2*far*near/(far-near)),\r\n\t\t\tnew Vec4(0, 0, -1, 0)\r\n\t\t);\r\n\t\treturn result;\r\n\t}\r\n}","package glm;\r\n\r\n/**\r\n * Utility class for dealing with quaternions\r\n */\r\nabstract Quat(Array<Float>) {\r\n\t/**\r\n\t * Utility accessor for the real element\r\n\t */\r\n\tpublic var w(get, set):Float;\r\n\tfunction get_w():Float {\r\n\t\treturn this[0];\r\n\t}\r\n\tfunction set_w(v:Float) {\r\n\t\treturn this[0] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the first imaginary element\r\n\t */\r\n\tpublic var x(get, set):Float;\r\n\tfunction get_x():Float {\r\n\t\treturn this[1];\r\n\t}\r\n\tfunction set_x(v:Float) {\r\n\t\treturn this[1] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the second imaginary element\r\n\t */\r\n\tpublic var y(get, set):Float;\r\n\tfunction get_y():Float {\r\n\t\treturn this[2];\r\n\t}\r\n\tfunction set_y(v:Float) {\r\n\t\treturn this[2] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the third imaginary element\r\n\t */\r\n\tpublic var z(get, set):Float;\r\n\tfunction get_z():Float {\r\n\t\treturn this[3];\r\n\t}\r\n\tfunction set_z(v:Float) {\r\n\t\treturn this[3] = v;\r\n\t}\r\n\r\n\tpublic function new(w:Float=0, x:Float=0, y:Float=0, z:Float=0) {\r\n\t\tvar arr:Array<Float> = new Array<Float>();\r\n\t\tarr.push(w);\r\n\t\tarr.push(x);\r\n\t\tarr.push(y);\r\n\t\tarr.push(z);\r\n\t\tthis = arr;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility function to set the components\r\n\t */\r\n\tpublic function set(?w:Float, ?x:Float, ?y:Float, ?z:Float):Quat {\r\n\t\tif(w != null) this[0] = w;\r\n\t\tif(x != null) this[1] = x;\r\n\t\tif(y != null) this[2] = y;\r\n\t\tif(z != null) this[3] = z;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Photocopies `this`\r\n\t * @return A new `Quat` who's elements are the same as `this`\r\n\t */\r\n\tpublic function clone():Quat {\r\n\t\tvar copy:Quat = new Quat();\r\n\t\tcopy[0] = this[0];\r\n\t\tcopy[1] = this[1];\r\n\t\tcopy[2] = this[2];\r\n\t\tcopy[3] = this[3];\r\n\t\treturn copy;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Copies the values of `q` into `this`\r\n\t * @param q The quat to copy from\r\n\t * @return `this`\r\n\t */\r\n\tpublic function copy(q:Quat):Quat {\r\n\t\tthis[0] = q[0];\r\n\t\tthis[1] = q[1];\r\n\t\tthis[2] = q[2];\r\n\t\tthis[3] = q[3];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `vec[i]` where `i ∈ [0, 1, 2, 3]`\r\n\t */\r\n\t@:arrayAccess public inline function arrayGet(i:Int):Float {\r\n\t\treturn this[i];\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `vec[i] = x` where `i ∈ [0, 1, 2, 3]`\r\n\t */\r\n\t@:arrayAccess public inline function arraySet(i:Int, x:Float):Float {\r\n\t\treturn this[i] = x;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `this` to an array of floats\r\n\t * @return `this`\r\n\t */\r\n\tpublic inline function toArray():Array<Float> {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes `this` an identity quaternion, representing no rotation\r\n\t * @return `this`\r\n\t */\r\n\tpublic inline function setIdentity():Quat {\r\n\t\tthis[0] = 1;\r\n\t\tthis[1] = 0;\r\n\t\tthis[2] = 0;\r\n\t\tthis[3] = 0;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a new quat representing an identity quaternion\r\n\t */\r\n\tpublic static inline function identity():Quat {\r\n\t\tvar q:Quat = new Quat();\r\n\t\tq.setIdentity();\r\n\t\treturn q;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a values of `this` to 0\r\n\t * @return `this`\r\n\t */\r\n\tpublic inline function setZero():Quat {\r\n\t\tthis[0] = 0;\r\n\t\tthis[1] = 0;\r\n\t\tthis[2] = 0;\r\n\t\tthis[3] = 0;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns a new quat where all elements are 0\r\n\t */\r\n\tpublic static inline function zero():Quat {\r\n\t\tvar q:Quat = new Quat();\r\n\t\tq.setZero();\r\n\t\treturn q;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the square of the L2-norm of the quaternion, `sqrt` it to get the length.\r\n\t * @return `x^2 + y^2 + z^2 + w^2`\r\n\t */\r\n\tpublic inline function sqrLength():Float {\r\n\t\treturn (this[0] * this[0]) + (this[1] * this[1]) + (this[2] * this[2]) + (this[3] * this[3]);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the L2-norm of the vector\r\n\t * @return The length (magnitude) of the vector\r\n\t */\r\n\tpublic inline function length():Float {\r\n\t\treturn Math.sqrt(sqrLength());\r\n\t}\r\n\r\n\t/**\r\n\t * Normalizes the vector such that its `length == 1` while maintaining direction\r\n\t * @return `this`, normalized\r\n\t */\r\n\tpublic inline function normalize():Vec4 {\r\n\t\tvar l:Float = length();\r\n\t\tif(l != 0) {\r\n\t\t\tthis[0] /= l;\r\n\t\t\tthis[1] /= l;\r\n\t\t\tthis[2] /= l;\r\n\t\t\tthis[3] /= l;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetZero();\r\n\t\t}\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the conjugate of the quaternion. If the quaternion is normalized,\r\n\t * this function is faster than Quat.invert and produces the same result.\r\n\t */\r\n\tpublic inline function conjugate():Quat {\r\n\t\tthis[1] *= -1;\r\n\t\tthis[2] *= -1;\r\n\t\tthis[3] *= -1;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the inverse of the quaternion\r\n\t * @return [description]\r\n\t */\r\n\tpublic inline function invert():Quat {\r\n\t\tvar a:Array<Float> = [this[0], this[1], this[2], this[3]];\r\n\t\tvar dot:Float = (this[0] * a[0]) + (this[1] * a[1]) + (this[2] * a[2])\r\n\t\t\t+ (this[3] * a[3]);\r\n\r\n\t\tif(dot == 0) {\r\n\t\t\tsetZero();\r\n\t\t\treturn cast this;\r\n\t\t}\r\n\t\tvar invDot:Float = 1.0 / dot;\r\n\r\n\t\tthis[0] =  a[0] * invDot;\r\n\t\tthis[1] = -a[1] * invDot;\r\n\t\tthis[2] = -a[2] * invDot;\r\n\t\tthis[3] = -a[3] * invDot;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies `b` by `this`, storing the result in `this`\r\n\t * @param  b The quat to multiply by\r\n\t * @return   `this * b`\r\n\t */\r\n\tpublic inline function multQuat(b:Quat):Quat {\r\n\t    var ax = x, ay = y, az = z, aw = w,\r\n\t        bx = b.x, by = b.y, bz = b.z, bw = b.w;\r\n\t\tx = ax * bw + aw * bx + ay * bz - az * by;\r\n\t\ty = ay * bw + aw * by + az * bx - ax * bz;\r\n\t\tz = az * bw + aw * bz + ax * by - ay * bx;\r\n\t\tw = aw * bw - ax * bx - ay * by - az * bz;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying two quaternions\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multQuatOp(a:Quat, b:Quat):Quat {\r\n\t\treturn a.clone().multQuat(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts from Vec4s to Quats using standard casting\r\n\t */\r\n\t@:from\r\n\tpublic static inline function fromVec4(v:Vec4):Quat {\r\n\t\treturn new Quat(v.w, v.x, v.y, v.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Perform a spherical linear interpolation between `this` and the target.\r\n\t * @param  target The target endpoint\r\n\t * @param  t      a number in the range `[0, 1]` which describes how far\r\n\t *                along to interpolate.\r\n\t * @return        `this`\r\n\t */\r\n\tpublic inline function slerp(target:Quat, t:Float):Quat {\r\n\t\tvar b:Quat = target.clone();\r\n\r\n\t\t// calculate cosine\r\n\t\tvar cosom:Float = x * b.x + y * b.y + z * b.z + w * b.w;\r\n\t\t// adjust coefficients if necessary\r\n\t\tif(cosom < 0) {\r\n\t\t\tcosom *= -1;\r\n\t\t\tb.w *= -1;\r\n\t\t\tb.x *= -1;\r\n\t\t\tb.y *= -1;\r\n\t\t\tb.z *= -1;\r\n\t\t}\r\n\r\n\t\t// calculate coefficients\r\n\t\tvar scale0:Float;\r\n\t\tvar scale1:Float;\r\n\t\tif((1.0 - cosom) > 0.000001) {\r\n\t\t\t// standard case\r\n\t\t\tvar omega:Float = Math.acos(cosom);\r\n\t\t\tvar sinom:Float = Math.sin(omega);\r\n\t\t\tscale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n\t\t\tscale1 = Math.sin(t * omega) / sinom;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// base and target are very close,\r\n\t\t\t// just do linear\r\n\t\t\tscale0 = 1.0 - t;\r\n\t\t\tscale1 = t;\r\n\t\t}\r\n\r\n\t\t// calculate the final values!\r\n\t\tthis[0] = scale0 * this[0] + b[0] * scale1;\r\n\t\tthis[1] = scale0 * this[1] + b[1] * scale1;\r\n\t\tthis[2] = scale0 * this[2] + b[2] * scale1;\r\n\t\tthis[3] = scale0 * this[3] + b[3] * scale1;\r\n\t\treturn cast this;\r\n\t}\r\n}","package glm;\r\n\r\n/**\r\n * Utility class for dealing with 2D vectors\r\n */\r\nabstract Vec2(Array<Float>) {\r\n\t/**\r\n\t * Utility accessor for the first element\r\n\t */\r\n\tpublic var x(get, set):Float;\r\n\tfunction get_x():Float {\r\n\t\treturn this[0];\r\n\t}\r\n\tfunction set_x(v:Float) {\r\n\t\treturn this[0] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the second element\r\n\t */\r\n\tpublic var y(get, set):Float;\r\n\tfunction get_y():Float {\r\n\t\treturn this[1];\r\n\t}\r\n\tfunction set_y(v:Float) {\r\n\t\treturn this[1] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the first element\r\n\t */\r\n\tpublic var s(get, set):Float;\r\n\tfunction get_s():Float {\r\n\t\treturn this[0];\r\n\t}\r\n\tfunction set_s(v:Float) {\r\n\t\treturn this[0] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the second element\r\n\t */\r\n\tpublic var t(get, set):Float;\r\n\tfunction get_t():Float {\r\n\t\treturn this[1];\r\n\t}\r\n\tfunction set_t(v:Float) {\r\n\t\treturn this[1] = v;\r\n\t}\r\n\r\n\tpublic function new(x:Float=0, y:Float=0) {\r\n\t\tvar arr:Array<Float> = new Array<Float>();\r\n\t\tarr.push(x);\r\n\t\tarr.push(y);\r\n\t\tthis = arr;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility function to set the components\r\n\t */\r\n\tpublic function set(?x:Float, ?y:Float):Vec2 {\r\n\t\tif(x != null) this[0] = x;\r\n\t\tif(y != null) this[1] = y;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all the values to be 0\r\n\t * @return `this`\r\n\t */\r\n\tpublic function zero():Vec2 {\r\n\t\tthis[0] = 0;\r\n\t\tthis[1] = 0;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the square of the L2-norm of the vector, `sqrt` it to get the length.\r\n\t * @return `x^2 + y^2`\r\n\t */\r\n\tpublic function sqrLength():Float {\r\n\t\treturn (this[0] * this[0]) + (this[1] * this[1]);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the L2-norm of the vector\r\n\t * @return The length (magnitude) of the vector\r\n\t */\r\n\tpublic function length():Float {\r\n\t\treturn Math.sqrt(sqrLength());\r\n\t}\r\n\r\n\t/**\r\n\t * Normalizes the vector such that its `length == 1` while maintaining direction\r\n\t * @return `this`, normalized\r\n\t */\r\n\tpublic function normalize():Vec2 {\r\n\t\tvar l:Float = length();\r\n\t\tif(l != 0) {\r\n\t\t\tthis[0] /= l;\r\n\t\t\tthis[1] /= l;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tzero();\r\n\t\t}\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Photocopies `this`\r\n\t * @return A new `Vec2` who's elements are the same as `this`\r\n\t */\r\n\tpublic function clone():Vec2 {\r\n\t\tvar copy:Vec2 = new Vec2();\r\n\t\tcopy[0] = this[0];\r\n\t\tcopy[1] = this[1];\r\n\t\treturn copy;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Copies the values of `v` into `this`\r\n\t * @param v The vector to copy from\r\n\t * @return `this`\r\n\t */\r\n\tpublic function copy(v:Vec2):Vec2 {\r\n\t\tthis[0] = v[0];\r\n\t\tthis[1] = v[1];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Element-based addition\r\n\t * @param  b The vector to add to `this`\r\n\t * @return   `this.x + b.x`, etc\r\n\t */\r\n\tpublic function addVec2(b:Vec2):Vec2 {\r\n\t\tthis[0] += b[0];\r\n\t\tthis[1] += b[1];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows adding two vectors together\r\n\t */\r\n\t@:op(A + B)\r\n\tpublic static inline function addVec2Op(a:Vec2, b:Vec2):Vec2 {\r\n\t\treturn a.clone().addVec2(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Element-based subtraction\r\n\t * @param  b The vector to subtract from `this`\r\n\t * @return   `this.x - b.x`, etc\r\n\t */\r\n\tpublic function subtractVec2(b:Vec2):Vec2 {\r\n\t\tthis[0] -= b[0];\r\n\t\tthis[1] -= b[1];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows subtracting two vectors\r\n\t */\r\n\t@:op(A - B)\r\n\tpublic static inline function subtractVec2Op(a:Vec2, b:Vec2):Vec2 {\r\n\t\treturn a.clone().subtractVec2(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Add a scalar to this\r\n\t * @param  b The scalar to add\r\n\t * @return   `b` added to `this`\r\n\t */\r\n\tpublic function addScalar(b:Float):Vec2 {\r\n\t\tthis[0] += b;\r\n\t\tthis[1] += b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows adding by a scalar (`this + 4.2`)\r\n\t */\r\n\t@:op(A + B)\r\n\tpublic static inline function addScalarOp(a:Vec2, b:Float):Vec2 {\r\n\t\treturn a.clone().addScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows adding by a scalar (`4.2 + this`)\r\n\t */\r\n\t@:op(A + B)\r\n\tpublic static inline function addScalarOp2(b:Float, a:Vec2):Vec2 {\r\n\t\treturn a.clone().addScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Subtract a scalar from this\r\n\t * @param  b The scalar to subtract\r\n\t * @return   `b` subtracted from `this`\r\n\t */\r\n\tpublic function subtractScalar(b:Float):Vec2 {\r\n\t\tthis[0] -= b;\r\n\t\tthis[1] -= b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows subtracting by a scalar (`this + 4.2`)\r\n\t */\r\n\t@:op(A - B)\r\n\tpublic static inline function subtractScalarOp(a:Vec2, b:Float):Vec2 {\r\n\t\treturn a.clone().subtractScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows subtracting by a scalar (`4.2 + this`)\r\n\t */\r\n\t@:op(A - B)\r\n\tpublic static inline function subtractScalarOp2(a:Float, b:Vec2):Vec2 {\r\n\t\treturn b.clone().multiplyScalar(-1).addScalar(a);\r\n\t}\r\n\r\n\t/**\r\n\t * Mutliply this by a scalar\r\n\t * @param  b The scalar to multiply by\r\n\t * @return   `this`, scaled by `b`\r\n\t */\r\n\tpublic function multiplyScalar(b:Float):Vec2 {\r\n\t\tthis[0] *= b;\r\n\t\tthis[1] *= b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying by a scalar (`this * 4.2`)\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyScalarOp(a:Vec2, b:Float):Vec2 {\r\n\t\treturn a.clone().multiplyScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying by a scalar (`4.2 * this`)\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyScalarOp2(b:Float, a:Vec2):Vec2 {\r\n\t\treturn a.clone().multiplyScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Dividy this by a scalar\r\n\t * @param  b The scalar to divide by\r\n\t * @return   `this`, divided by `b`\r\n\t */\r\n\tpublic function divideScalar(b:Float):Vec2 {\r\n\t\tthis[0] /= b;\r\n\t\tthis[1] /= b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows dividing by a scalar (`this / 4.2`)\r\n\t */\r\n\t@:op(A / B)\r\n\tpublic static inline function divideScalarOp(a:Vec2, b:Float):Vec2 {\r\n\t\treturn a.clone().divideScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `vec[i]` where `i ∈ [0, 1]`\r\n\t */\r\n\t@:arrayAccess public inline function arrayGet(i:Int):Float {\r\n\t\treturn this[i];\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `vec[i] = x` where `i ∈ [0, 1]`\r\n\t */\r\n\t@:arrayAccess public inline function arraySet(i:Int, x:Float):Float {\r\n\t\treturn this[i] = x;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `this` to an array of floats\r\n\t * @return `this`\r\n\t */\r\n\tpublic inline function toArray():Array<Float> {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolate `this` from its current value to the target\r\n\t * @param  target The target endpoint\r\n\t * @param  t      a number in the range `[0, 1]` which describes how far\r\n\t *                along to interpolate.\r\n\t * @return        `this`\r\n\t */\r\n\tpublic inline function lerp(target:Vec2, t:Float):Vec2 {\r\n\t\tthis[0] = GLM.lerp(this[0], target[0], t);\r\n\t\tthis[1] = GLM.lerp(this[1], target[1], t);\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the dot product between two Vec2s\r\n\t */\r\n\tpublic static inline function dot(a:Vec2, b:Vec2):Float {\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts from Vec3s to Vec2s using standard casting\r\n\t */\r\n\t@:from\r\n\tpublic static inline function fromVec3(v:Vec3):Vec2 {\r\n\t\treturn new Vec2(v.x, v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts from Vec4s to Vec2s using standard casting\r\n\t */\r\n\t@:from\r\n\tpublic static inline function fromVec4(v:Vec4):Vec2 {\r\n\t\treturn new Vec2(v.x, v.y);\r\n\t}\r\n}","package glm;\r\n\r\n/**\r\n * Utility class for dealing with 4D vectors\r\n */\r\nabstract Vec4(Array<Float>) {\r\n\t/**\r\n\t * Utility accessor for the first element\r\n\t */\r\n\tpublic var x(get, set):Float;\r\n\tfunction get_x():Float {\r\n\t\treturn this[0];\r\n\t}\r\n\tfunction set_x(v:Float) {\r\n\t\treturn this[0] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the second element\r\n\t */\r\n\tpublic var y(get, set):Float;\r\n\tfunction get_y():Float {\r\n\t\treturn this[1];\r\n\t}\r\n\tfunction set_y(v:Float) {\r\n\t\treturn this[1] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the third element\r\n\t */\r\n\tpublic var z(get, set):Float;\r\n\tfunction get_z():Float {\r\n\t\treturn this[2];\r\n\t}\r\n\tfunction set_z(v:Float) {\r\n\t\treturn this[2] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the fourth element\r\n\t */\r\n\tpublic var w(get, set):Float;\r\n\tfunction get_w():Float {\r\n\t\treturn this[3];\r\n\t}\r\n\tfunction set_w(v:Float) {\r\n\t\treturn this[3] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the first element\r\n\t */\r\n\tpublic var r(get, set):Float;\r\n\tfunction get_r():Float {\r\n\t\treturn this[0];\r\n\t}\r\n\tfunction set_r(v:Float) {\r\n\t\treturn this[0] = v;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Utility accessor for the second element\r\n\t */\r\n\tpublic var g(get, set):Float;\r\n\tfunction get_g():Float {\r\n\t\treturn this[1];\r\n\t}\r\n\tfunction set_g(v:Float) {\r\n\t\treturn this[1] = v;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Utility accessor for the third element\r\n\t */\r\n\tpublic var b(get, set):Float;\r\n\tfunction get_b():Float {\r\n\t\treturn this[2];\r\n\t}\r\n\tfunction set_b(v:Float) {\r\n\t\treturn this[2] = v;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Utility accessor for the fourth element\r\n\t */\r\n\tpublic var a(get, set):Float;\r\n\tfunction get_a():Float {\r\n\t\treturn this[3];\r\n\t}\r\n\tfunction set_a(v:Float) {\r\n\t\treturn this[3] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the first element\r\n\t */\r\n\tpublic var s(get, set):Float;\r\n\tfunction get_s():Float {\r\n\t\treturn this[0];\r\n\t}\r\n\tfunction set_s(v:Float) {\r\n\t\treturn this[0] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the second element\r\n\t */\r\n\tpublic var t(get, set):Float;\r\n\tfunction get_t():Float {\r\n\t\treturn this[1];\r\n\t}\r\n\tfunction set_t(v:Float) {\r\n\t\treturn this[1] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the third element\r\n\t */\r\n\tpublic var p(get, set):Float;\r\n\tfunction get_p():Float {\r\n\t\treturn this[2];\r\n\t}\r\n\tfunction set_p(v:Float) {\r\n\t\treturn this[2] = v;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility accessor for the fourth element\r\n\t */\r\n\tpublic var q(get, set):Float;\r\n\tfunction get_q():Float {\r\n\t\treturn this[3];\r\n\t}\r\n\tfunction set_q(v:Float) {\r\n\t\treturn this[3] = v;\r\n\t}\r\n\r\n\tpublic function new(x:Float=0, y:Float=0, z:Float=0, w:Float=0) {\r\n\t\tvar arr:Array<Float> = new Array<Float>();\r\n\t\tarr.push(x);\r\n\t\tarr.push(y);\r\n\t\tarr.push(z);\r\n\t\tarr.push(w);\r\n\t\tthis = arr;\r\n\t}\r\n\r\n\t/**\r\n\t * Utility function to set the components\r\n\t */\r\n\tpublic function set(?x:Float, ?y:Float, ?z:Float, ?w:Float):Vec4 {\r\n\t\tif(x != null) this[0] = x;\r\n\t\tif(y != null) this[1] = y;\r\n\t\tif(z != null) this[2] = z;\r\n\t\tif(w != null) this[3] = w;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all the values to be 0\r\n\t * @return `this`\r\n\t */\r\n\tpublic function zero():Vec4 {\r\n\t\tthis[0] = 0;\r\n\t\tthis[1] = 0;\r\n\t\tthis[2] = 0;\r\n\t\tthis[3] = 0;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the square of the L2-norm of the vector, `sqrt` it to get the length.\r\n\t * @return `x^2 + y^2 + z^2 + w^2`\r\n\t */\r\n\tpublic function sqrLength():Float {\r\n\t\treturn (this[0] * this[0]) + (this[1] * this[1]) + (this[2] * this[2]) + (this[3] * this[3]);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the L2-norm of the vector\r\n\t * @return The length (magnitude) of the vector\r\n\t */\r\n\tpublic function length():Float {\r\n\t\treturn Math.sqrt(sqrLength());\r\n\t}\r\n\r\n\t/**\r\n\t * Normalizes the vector such that its `length == 1` while maintaining direction\r\n\t * @return `this`, normalized\r\n\t */\r\n\tpublic function normalize():Vec4 {\r\n\t\tvar l:Float = length();\r\n\t\tif(l != 0) {\r\n\t\t\tthis[0] /= l;\r\n\t\t\tthis[1] /= l;\r\n\t\t\tthis[2] /= l;\r\n\t\t\tthis[3] /= l;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tzero();\r\n\t\t}\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Photocopies `this`\r\n\t * @return A new `Vec4` who's elements are the same as `this`\r\n\t */\r\n\tpublic function clone():Vec4 {\r\n\t\tvar copy:Vec4 = new Vec4();\r\n\t\tcopy[0] = this[0];\r\n\t\tcopy[1] = this[1];\r\n\t\tcopy[2] = this[2];\r\n\t\tcopy[3] = this[3];\r\n\t\treturn copy;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Copies the values of `v` into `this`\r\n\t * @param v The vector to copy from\r\n\t * @return `this`\r\n\t */\r\n\tpublic function copy(v:Vec4):Vec4 {\r\n\t\tthis[0] = v[0];\r\n\t\tthis[1] = v[1];\r\n\t\tthis[2] = v[2];\r\n\t\tthis[3] = v[3];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Element-based addition\r\n\t * @param  b The vector to add to `this`\r\n\t * @return   `this.x + b.x`, etc\r\n\t */\r\n\tpublic function addVec4(b:Vec4):Vec4 {\r\n\t\tthis[0] += b[0];\r\n\t\tthis[1] += b[1];\r\n\t\tthis[2] += b[2];\r\n\t\tthis[3] += b[3];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows adding two vectors together\r\n\t */\r\n\t@:op(A + B)\r\n\tpublic static inline function addVec4Op(a:Vec4, b:Vec4):Vec4 {\r\n\t\treturn a.clone().addVec4(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Element-based subtraction\r\n\t * @param  b The vector to subtract from `this`\r\n\t * @return   `this.x - b.x`, etc\r\n\t */\r\n\tpublic function subtractVec4(b:Vec4):Vec4 {\r\n\t\tthis[0] -= b[0];\r\n\t\tthis[1] -= b[1];\r\n\t\tthis[2] -= b[2];\r\n\t\tthis[3] -= b[3];\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows subtracting two vectors\r\n\t */\r\n\t@:op(A - B)\r\n\tpublic static inline function subtractVec4Op(a:Vec4, b:Vec4):Vec4 {\r\n\t\treturn a.clone().subtractVec4(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Add a scalar to this\r\n\t * @param  b The scalar to add\r\n\t * @return   `b` added to `this`\r\n\t */\r\n\tpublic function addScalar(b:Float):Vec4 {\r\n\t\tthis[0] += b;\r\n\t\tthis[1] += b;\r\n\t\tthis[2] += b;\r\n\t\tthis[3] += b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows adding by a scalar (`this + 4.2`)\r\n\t */\r\n\t@:op(A + B)\r\n\tpublic static inline function addScalarOp(a:Vec4, b:Float):Vec4 {\r\n\t\treturn a.clone().addScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows adding by a scalar (`4.2 + this`)\r\n\t */\r\n\t@:op(A + B)\r\n\tpublic static inline function addScalarOp2(b:Float, a:Vec4):Vec4 {\r\n\t\treturn a.clone().addScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Subtract a scalar from this\r\n\t * @param  b The scalar to subtract\r\n\t * @return   `b` subtracted from `this`\r\n\t */\r\n\tpublic function subtractScalar(b:Float):Vec4 {\r\n\t\tthis[0] -= b;\r\n\t\tthis[1] -= b;\r\n\t\tthis[2] -= b;\r\n\t\tthis[3] -= b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows subtracting by a scalar (`this + 4.2`)\r\n\t */\r\n\t@:op(A - B)\r\n\tpublic static inline function subtractScalarOp(a:Vec4, b:Float):Vec4 {\r\n\t\treturn a.clone().subtractScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows subtracting by a scalar (`4.2 + this`)\r\n\t */\r\n\t@:op(A - B)\r\n\tpublic static inline function subtractScalarOp2(a:Float, b:Vec4):Vec4 {\r\n\t\treturn b.clone().multiplyScalar(-1).addScalar(a);\r\n\t}\r\n\r\n\t/**\r\n\t * Mutliply this by a scalar\r\n\t * @param  b The scalar to multiply by\r\n\t * @return   `this`, scaled by `b`\r\n\t */\r\n\tpublic function multiplyScalar(b:Float):Vec4 {\r\n\t\tthis[0] *= b;\r\n\t\tthis[1] *= b;\r\n\t\tthis[2] *= b;\r\n\t\tthis[3] *= b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying by a scalar (`this * 4.2`)\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyScalarOp(a:Vec4, b:Float):Vec4 {\r\n\t\treturn a.clone().multiplyScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows multiplying by a scalar (`4.2 * this`)\r\n\t */\r\n\t@:op(A * B)\r\n\tpublic static inline function multiplyScalarOp2(b:Float, a:Vec4):Vec4 {\r\n\t\treturn a.clone().multiplyScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Dividy this by a scalar\r\n\t * @param  b The scalar to divide by\r\n\t * @return   `this`, divided by `b`\r\n\t */\r\n\tpublic function divideScalar(b:Float):Vec4 {\r\n\t\tthis[0] /= b;\r\n\t\tthis[1] /= b;\r\n\t\tthis[2] /= b;\r\n\t\tthis[3] /= b;\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows dividing by a scalar (`this / 4.2`)\r\n\t */\r\n\t@:op(A / B)\r\n\tpublic static inline function divideScalarOp(a:Vec4, b:Float):Vec4 {\r\n\t\treturn a.clone().divideScalar(b);\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `vec[i]` where `i ∈ [0, 1, 2, 3]`\r\n\t */\r\n\t@:arrayAccess public inline function arrayGet(i:Int):Float {\r\n\t\treturn this[i];\r\n\t}\r\n\r\n\t/**\r\n\t * Provides array access in the form of `vec[i] = x` where `i ∈ [0, 1, 2, 3]`\r\n\t */\r\n\t@:arrayAccess public inline function arraySet(i:Int, x:Float):Float {\r\n\t\treturn this[i] = x;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `this` to an array of floats\r\n\t * @return `this`\r\n\t */\r\n\tpublic inline function toArray():Array<Float> {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolate `this` from its current value to the target\r\n\t * @param  target The target endpoint\r\n\t * @param  t      a number in the range `[0, 1]` which describes how far\r\n\t *                along to interpolate.\r\n\t * @return        `this`\r\n\t */\r\n\tpublic inline function lerp(target:Vec4, t:Float):Vec4 {\r\n\t\tthis[0] = GLM.lerp(this[0], target[0], t);\r\n\t\tthis[1] = GLM.lerp(this[1], target[1], t);\r\n\t\tthis[2] = GLM.lerp(this[2], target[2], t);\r\n\t\tthis[3] = GLM.lerp(this[3], target[3], t);\r\n\t\treturn cast this;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the dot product between two Vec4s\r\n\t */\r\n\tpublic static inline function dot(a:Vec4, b:Vec4):Float {\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts from Vec2s to Vec4s using standard casting\r\n\t */\r\n\t@:from\r\n\tpublic static inline function fromVec2(v:Vec2):Vec4 {\r\n\t\treturn new Vec4(v.x, v.y, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts from Vec3s to Vec4s using standard casting\r\n\t */\r\n\t@:from\r\n\tpublic static inline function fromVec3(v:Vec3):Vec4 {\r\n\t\treturn new Vec4(v.x, v.y, v.z, 1);\r\n\t}\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tElements return by `CallStack` methods.\n**/\nenum StackItem {\n\tCFunction;\n\tModule( m : String );\n\tFilePos( s : Null<StackItem>, file : String, line : Int );\n\tMethod( classname : String, method : String );\n\tLocalFunction( ?v : Int );\n}\n\n/**\n\tGet informations about the call stack.\n**/\nclass CallStack {\n\t#if js\n\tstatic var lastException:js.Error;\n\n\tstatic function getStack(e:js.Error):Array<StackItem> {\n\t\tif (e == null) return [];\n\t\t// https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\t\tvar oldValue = (untyped Error).prepareStackTrace;\n\t\t(untyped Error).prepareStackTrace = function (error, callsites :Array<Dynamic>) {\n\t\t\tvar stack = [];\n\t\t\tfor (site in callsites) {\n\t\t\t\tif (wrapCallSite != null) site = wrapCallSite(site);\n\t\t\t\tvar method = null;\n\t\t\t\tvar fullName :String = site.getFunctionName();\n\t\t\t\tif (fullName != null) {\n\t\t\t\t\tvar idx = fullName.lastIndexOf(\".\");\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tvar className = fullName.substr(0, idx);\n\t\t\t\t\t\tvar methodName = fullName.substr(idx+1);\n\t\t\t\t\t\tmethod = Method(className, methodName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstack.push(FilePos(method, site.getFileName(), site.getLineNumber()));\n\t\t\t}\n\t\t\treturn stack;\n\t\t}\n\t\tvar a = makeStack(e.stack);\n\t\t(untyped Error).prepareStackTrace = oldValue;\n\t\treturn a;\n\t}\n\n\t// support for source-map-support module\n\t@:noCompletion\n\tpublic static var wrapCallSite:Dynamic->Dynamic;\n\t#end\n\n\t/**\n\t\tReturn the call stack elements, or an empty array if not available.\n\t**/\n\tpublic static function callStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\tvar a = makeStack(untyped __dollar__callstack());\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = makeStack( new flash.errors.Error().getStackTrace() );\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%s\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_call_stack(true);\n\t\t\treturn makeStack(s);\n\t\t#elseif js\n\t\t\ttry {\n\t\t\t\tthrow new js.Error();\n\t\t\t} catch( e : Dynamic ) {\n\t\t\t\tvar a = getStack(e);\n\t\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.lang.Thread.currentThread().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(1, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar infos = python.lib.Traceback.extract_stack();\n\t\t\tinfos.pop();\n\t\t\tinfos.reverse();\n\t\t\tfor (elem in infos)\n\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturn the exception stack : this is the stack elements between\n\t\tthe place the last exception was thrown and the place it was\n\t\tcaught, or an empty array if not available.\n\t**/\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tpublic static function exceptionStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\treturn makeStack(untyped __dollar__excstack());\n\t\t#elseif as3\n\t\t\treturn new Array();\n\t\t#elseif flash\n\t\t\tvar err : flash.errors.Error = untyped flash.Boot.lastError;\n\t\t\tif( err == null ) return new Array();\n\t\t\tvar a = makeStack( err.getStackTrace() );\n\t\t\tvar c = callStack();\n\t\t\tvar i = c.length - 1;\n\t\t\twhile( i > 0 ) {\n\t\t\t\tif( Std.string(a[a.length-1]) == Std.string(c[i]) )\n\t\t\t\t\ta.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%e\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_exception_stack();\n\t\t\treturn makeStack(s);\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.internal.Exceptions.currentException().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// stack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(cs.internal.Exceptions.exception, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar exc = python.lib.Sys.exc_info();\n\t\t\tif (exc._3 != null)\n\t\t\t{\n\t\t\t\tvar infos = python.lib.Traceback.extract_tb(exc._3);\n\t\t\t\tinfos.reverse();\n\t\t\t\tfor (elem in infos)\n\t\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#elseif js\n\t\t\treturn untyped __define_feature__(\"haxe.CallStack.exceptionStack\", getStack(lastException));\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a representation of the stack as a printable string.\n\t**/\n\tpublic static function toString( stack : Array<StackItem> ) {\n\t\tvar b = new StringBuf();\n\t\tfor( s in stack ) {\n\t\t\tb.add(\"\\nCalled from \");\n\t\t\titemToString(b,s);\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\tprivate static function itemToString( b : StringBuf, s ) {\n\t\tswitch( s ) {\n\t\tcase CFunction:\n\t\t\tb.add(\"a C function\");\n\t\tcase Module(m):\n\t\t\tb.add(\"module \");\n\t\t\tb.add(m);\n\t\tcase FilePos(s,file,line):\n\t\t\tif( s != null ) {\n\t\t\t\titemToString(b,s);\n\t\t\t\tb.add(\" (\");\n\t\t\t}\n\t\t\tb.add(file);\n\t\t\tb.add(\" line \");\n\t\t\tb.add(line);\n\t\t\tif( s != null ) b.add(\")\");\n\t\tcase Method(cname,meth):\n\t\t\tb.add(cname);\n\t\t\tb.add(\".\");\n\t\t\tb.add(meth);\n\t\tcase LocalFunction(n):\n\t\t\tb.add(\"local function #\");\n\t\t\tb.add(n);\n\t\t}\n\t}\n\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tprivate static function makeStack(s #if cs : cs.system.diagnostics.StackTrace #end) {\n\t\t#if neko\n\t\t\tvar a = new Array();\n\t\t\tvar l = untyped __dollar__asize(s);\n\t\t\tvar i = 0;\n\t\t\twhile( i < l ) {\n\t\t\t\tvar x = s[i++];\n\t\t\t\tif( x == null )\n\t\t\t\t\ta.unshift(CFunction);\n\t\t\t\telse if( untyped __dollar__typeof(x) == __dollar__tstring )\n\t\t\t\t\ta.unshift(Module(new String(x)));\n\t\t\t\telse\n\t\t\t\t\ta.unshift(FilePos(null,new String(untyped x[0]),untyped x[1]));\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = new Array();\n\t\t\tvar r = ~/at ([^\\/]+?)\\$?(\\/[^\\(]+)?\\(\\)(\\[(.*?):([0-9]+)\\])?/;\n\t\t\tvar rlambda = ~/^MethodInfo-([0-9]+)$/g;\n\t\t\twhile( r.match(s) ) {\n\t\t\t\tvar cl = r.matched(1).split(\"::\").join(\".\");\n\t\t\t\tvar meth = r.matched(2);\n\t\t\t\tvar item;\n\t\t\t\tif( meth == null ) {\n\t\t\t\t\tif( rlambda.match(cl) )\n\t\t\t\t\t\titem = LocalFunction(Std.parseInt(rlambda.matched(1)));\n\t\t\t\t\telse\n\t\t\t\t\t\titem = Method(cl,\"new\");\n\t\t\t\t} else\n\t\t\t\t\titem = Method(cl,meth.substr(1));\n\t\t\t\tif( r.matched(3) != null )\n\t\t\t\t\titem = FilePos( item, r.matched(4), Std.parseInt(r.matched(5)) );\n\t\t\t\ta.push(item);\n\t\t\t\ts = r.matchedRight();\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\tif (!untyped __call__(\"isset\", __var__(\"GLOBALS\", s)))\n\t\t\t\treturn [];\n\t\t\tvar a : Array<String> = untyped __var__(\"GLOBALS\", s);\n\t\t\tvar m = [];\n\t\t\tfor( i in 0...a.length - ((s == \"%s\") ? 2 : 0)) {\n\t\t\t\tvar d = a[i].split(\"::\");\n\t\t\t\tm.unshift(Method(d[0],d[1]));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif cpp\n\t\t\tvar stack : Array<String> = s;\n\t\t\tvar m = new Array<StackItem>();\n\t\t\tfor(func in stack) {\n\t\t\t\tvar words = func.split(\"::\");\n\t\t\t\tif (words.length==0)\n\t\t\t\t\tm.push(CFunction)\n\t\t\t\telse if (words.length==2)\n\t\t\t\t\tm.push(Method(words[0],words[1]));\n\t\t\t\telse if (words.length==4)\n\t\t\t\t\tm.push(FilePos( Method(words[0],words[1]),words[2],Std.parseInt(words[3])));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif js\n\t\t\tif (s == null) {\n\t\t\t\treturn [];\n\t\t\t} else if ((untyped __js__(\"typeof\"))(s) == \"string\") {\n\t\t\t\t// Return the raw lines in browsers that don't support prepareStackTrace\n\t\t\t\tvar stack : Array<String> = s.split(\"\\n\");\n\t\t\t\tif( stack[0] == \"Error\" ) stack.shift();\n\t\t\t\tvar m = [];\n\t\t\t\tvar rie10 = ~/^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$/;\n\t\t\t\tfor( line in stack ) {\n\t\t\t\t\tif( rie10.match(line) ) {\n\t\t\t\t\t\tvar path = rie10.matched(1).split(\".\");\n\t\t\t\t\t\tvar meth = path.pop();\n\t\t\t\t\t\tvar file = rie10.matched(2);\n\t\t\t\t\t\tvar line = Std.parseInt(rie10.matched(3));\n\t\t\t\t\t\tm.push(FilePos( meth == \"Anonymous function\" ? LocalFunction() : meth == \"Global code\" ? null : Method(path.join(\".\"),meth), file, line ));\n\t\t\t\t\t} else\n\t\t\t\t\t\tm.push(Module(StringTools.trim(line))); // A little weird, but better than nothing\n\t\t\t\t}\n\t\t\t\treturn m;\n\t\t\t} else {\n\t\t\t\treturn cast s;\n\t\t\t}\n\t\t#elseif cs\n\t\t\tvar stack = [];\n\t\t\tfor (i in 0...s.FrameCount)\n\t\t\t{\n\t\t\t\tvar frame = s.GetFrame(i);\n\t\t\t\tvar m = frame.GetMethod();\n\n\t\t\t\tvar method = StackItem.Method(m.ReflectedType.ToString(), m.Name);\n\n\t\t\t\tvar fileName = frame.GetFileName();\n\t\t\t\tvar lineNumber = frame.GetFileLineNumber();\n\n\t\t\t\tif (fileName != null || lineNumber >= 0)\n\t\t\t\t\tstack.push(FilePos(method, fileName, lineNumber));\n\t\t\t\telse\n\t\t\t\t\tstack.push(method);\n\t\t\t}\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\nusing haxe.Int64;\n\n /**\n\tA cross-platform signed 64-bit integer.\n\tInt64 instances can be created from two 32-bit words using `Int64.make()`.\n **/\n#if flash\n@:notNull\n#end\nabstract Int64(__Int64) from __Int64 to __Int64\n{\n\tprivate inline function new( x : __Int64 )\n\t\tthis = x;\n\n\t/**\n\t\tMakes a copy of `this` Int64.\n\t**/\n\tpublic inline function copy():Int64\n\t\treturn make( high, low );\n\n\t/**\n\t\tConstruct an Int64 from two 32-bit words `high` and `low`.\n\t**/\n\tpublic static inline function make( high:Int32, low:Int32 ) : Int64\n\t\treturn new Int64( new __Int64(high, low) );\n\n\t/**\n\t\tReturns an Int64 with the value of the Int `x`.\n\t\t`x` is sign-extended to fill 64 bits.\n\t**/\n\t@:from public static inline function ofInt( x : Int ) : Int64\n\t\treturn make( x >> 31, x );\n\n\t/**\n\t\tReturns an Int with the value of the Int64 `x`.\n\t\tThrows an exception  if `x` cannot be represented in 32 bits.\n\t**/\n\tpublic static inline function toInt( x : Int64 ) : Int {\n\t\tif( x.high != x.low >> 31 )\n\t\t\tthrow \"Overflow\";\n\n\t\treturn x.low;\n\t}\n\n\t/**\n\t\tReturns whether the value `val` is of type `haxe.Int64`\n\t**/\n\tinline public static function is( val : Dynamic ) : Bool\n\t\treturn Std.is(val,__Int64);\n\n\t/**\n\t\tReturns the high 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use high instead\")\n\tpublic static inline function getHigh( x : Int64 ) : Int32\n\t\treturn x.high;\n\n\t/**\n\t\tReturns the low 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use low instead\")\n\tpublic static inline function getLow( x : Int64 ) : Int32\n\t\treturn x.low;\n\n\t/**\n\t\tReturns `true` if `x` is less than zero.\n\t**/\n\tpublic static inline function isNeg( x : Int64) : Bool\n\t\treturn x.high < 0;\n\n\t/**\n\t\tReturns `true` if `x` is exactly zero.\n\t**/\n\tpublic static inline function isZero( x : Int64 ) : Bool\n\t\treturn x == 0;\n\n\t/**\n\t\tCompares `a` and `b` in signed mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function compare( a : Int64, b : Int64 ) : Int {\n\t\tvar v = a.high - b.high;\n\t\tv = if( v != 0 ) v else Int32.ucompare(a.low, b.low);\n\t\treturn a.high < 0 ? (b.high < 0 ? v : -1) : (b.high >= 0 ? v : 1);\n\t}\n\n\t/**\n\t\tCompares `a` and `b` in unsigned mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function ucompare( a : Int64, b : Int64 ) : Int {\n\t\tvar v = Int32.ucompare(a.high, b.high);\n\t\treturn if( v != 0 ) v else Int32.ucompare(a.low, b.low);\n\t}\n\n\t/**\n\t\tReturns a signed decimal `String` representation of `x`.\n\t**/\n\tpublic static inline function toStr(x:Int64) : String\n\t\treturn x.toString();\n\n\t#if as3 public #else private #end function toString() : String\n\t{\n\t\tvar i : Int64 = cast this;\n\t\tif ( i == 0 )\n\t\t\treturn \"0\";\n\t\tvar str = \"\";\n\t\tvar neg = false;\n\t\tif( i.isNeg() ) {\n\t\t\tneg = true;\n\t\t\ti = -i;\n\t\t}\n\t\tvar ten : Int64 = 10;\n\t\twhile( i != 0 ) {\n\t\t\tvar r = i.divMod( ten );\n\t\t\tstr = r.modulus.low + str;\n\t\t\ti = r.quotient;\n\t\t}\n\t\tif( neg ) str = \"-\" + str;\n\t\treturn str;\n\t}\n\n\t/**\n\t\tPerforms signed integer divison of `dividend` by `divisor`.\n\t\tReturns `{ quotient : Int64, modulus : Int64 }`.\n\t**/\n\tpublic static function divMod( dividend : Int64, divisor : Int64 ) : { quotient : Int64, modulus : Int64 }\n\t{\n\t\t// Handle special cases of 0 and 1\n\t\tif( divisor.high == 0 )\n\t\t{\n\t\t\tswitch( divisor.low ) {\n\t\t\t\tcase 0: throw \"divide by zero\";\n\t\t\t\tcase 1: return { quotient : dividend.copy(), modulus : 0 };\n\t\t\t}\n\t\t}\n\n\t\tvar divSign = dividend.isNeg() != divisor.isNeg();\n\n\t\tvar modulus = dividend.isNeg() ? -dividend : dividend.copy();\n\t\tdivisor = divisor.isNeg() ? -divisor : divisor;\n\n\t\tvar quotient : Int64 = 0;\n\t\tvar mask : Int64 = 1;\n\n\t\twhile( !divisor.isNeg() ) {\n\t\t\tvar cmp = ucompare( divisor, modulus );\n\t\t\tdivisor <<= 1;\n\t\t\tmask <<= 1;\n\t\t\tif( cmp >= 0 ) break;\n\t\t}\n\n\t\twhile( mask != 0 ) {\n\t\t\tif( ucompare(modulus, divisor) >= 0 ) {\n\t\t\t\tquotient |= mask;\n\t\t\t\tmodulus -= divisor;\n\t\t\t}\n\t\t\tmask >>>= 1;\n\t\t\tdivisor >>>= 1;\n\t\t}\n\n\t\tif( divSign ) quotient = -quotient;\n\t\tif( dividend.isNeg() ) modulus = -modulus;\n\n\t\treturn {\n\t\t\tquotient : quotient,\n\t\t\tmodulus  : modulus\n\t\t};\n\t}\n\n\t/**\n\t\tReturns the negative of `x`.\n\t**/\n\t@:op(-A) public static inline function neg( x : Int64 ) : Int64 {\n\t\tvar high = ~x.high;\n\t\tvar low = -x.low;\n\t\tif( low == 0 )\n\t\t\thigh++;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(++A) private inline function preIncrement() : Int64 {\n\t\tthis.low++;\n\t\tif( this.low == 0 ) this.high++;\n\t\treturn cast this;\n\t}\n\n\t@:op(A++) private inline function postIncrement() : Int64 {\n\t\tvar ret = copy();\n\t\tpreIncrement();\n\t\treturn ret;\n\t}\n\n\t@:op(--A) private inline function preDecrement() : Int64 {\n\t\tif( this.low == 0 ) this.high--;\n\t\tthis.low--;\n\t\treturn cast this;\n\t}\n\n\t@:op(A--) private inline function postDecrement() : Int64 {\n\t\tvar ret = copy();\n\t\tpreDecrement();\n\t\treturn ret;\n\t}\n\n\t/**\n\t\tReturns the sum of `a` and `b`.\n\t**/\n\t@:op(A + B) public static inline function add( a : Int64, b : Int64 ) : Int64 {\n\t\tvar high = a.high + b.high;\n\t\tvar low = a.low + b.low;\n\t\tif( Int32.ucompare( low, a.low ) < 0 ) high++;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(A + B) @:commutative private static inline function addInt( a : Int64, b : Int ) : Int64\n\t\treturn add( a, b );\n\n\t/**\n\t\tReturns `a` minus `b`.\n\t**/\n\t@:op(A - B) public static inline function sub( a : Int64, b : Int64 ) : Int64 {\n\t\tvar high = a.high - b.high;\n\t\tvar low = a.low - b.low;\n\t\tif( Int32.ucompare( a.low, b.low ) < 0 ) high--;\n        return make( high, low );\n\t}\n\n\t@:op(A - B) private static inline function subInt( a : Int64, b : Int ) : Int64\n\t\treturn sub( a, b );\n\n\t@:op(A - B) private static inline function intSub( a : Int, b : Int64 ) : Int64\n\t\treturn sub( a, b );\n\n\t/**\n\t\tReturns the product of `a` and `b`.\n\t**/\n\t@:op(A * B) public static inline function mul( a : Int64, b : Int64 ) : Int64 {\n\t\tvar mask = 0xFFFF;\n\t\tvar al = a.low & mask, ah = a.low >>> 16;\n\t\tvar bl = b.low & mask, bh = b.low >>> 16;\n\t\tvar p00 = al * bl;\n\t\tvar p10 = ah * bl;\n\t\tvar p01 = al * bh;\n\t\tvar p11 = ah * bh;\n\t\tvar low = p00;\n\t\tvar high = p11 + (p01 >>> 16) + (p10 >>> 16);\n\t\tp01 <<= 16;\n\t\tlow += p01;\n\t\tif( Int32.ucompare(low, p01) < 0 ) high++;\n\t\tp10 <<= 16;\n\t\tlow += p10;\n\t\tif( Int32.ucompare(low, p10) < 0 ) high++;\n\t\thigh += a.low * b.high + a.high * b.low;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(A * B) @:commutative private static inline function mulInt( a : Int64, b : Int ) : Int64\n\t\treturn mul( a, b );\n\n\t/**\n\t\tReturns the quotient of `a` divided by `b`.\n\t**/\n\t@:op(A / B) public static inline function div( a : Int64, b : Int64 ) : Int64\n\t\treturn divMod(a, b).quotient;\n\n\t@:op(A / B) private static inline function divInt( a : Int64, b : Int ) : Int64\n\t\treturn div( a, b );\n\n\t@:op(A / B) private static inline function intDiv( a : Int, b : Int64 ) : Int64\n\t\treturn div( a, b ).toInt();\n\n\t/**\n\t\tReturns the modulus of `a` divided by `b`.\n\t**/\n\t@:op(A % B) public static inline function mod( a : Int64, b : Int64 ) : Int64\n\t\treturn divMod(a, b).modulus;\n\n\t@:op(A % B) private static inline function modInt( a : Int64, b : Int ) : Int64\n\t\treturn mod( a, b ).toInt();\n\n\t@:op(A % B) private static inline function intMod( a : Int, b : Int64 ) : Int64\n\t\treturn mod( a, b ).toInt();\n\n\t/**\n\t\tReturns `true` if `a` is equal to `b`.\n\t**/\n\t@:op(A == B) public static inline function eq( a : Int64, b : Int64 ) : Bool\n\t\treturn a.high == b.high && a.low == b.low;\n\n\t@:op(A == B) @:commutative private static inline function eqInt( a : Int64, b : Int ) : Bool\n\t\treturn eq( a, b );\n\n\t/**\n\t\tReturns `true` if `a` is not equal to `b`.\n\t**/\n\t@:op(A != B) public static inline function neq( a : Int64, b : Int64 ) : Bool\n\t\treturn a.high != b.high || a.low != b.low;\n\n\t@:op(A != B) @:commutative private static inline function neqInt( a : Int64, b : Int ) : Bool\n\t\treturn neq(a, b);\n\n\t@:op(A < B) private static inline function lt( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) < 0;\n\n\t@:op(A < B) private static inline function ltInt( a : Int64, b : Int ) : Bool\n\t\treturn lt(a, b);\n\n\t@:op(A < B) private static inline function intLt( a : Int, b : Int64 ) : Bool\n\t\treturn lt(a, b);\n\n\t@:op(A <= B) private static inline function lte( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) <= 0;\n\n\t@:op(A <= B) private static inline function lteInt( a : Int64, b : Int ) : Bool\n\t\treturn lte(a, b);\n\n\t@:op(A <= B) private static inline function intLte( a : Int, b : Int64 ) : Bool\n\t\treturn lte(a, b);\n\n\t@:op(A > B) private static inline function gt( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) > 0;\n\n\t@:op(A > B) private static inline function gtInt( a : Int64, b : Int ) : Bool\n\t\treturn gt(a, b);\n\n\t@:op(A > B) private static inline function intGt( a : Int, b : Int64 ) : Bool\n\t\treturn gt( a, b );\n\n\t@:op(A >= B) private static inline function gte( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) >= 0;\n\n\t@:op(A >= B) private static inline function gteInt( a : Int64, b : Int ) : Bool\n\t\treturn gte(a, b);\n\n\t@:op(A >= B) private static inline function intGte( a : Int, b : Int64 ) : Bool\n\t\treturn gte(a, b);\n\n\t/**\n\t\tReturns the bitwise NOT of `a`.\n\t**/\n\t@:op(~A) private static inline function complement( a : Int64 ) : Int64\n\t\treturn make( ~a.high, ~a.low );\n\n\t/**\n\t\tReturns the bitwise AND of `a` and `b`.\n\t**/\n\t@:op(A & B) public static inline function and( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high & b.high, a.low & b.low );\n\n\t/**\n\t\tReturns the bitwise OR of `a` and `b`.\n\t**/\n\t@:op(A | B) public static inline function or( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high | b.high, a.low | b.low );\n\n\t/**\n\t\tReturns the bitwise XOR of `a` and `b`.\n\t**/\n\t@:op(A ^ B) public static inline function xor( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high ^ b.high, a.low ^ b.low );\n\n\t/**\n\t\tReturns `a` left-shifted by `b` bits.\n\t**/\n\t@:op(A << B) public static inline function shl( a : Int64, b : Int ) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( (a.high << b) | (a.low >>> (32-b)), a.low << b)\n\t\t\telse make( a.low << (b-32), 0 );\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in signed mode.\n\t\t`a` is sign-extended.\n\t**/\n\t@:op(A >> B) public static inline function shr( a : Int64, b : Int) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( a.high >> b, (a.high << (32-b)) | (a.low >>> b) )\n\t\t\telse make( a.high >> 31, a.high >> (b - 32) );\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in unsigned mode.\n\t\t`a` is padded with zeroes.\n\t**/\n\t@:op(A >>> B) public static inline function ushr( a : Int64, b : Int ) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( a.high >>> b, (a.high << (32-b)) | (a.low >>> b) )\n\t\t\telse make( 0, a.high >>> (b - 32) );\n\t}\n\n\tpublic var high(get, never) : Int32;\n\tprivate inline function get_high() return this.high;\n\tprivate inline function set_high(x) return this.high = x;\n\n\tpublic var low(get, never) : Int32;\n\tprivate inline function get_low() return this.low;\n\tprivate inline function set_low(x) return this.low = x;\n}\n\n/**\n  * This typedef will fool @:coreApi into thinking that we are using\n  * the same underlying type, even though it might be different on\n  * specific platforms.\n  */\nprivate typedef __Int64 = ___Int64;\n\nprivate class ___Int64 {\n\tpublic var high : Int32;\n\tpublic var low : Int32;\n\n\tpublic inline function new( high, low ) {\n\t\tthis.high = high;\n\t\tthis.low = low;\n\t}\n\n\t/**\n\t\tWe also define toString here to ensure we always get a pretty string\n\t\twhen tracing or calling Std.string. This tends not to happen when\n\t\ttoString is only in the abstract.\n\t**/\n\tpublic function toString() : String\n\t\treturn Int64.toStr( cast this );\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tLog primarily provides the trace() method, which is invoked upon a call to\n\ttrace() in haxe code.\n**/\nclass Log {\n\n\t/**\n\t\tOutputs `v` in a platform-dependent way.\n\n\t\tThe second parameter `infos` is injected by the compiler and contains\n\t\tinformation about the position where the trace() call was made.\n\n\t\tThis method can be rebound to a custom function:\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\n\t\t\thaxe.Log.trace = function(v,infos) { // handle trace }\n\t\t\t...\n\t\t\thaxe.Log.trace = oldTrace;\n\n\t\tIf it is bound to null, subsequent calls to trace() will cause an\n\t\texception.\n\t**/\n\tpublic static dynamic function trace( v : Dynamic, ?infos : PosInfos ) : Void {\n\t\t#if flash\n\t\t\t#if (fdb || native_trace)\n\t\t\t\tvar pstr = infos == null ? \"(null)\" : infos.fileName + \":\" + infos.lineNumber;\n\t\t\t\tvar str = flash.Boot.__string_rec(v, \"\");\n\t\t\t\tif( infos != null && infos.customParams != null ) for( v in infos.customParams ) str += \",\" + flash.Boot.__string_rec(v, \"\");\n\t\t\t\tuntyped __global__[\"trace\"](pstr+\": \"+str);\n\t\t\t#else\n\t\t\t\tuntyped flash.Boot.__trace(v,infos);\n\t\t\t#end\n\t\t#elseif neko\n\t\t\tuntyped {\n\t\t\t\t$print(infos.fileName + \":\" + infos.lineNumber + \": \", v);\n\t\t\t\tif( infos.customParams != null ) for( v in infos.customParams ) $print(\",\", v);\n\t\t\t\t$print(\"\\n\");\n\t\t\t}\n\t\t#elseif js\n\t\t\tuntyped js.Boot.__trace(v,infos);\n\t\t#elseif php\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __call__('_hx_trace', v + extra, infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __call__('_hx_trace', v, infos);\n\t\t#elseif cpp\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __trace(v + extra,infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __trace(v,infos);\n\t\t#elseif (cs || java)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + infos.lineNumber + \": \" + v;\n\t\t\t\tif (infos.customParams != null)\n\t\t\t\t{\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\t#if cs\n\t\t\tcs.system.Console.WriteLine(str);\n\t\t\t#elseif java\n\t\t\tuntyped __java__(\"java.lang.System.out.println(str)\");\n\t\t\t#end\n\t\t#elseif (python)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + Std.string(infos.lineNumber) + \": \" + v;\n\t\t\t\tif (infos.customParams != null) {\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\tpython.Lib.println(str);\n\t\t#end\n\t}\n\n\t#if (flash || js)\n\t/**\n\t\tClears the trace output.\n\t**/\n\tpublic static dynamic function clear() : Void {\n\t\t#if flash\n\t\tuntyped flash.Boot.__clear_trace();\n\t\t#elseif js\n\t\tuntyped js.Boot.__clear_trace();\n\t\t#end\n\t}\n\t#end\n\n\t#if flash\n\t/**\n\t\tSets the color of the trace output to `rgb`.\n\t**/\n\tpublic static dynamic function setColor( rgb : Int ) {\n\t\tuntyped flash.Boot.__set_trace_color(rgb);\n\t}\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tResource can be used to access resources that were added through the\n\t-resource file@name command line parameter.\n\n\tDepending on their type they can be obtained as String through\n\tgetString(name), or as binary data through getBytes(name).\n\n\tA list of all available resource names can be obtained from listNames().\n**/\nclass Resource {\n\n\tstatic var content : Array<{ name : String, data : String, str : String }>;\n\n\t/**\n\t\tLists all available resource names. The resource name is the name part\n\t\tof the -resource file@name command line parameter.\n\t**/\n\tpublic static function listNames() : Array<String> {\n\t\treturn [for (x in content) x.name];\n\t}\n\n\t/**\n\t\tRetrieves the resource identified by `name` as a String.\n\n\t\tIf `name` does not match any resource name, null is returned.\n\t**/\n\tpublic static function getString( name : String ) : String {\n\t\tfor( x in content )\n\t\t\tif( x.name == name ) {\n\t\t\t\t#if neko\n\t\t\t\treturn new String(x.data);\n\t\t\t\t#else\n\t\t\t\tif( x.str != null ) return x.str;\n\t\t\t\tvar b : haxe.io.Bytes = haxe.crypto.Base64.decode(x.data);\n\t\t\t\treturn b.toString();\n\t\t\t\t#end\n\t\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tRetrieves the resource identified by `name` as an instance of\n\t\thaxe.io.Bytes.\n\n\t\tIf `name` does not match any resource name, null is returned.\n\t**/\n\tpublic static function getBytes( name : String ) : haxe.io.Bytes {\n\t\tfor( x in content )\n\t\t\tif( x.name == name ) {\n\t\t\t\t#if neko\n\t\t\t\treturn haxe.io.Bytes.ofData(cast x.data);\n\t\t\t\t#else\n\t\t\t\tif( x.str != null ) return haxe.io.Bytes.ofString(x.str);\n\t\t\t\treturn haxe.crypto.Base64.decode(x.data);\n\t\t\t\t#end\n\t\t\t}\n\t\treturn null;\n\t}\n\n\tstatic function __init__() {\n\t\t#if neko\n\t\tvar tmp = untyped __resources__();\n\t\tcontent = untyped Array.new1(tmp,__dollar__asize(tmp));\n\t\t#elseif php\n\t\tcontent = null;\n\t\t#elseif as3\n\t\tnull;\n\t\t#else\n\t\tcontent = untyped __resources__();\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Serializer class can be used to encode values and objects into a String,\n\tfrom which the Unserializer class can recreate the original representation.\n\n\tThis class can be used in two ways:\n\n\t- create a new Serializer() instance, call its serialize() method with\n\t\tany argument and finally retrieve the String representation from\n\t\ttoString()\n\t- call Serializer.run() to obtain the serialized representation of a\n\t\tsingle argument\n\n\tSerialization is guaranteed to work for all haxe-defined classes, but may\n\tor may not work for instances of external/native classes.\n\n\tThe specification of the serialization format can be found here:\n\t`http://haxe.org/manual/serialization/format`\n**/\nclass Serializer {\n\n\t/**\n\t\tIf the values you are serializing can contain circular references or\n\t\tobjects repetitions, you should set USE_CACHE to true to prevent\n\t\tinfinite loops.\n\n\t\tThis may also reduce the size of serialization Strings at the expense of\n\t\tperformance.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useCache field.\n\t**/\n\tpublic static var USE_CACHE = false;\n\n\t/**\n\t\tUse constructor indexes for enums instead of names.\n\n\t\tThis may reduce the size of serialization Strings, but makes them less\n\t\tsuited for long-term storage: If constructors are removed or added from\n\t\tthe enum, the indices may no longer match.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useEnumIndex field.\n\t**/\n\tpublic static var USE_ENUM_INDEX = false;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\tvar buf : StringBuf;\n\tvar cache : Array<Dynamic>;\n\tvar shash : haxe.ds.StringMap<Int>;\n\tvar scount : Int;\n\n\t/**\n\t\tThe individual cache setting for `this` Serializer instance.\n\n\t\tSee USE_CACHE for a complete description.\n\t**/\n\tpublic var useCache : Bool;\n\n\t/**\n\t\tThe individual enum index setting for `this` Serializer instance.\n\n\t\tSee USE_ENUM_INDEX for a complete description.\n\t**/\n\tpublic var useEnumIndex : Bool;\n\n\t/**\n\t\tCreates a new Serializer instance.\n\n\t\tSubsequent calls to `this.serialize` will append values to the\n\t\tinternal buffer of this String. Once complete, the contents can be\n\t\tretrieved through a call to `this.toString`.\n\n\t\tEach Serializer instance maintains its own cache if this.useCache` is\n\t\ttrue.\n\t**/\n\tpublic function new() {\n\t\tbuf = new StringBuf();\n\t\tcache = new Array();\n\t\tuseCache = USE_CACHE;\n\t\tuseEnumIndex = USE_ENUM_INDEX;\n\t\tshash = new haxe.ds.StringMap();\n\t\tscount = 0;\n\t}\n\n\t/**\n\t\tReturn the String representation of `this` Serializer.\n\n\t\tThe exact format specification can be found here:\n\t\thttp://haxe.org/manual/serialization/format\n\t**/\n\tpublic function toString() {\n\t\treturn buf.toString();\n\t}\n\n\t/* prefixes :\n\t\ta : array\n\t\tb : hash\n\t\tc : class\n\t\td : Float\n\t\te : reserved (float exp)\n\t\tf : false\n\t\tg : object end\n\t\th : array/list/hash end\n\t\ti : Int\n\t\tj : enum (by index)\n\t\tk : NaN\n\t\tl : list\n\t\tm : -Inf\n\t\tn : null\n\t\to : object\n\t\tp : +Inf\n\t\tq : haxe.ds.IntMap\n\t\tr : reference\n\t\ts : bytes (base64)\n\t\tt : true\n\t\tu : array nulls\n\t\tv : date\n\t\tw : enum\n\t\tx : exception\n\t\ty : urlencoded string\n\t\tz : zero\n\t\tA : Class<Dynamic>\n\t\tB : Enum<Dynamic>\n\t\tM : haxe.ds.ObjectMap\n\t\tC : custom\n\t*/\n\n\tfunction serializeString( s : String ) {\n\t\tvar x = shash.get(s);\n\t\tif( x != null ) {\n\t\t\tbuf.add(\"R\");\n\t\t\tbuf.add(x);\n\t\t\treturn;\n\t\t}\n\t\tshash.set(s,scount++);\n\t\t#if old_serialize\n\t\t\t// no more support for -D old_serialize due to 'j' reuse\n\t\t\t#if error #end\n\t\t#end\n\t\tbuf.add(\"y\");\n\t\ts = StringTools.urlEncode(s);\n\t\tbuf.add(s.length);\n\t\tbuf.add(\":\");\n\t\tbuf.add(s);\n\t}\n\n\tfunction serializeRef(v) {\n\t\t#if js\n\t\tvar vt = untyped __js__(\"typeof\")(v);\n\t\t#end\n\t\tfor( i in 0...cache.length ) {\n\t\t\t#if js\n\t\t\tvar ci = cache[i];\n\t\t\tif( untyped __js__(\"typeof\")(ci) == vt && ci == v ) {\n\t\t\t#else\n\t\t\tif( cache[i] == v ) {\n\t\t\t#end\n\t\t\t\tbuf.add(\"r\");\n\t\t\t\tbuf.add(i);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tcache.push(v);\n\t\treturn false;\n\t}\n\n\t#if flash\n\t// only the instance variables\n\n\tfunction serializeClassFields(v,c) {\n\t\tvar xml : flash.xml.XML = untyped __global__[\"flash.utils.describeType\"](c);\n\t\tvar vars = xml.factory[0].child(\"variable\");\n\t\tfor( i in 0...vars.length() ) {\n\t\t\tvar f = vars[i].attribute(\"name\").toString();\n\t\t\tif( !v.hasOwnProperty(f) )\n\t\t\t\tcontinue;\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\t#end\n\n\tfunction serializeFields(v) {\n\t\tfor( f in Reflect.fields(v) ) {\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\n\t/**\n\t\tSerializes `v`.\n\n\t\tAll haxe-defined values and objects with the exception of functions can\n\t\tbe serialized. Serialization of external/native objects is not\n\t\tguaranteed to work.\n\n\t\tThe values of `this.useCache` and `this.useEnumIndex` may affect\n\t\tserialization output.\n\t**/\n\tpublic function serialize( v : Dynamic ) {\n\t\tswitch( Type.typeof(v) ) {\n\t\tcase TNull:\n\t\t\tbuf.add(\"n\");\n\t\tcase TInt:\n\t\t\tvar v : Int = v;\n\t\t\tif( v == 0 ) {\n\t\t\t\tbuf.add(\"z\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbuf.add(\"i\");\n\t\t\tbuf.add(v);\n\t\tcase TFloat:\n\t\t\tvar v : Float = v;\n\t\t\tif( Math.isNaN(v) )\n\t\t\t\tbuf.add(\"k\");\n\t\t\telse if( !Math.isFinite(v) )\n\t\t\t\tbuf.add(if( v < 0 ) \"m\" else \"p\");\n\t\t\telse {\n\t\t\t\tbuf.add(\"d\");\n\t\t\t\tbuf.add(v);\n\t\t\t}\n\t\tcase TBool:\n\t\t\tbuf.add(if( v ) \"t\" else \"f\");\n\t\tcase TClass(c):\n\t\t\tif( #if neko untyped c.__is_String #else c == String #end ) {\n\t\t\t\tserializeString(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\treturn;\n\t\t\tswitch( #if (neko || cs || python) Type.getClassName(c) #else c #end ) {\n\t\t\tcase #if (neko || cs || python) \"Array\" #else cast Array #end:\n\t\t\t\tvar ucount = 0;\n\t\t\t\tbuf.add(\"a\");\n\t\t\t\t#if (flash || python)\n\t\t\t\tvar v : Array<Dynamic> = v;\n\t\t\t\t#end\n\t\t\t\tvar l = #if (neko || flash || php || cs || java || python) v.length #elseif cpp v.__length() #else __getField(v, \"length\") #end;\n\t\t\t\tfor( i in 0...l ) {\n\t\t\t\t\tif( v[i] == null )\n\t\t\t\t\t\tucount++;\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tucount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tserialize(v[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"List\" #else cast List #end:\n\t\t\t\tbuf.add(\"l\");\n\t\t\t\tvar v : List<Dynamic> = v;\n\t\t\t\tfor( i in v )\n\t\t\t\t\tserialize(i);\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"Date\" #else cast Date #end:\n\t\t\t\tvar d : Date = v;\n\t\t\t\tbuf.add(\"v\");\n\t\t\t\tbuf.add(d.getTime());\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.StringMap\" #else cast haxe.ds.StringMap #end:\n\t\t\t\tbuf.add(\"b\");\n\t\t\t\tvar v : haxe.ds.StringMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tserializeString(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.IntMap\" #else cast haxe.ds.IntMap #end:\n\t\t\t\tbuf.add(\"q\");\n\t\t\t\tvar v : haxe.ds.IntMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tbuf.add(\":\");\n\t\t\t\t\tbuf.add(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.ObjectMap\" #else cast haxe.ds.ObjectMap #end:\n\t\t\t\tbuf.add(\"M\");\n\t\t\t\tvar v : haxe.ds.ObjectMap<Dynamic,Dynamic> = v;\n\t\t\t\tfor ( k in v.keys() ) {\n\t\t\t\t\t#if (js || neko)\n\t\t\t\t\tvar id = Reflect.field(k, \"__id__\");\n\t\t\t\t\tReflect.deleteField(k, \"__id__\");\n\t\t\t\t\tserialize(k);\n\t\t\t\t\tReflect.setField(k, \"__id__\", id);\n\t\t\t\t\t#else\n\t\t\t\t\tserialize(k);\n\t\t\t\t\t#end\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.io.Bytes\" #else cast haxe.io.Bytes #end:\n\t\t\t\tvar v : haxe.io.Bytes = v;\n\t\t\t\t#if neko\n\t\t\t\tvar chars = new String(base_encode(v.getData(),untyped BASE64.__s));\n\t\t\t\t#else\n\t\t\t\tvar i = 0;\n\t\t\t\tvar max = v.length - 2;\n\t\t\t\tvar charsBuf = new StringBuf();\n\t\t\t\tvar b64 = BASE64;\n\t\t\t\twhile( i < max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tvar b3 = v.get(i++);\n\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b1 << 4) | (b2 >> 4)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b2 << 2) | (b3 >> 6)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt(b3 & 63));\n\t\t\t\t}\n\t\t\t\tif( i == max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b1 << 4) | (b2 >> 4)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt((b2 << 2) & 63));\n\t\t\t\t} else if( i == max + 1 ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt((b1 << 4) & 63));\n\t\t\t\t}\n\t\t\t\tvar chars = charsBuf.toString();\n\t\t\t\t#end\n\t\t\t\tbuf.add(\"s\");\n\t\t\t\tbuf.add(chars.length);\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(chars);\n\t\t\tdefault:\n\t\t\t\tif( useCache ) cache.pop();\n\t\t\t\tif( #if flash try v.hxSerialize != null catch( e : Dynamic ) false #elseif (cs || java || python) Reflect.hasField(v, \"hxSerialize\") #else v.hxSerialize != null #end  ) {\n\t\t\t\t\tbuf.add(\"C\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\tv.hxSerialize(this);\n\t\t\t\t\tbuf.add(\"g\");\n\t\t\t\t} else {\n\t\t\t\t\tbuf.add(\"c\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\t#if flash\n\t\t\t\t\tserializeClassFields(v,c);\n\t\t\t\t\t#else\n\t\t\t\t\tserializeFields(v);\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t}\n\t\tcase TObject:\n\t\t\tif (Std.is(v,Class)) {\n\t\t\t\tvar className = Type.getClassName(v);\n\t\t\t\t#if (flash || cpp)\n\t\t\t\t// Currently, Enum and Class are the same for flash and cpp.\n\t\t\t\t//  use resolveEnum to test if it is actually an enum\n\t\t\t\tif (Type.resolveEnum(className)!=null) buf.add(\"B\") else\n\t\t\t\t#end\n\t\t\t\tbuf.add(\"A\");\n\t\t\t\tserializeString(className);\n\t\t\t} else if (Std.is(v,Enum)) {\n\t\t\t\tbuf.add(\"B\");\n\t\t\t\tserializeString(Type.getEnumName(v));\n\t\t\t} else {\n\t\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\t\treturn;\n\t\t\t\tbuf.add(\"o\");\n\t\t\t\tserializeFields(v);\n\t\t\t}\n\t\tcase TEnum(e):\n\t\t\tif( useCache ) {\n\t\t\t\tif( serializeRef(v) )\n\t\t\t\t\treturn;\n\t\t\t\tcache.pop();\n\t\t\t}\n\t\t\tbuf.add(useEnumIndex?\"j\":\"w\");\n\t\t\tserializeString(Type.getEnumName(e));\n\t\t\t#if neko\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(new String(v.tag));\n\t\t\tbuf.add(\":\");\n\t\t\tif( v.args == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tvar l : Int = untyped __dollar__asize(v.args);\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(v.args[i]);\n\t\t\t}\n\t\t\t#elseif flash\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tvar i : Int = v.index;\n\t\t\t\tbuf.add(i);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.params;\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif cpp\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.__Index());\n\t\t\t} else\n\t\t\t\tserializeString(v.__Tag());\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.__EnumParams();\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif php\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l : Int = untyped __call__(\"count\", v.params);\n\t\t\tif( l == 0 || v.params == null)\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(untyped __field__(v, __php__(\"params\"), i));\n\t\t\t}\n\t\t\t#elseif (java || cs || python)\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(Type.enumIndex(v));\n\t\t\t} else\n\t\t\t\tserializeString(Type.enumConstructor(v));\n\t\t\tbuf.add(\":\");\n\t\t\tvar arr:Array<Dynamic> = Type.enumParameters(v);\n\t\t\tif (arr != null)\n\t\t\t{\n\t\t\t\tbuf.add(arr.length);\n\t\t\t\tfor (v in arr)\n\t\t\t\t\tserialize(v);\n\t\t\t} else {\n\t\t\t\tbuf.add(\"0\");\n\t\t\t}\n\n\t\t\t#else\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v[1]);\n\t\t\t} else\n\t\t\t\tserializeString(v[0]);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l = __getField(v, \"length\");\n\t\t\tbuf.add(l - 2);\n\t\t\tfor( i in 2...l )\n\t\t\t\tserialize(v[i]);\n\t\t\t#end\n\t\t\tif( useCache ) cache.push(v);\n\t\tcase TFunction:\n\t\t\tthrow \"Cannot serialize function\";\n\t\tdefault:\n\t\t\t#if neko\n\t\t\tif( untyped (__i32__kind != null && __dollar__iskind(v,__i32__kind)) ) {\n\t\t\t\tbuf.add(\"i\");\n\t\t\t\tbuf.add(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t#end\n\t\t\tthrow \"Cannot serialize \"+Std.string(v);\n\t\t}\n\t}\n\n\t@:extern inline function __getField(o:Dynamic, f:String):Dynamic return untyped o[f];\n\n\tpublic function serializeException( e : Dynamic ) {\n\t\tbuf.add(\"x\");\n\t\t#if flash\n\t\tif( untyped __is__(e,__global__[\"Error\"]) ) {\n\t\t\tvar e : flash.errors.Error = e;\n\t\t\tvar s = e.getStackTrace();\n\t\t\tif( s == null )\n\t\t\t\tserialize(e.message);\n\t\t\telse\n\t\t\t\tserialize(s);\n\t\t\treturn;\n\t\t}\n\t\t#end\n\t\tserialize(e);\n\t}\n\n\t/**\n\t\tSerializes `v` and returns the String representation.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tSerializer, serialize `v` into it and obtain the result through a call\n\t\tto toString().\n\t**/\n\tpublic static function run( v : Dynamic ) {\n\t\tvar s = new Serializer();\n\t\ts.serialize(v);\n\t\treturn s.toString();\n\t}\n\n\t#if neko\n\tstatic var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\t#end\n\n}\n\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java || python)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n@:noDoc\ntypedef TypeResolver = {\n\tfunction resolveClass( name : String ) : Class<Dynamic>;\n\tfunction resolveEnum( name : String ) : Enum<Dynamic>;\n}\n\n/**\n\tThe Unserializer class is the complement to the Serializer class. It parses\n\ta serialization String and creates objects from the contained data.\n\n\tThis class can be used in two ways:\n\n\t- create a new Unserializer() instance with a given serialization\n\t\tString, then call its unserialize() method until all values are\n\t\textracted\n\t- call Unserializer.run() to unserialize a single value from a given\n\t\tString\n**/\nclass Unserializer {\n\n\t/**\n\t\tThis value can be set to use custom type resolvers.\n\n\t\tA type resolver finds a Class or Enum instance from a given String. By\n\t\tdefault, the haxe Type Api is used.\n\n\t\tA type resolver must provide two methods:\n\n\t\t1. resolveClass(name:String):Class<Dynamic> is called to determine a\n\t\t\t\tClass from a class name\n\t\t2. resolveEnum(name:String):Enum<Dynamic> is called to determine an\n\t\t\t\tEnum from an enum name\n\n\t\tThis value is applied when a new Unserializer instance is created.\n\t\tChanging it afterwards has no effect on previously created instances.\n\t**/\n\tpublic static var DEFAULT_RESOLVER : TypeResolver = Type;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\t#if !neko\n\tstatic var CODES = null;\n\n\tstatic function initCodes() {\n\t\tvar codes =\n\t\t\t#if flash\n\t\t\t\tnew flash.utils.ByteArray();\n\t\t\t#else\n\t\t\t\tnew Array();\n\t\t\t#end\n\t\tfor( i in 0...BASE64.length )\n\t\t\tcodes[StringTools.fastCodeAt(BASE64,i)] = i;\n\t\treturn codes;\n\t}\n\t#end\n\n \tvar buf : String;\n \tvar pos : Int;\n \tvar length : Int;\n \tvar cache : Array<Dynamic>;\n \tvar scache : Array<String>;\n \tvar resolver : TypeResolver;\n \t#if neko\n \tvar upos : Int;\n \t#end\n\n\t/**\n\t\tCreates a new Unserializer instance, with its internal buffer\n\t\tinitialized to `buf`.\n\n\t\tThis does not parse `buf` immediately. It is parsed only when calls to\n\t\t`this.unserialize` are made.\n\n\t\tEach Unserializer instance maintains its own cache.\n\t**/\n \tpublic function new( buf : String ) {\n \t\tthis.buf = buf;\n \t\tlength = buf.length;\n \t\tpos = 0;\n \t\t#if neko\n \t\tupos = 0;\n \t\t#end\n \t\tscache = new Array();\n \t\tcache = new Array();\n\t\tvar r = DEFAULT_RESOLVER;\n\t\tif( r == null ) {\n\t\t\tr = Type;\n\t\t\tDEFAULT_RESOLVER = r;\n\t\t}\n \t\tsetResolver(r);\n \t}\n\n\t/**\n\t\tSets the type resolver of `this` Unserializer instance to `r`.\n\n\t\tIf `r` is null, a special resolver is used which returns null for all\n\t\tinput values.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function setResolver( r ) {\n\t\tif( r == null )\n\t\t\tresolver = {\n\t\t\t\tresolveClass : function(_) { return null; },\n\t\t\t\tresolveEnum : function(_) { return null; }\n\t\t\t};\n\t\telse\n\t\t\tresolver = r;\n\t}\n\n\t/**\n\t\tGets the type resolver of `this` Unserializer instance.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function getResolver() {\n\t\treturn resolver;\n\t}\n\n\tinline function get(p) : Int {\n\t\treturn StringTools.fastCodeAt(buf, p);\n\t}\n\n \tfunction readDigits() {\n \t\tvar k = 0;\n \t\tvar s = false;\n \t\tvar fpos = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n\t\t\tif( StringTools.isEof(c) )\n\t\t\t\tbreak;\n \t\t\tif( c == \"-\".code ) {\n \t\t\t\tif( pos != fpos )\n \t\t\t\t\tbreak;\n \t\t\t\ts = true;\n \t\t\t\tpos++;\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tif( c < \"0\".code || c > \"9\".code )\n \t\t\t\tbreak;\n \t\t\tk = k * 10 + (c - \"0\".code);\n \t\t\tpos++;\n \t\t}\n \t\tif( s )\n \t\t\tk *= -1;\n \t\treturn k;\n \t}\n\n\tfunction readFloat() {\n\t\tvar p1 = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n \t\t\t// + - . , 0-9\n \t\t\tif( (c >= 43 && c < 58) || c == \"e\".code || c == \"E\".code )\n \t\t\t\tpos++;\n \t\t\telse\n \t\t\t\tbreak;\n \t\t}\n \t\treturn Std.parseFloat(buf.substr(p1,pos-p1));\n\t}\n\n\tfunction unserializeObject(o) {\n \t\twhile( true ) {\n \t\t\tif( pos >= length )\n \t\t\t\tthrow \"Invalid object\";\n \t\t\tif( get(pos) == \"g\".code )\n \t\t\t\tbreak;\n \t\t\tvar k = unserialize();\n \t\t\tif( !Std.is(k,String) )\n \t\t\t\tthrow \"Invalid object key\";\n \t\t\tvar v = unserialize();\n \t\t\tReflect.setField(o,k,v);\n \t\t}\n \t\tpos++;\n\t}\n\n\tfunction unserializeEnum( edecl, tag ) {\n\t\tif( get(pos++) != \":\".code )\n\t\t\tthrow \"Invalid enum format\";\n\t\tvar nargs = readDigits();\n\t\tif( nargs == 0 )\n\t\t\treturn Type.createEnum(edecl,tag);\n\t\tvar args = new Array();\n\t\twhile( nargs-- > 0 )\n\t\t\targs.push(unserialize());\n\t\treturn Type.createEnum(edecl,tag,args);\n\t}\n\n\t/**\n\t\tUnserializes the next part of `this` Unserializer instance and returns\n\t\tthe according value.\n\n\t\tThis function may call `this.resolver.resolveClass` to determine a\n\t\tClass from a String, and `this.resolver.resolveEnum` to determine an\n\t\tEnum from a String.\n\n\t\tIf `this` Unserializer instance contains no more or invalid data, an\n\t\texception is thrown.\n\n\t\tThis operation may fail on structurally valid data if a type cannot be\n\t\tresolved or if a field cannot be set. This can happen when unserializing\n\t\tStrings that were serialized on a different haxe target, in which the\n\t\tserialization side has to make sure not to include platform-specific\n\t\tdata.\n\n\t\tClasses are created from Type.createEmptyInstance, which means their\n\t\tconstructors are not called.\n\t**/\n \tpublic function unserialize() : Dynamic {\n \t\tswitch( get(pos++) ) {\n \t\tcase \"n\".code:\n \t\t\treturn null;\n \t\tcase \"t\".code:\n \t\t\treturn true;\n \t\tcase \"f\".code:\n \t\t\treturn false;\n \t\tcase \"z\".code:\n \t\t\treturn 0;\n \t\tcase \"i\".code:\n \t\t\treturn readDigits();\n \t\tcase \"d\".code:\n \t\t\treturn readFloat();\n\t\tcase \"y\".code:\n \t\t\tvar len = readDigits();\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n \t\t\t\tthrow \"Invalid string length\";\n\t\t\tvar s = buf.substr(pos,len);\n\t\t\tpos += len;\n\t\t\ts = StringTools.urlDecode(s);\n\t\t\tscache.push(s);\n\t\t\treturn s;\n \t\tcase \"k\".code:\n \t\t\treturn Math.NaN;\n \t\tcase \"m\".code:\n \t\t\treturn Math.NEGATIVE_INFINITY;\n \t\tcase \"p\".code:\n \t\t\treturn Math.POSITIVE_INFINITY;\n \t\tcase \"a\".code:\n\t\t\tvar buf = buf;\n \t\t\tvar a = new Array<Dynamic>();\n \t\t\tcache.push(a);\n \t\t\twhile( true ) {\n \t\t\t\tvar c = get(pos);\n \t\t\t\tif( c == \"h\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tbreak;\n\t\t\t\t}\n \t\t\t\tif( c == \"u\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tvar n = readDigits();\n \t\t\t\t\ta[a.length+n-1] = null;\n \t\t\t\t} else\n \t\t\t\t\ta.push(unserialize());\n \t\t\t}\n \t\t\treturn a;\n \t\tcase \"o\".code:\n\t \t\tvar o = {};\n\t \t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n \t\tcase \"r\".code:\n \t\t\tvar n = readDigits();\n \t\t\tif( n < 0 || n >= cache.length )\n \t\t\t\tthrow \"Invalid reference\";\n \t\t\treturn cache[n];\n \t\tcase \"R\".code:\n\t\t\tvar n = readDigits();\n\t\t\tif( n < 0 || n >= scache.length )\n\t\t\t\tthrow \"Invalid string reference\";\n\t\t\treturn scache[n];\n \t\tcase \"x\".code:\n\t\t\tthrow unserialize();\n\t\tcase \"c\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n\t\tcase \"w\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tvar e = unserializeEnum(edecl, unserialize());\n\t\t\tcache.push(e);\n\t\t\treturn e;\n \t\tcase \"j\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tpos++; /* skip ':' */\n\t\t\tvar index = readDigits();\n\t\t\tvar tag = Type.getEnumConstructs(edecl)[index];\n\t\t\tif( tag == null )\n\t\t\t\tthrow \"Unknown enum index \"+name+\"@\"+index;\n\t\t\tvar e = unserializeEnum(edecl, tag);\n\t\t\tcache.push(e);\n\t\t\treturn e;\n\t\tcase \"l\".code:\n\t\t\tvar l = new List();\n\t\t\tcache.push(l);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code )\n\t\t\t\tl.add(unserialize());\n\t\t\tpos++;\n\t\t\treturn l;\n\t\tcase \"b\".code:\n\t\t\tvar h = new haxe.ds.StringMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"q\".code:\n\t\t\tvar h = new haxe.ds.IntMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\tvar c = get(pos++);\n\t\t\twhile( c == \":\".code ) {\n\t\t\t\tvar i = readDigits();\n\t\t\t\th.set(i,unserialize());\n\t\t\t\tc = get(pos++);\n\t\t\t}\n\t\t\tif( c != \"h\".code )\n\t\t\t\tthrow \"Invalid IntMap format\";\n\t\t\treturn h;\n\t\tcase \"M\".code:\n\t\t\tvar h = new haxe.ds.ObjectMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"v\".code:\n\t\t\tvar d;\n\t\t\tif(\tget(pos) >= '0'.code && get(pos) <= '9'.code &&\n\t\t\t\tget(pos + 1) >= '0'.code && get(pos + 1) <= '9'.code &&\n\t\t\t\tget(pos + 2) >= '0'.code && get(pos + 2) <= '9'.code &&\n\t\t\t\tget(pos + 3) >= '0'.code && get(pos + 3) <= '9'.code &&\n\t\t\t\tget(pos + 4) == '-'.code\n\t\t\t\t) {\n\t\t\t\t// Included for backwards compatibility\n\t\t\t\td = Date.fromString(buf.substr(pos,19));\n\t\t\t\tpos += 19;\n\t\t\t} else\n\t\t\t\td = Date.fromTime(readFloat());\n\t\t\tcache.push(d);\n\t\t\treturn d;\n \t\tcase \"s\".code:\n \t\t\tvar len = readDigits();\n\t\t\tvar buf = buf;\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n\t\t\t\tthrow \"Invalid bytes length\";\n\t\t\t#if neko\n\t\t\tvar bytes = haxe.io.Bytes.ofData( base_decode(untyped buf.substr(pos,len).__s,untyped BASE64.__s) );\n\t\t\t#else\n\t\t\tvar codes = CODES;\n\t\t\tif( codes == null ) {\n\t\t\t\tcodes = initCodes();\n\t\t\t\tCODES = codes;\n\t\t\t}\n\t\t\tvar i = pos;\n\t\t\tvar rest = len & 3;\n\t\t\tvar size = (len >> 2) * 3 + ((rest >= 2) ? rest - 1 : 0);\n\t\t\tvar max = i + (len - rest);\n\t\t\tvar bytes = haxe.io.Bytes.alloc(size);\n\t\t\tvar bpos = 0;\n\t\t\twhile( i < max ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\tvar c4 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c3 << 6) | c4);\n\t\t\t}\n\t\t\tif( rest >= 2 ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tif( rest == 3 ) {\n\t\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\t}\n\t\t\t}\n \t\t\t#end\n\t\t\tpos += len;\n\t\t\tcache.push(bytes);\n\t\t\treturn bytes;\n\t\tcase \"C\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o : Dynamic = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\to.hxUnserialize(this);\n\t\t\tif( get(pos++) != \"g\".code )\n\t\t\t\tthrow \"Invalid custom data\";\n\t\t\treturn o;\n\t\tcase \"A\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\treturn cl;\n\t\tcase \"B\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar e = resolver.resolveEnum(name);\n\t\t\tif( e == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\treturn e;\n \t\tdefault:\n \t\t}\n \t\tpos--;\n \t\tthrow (\"Invalid char \"+buf.charAt(pos)+\" at position \"+pos);\n \t}\n\n\t/**\n\t\tUnserializes `v` and returns the according value.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tUnserializer with `v` as buffer and calling its unserialize() method\n\t\tonce.\n\t**/\n\tpublic static function run( v : String ) : Dynamic {\n\t\treturn new Unserializer(v).unserialize();\n\t}\n\n\t#if neko\n\tstatic var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tSince all platforms does not guarantee that String always uses UTF-8 encoding, you\n\tcan use this crossplatform API to perform operations on such strings.\n**/\nclass Utf8 {\n\n\tvar __b : String;\n\n\t/**\n\t\tAllocate a new Utf8 buffer using an optional bytes size.\n\t**/\n\tpublic function new( ?size : Int ) {\n\t\t__b = \"\";\n\t}\n\n\t/**\n\t\tAdd the given UTF8 character code to the buffer.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\t__b += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tReturns the buffer converted to a String;\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn __b;\n\t}\n\n\t/**\n\t\tCall the `chars` function for each UTF8 char of the string.\n\t**/\n\tpublic static function iter( s : String, chars : Int -> Void ) {\n\t\tfor( i in 0...s.length )\n\t\t\tchars(s.charCodeAt(i));\n\t}\n\n\t/**\n\t\tEncode the input ISO string into the corresponding UTF8 one.\n\t**/\n\tpublic static function encode( s : String ) : String {\n\t\tthrow \"Not implemented\";\n\t}\n\n\t/**\n\t\tDecode an UTF8 string back to an ISO string.\n\t\tThrow an exception if a given UTF8 character is not supported by the decoder.\n\t**/\n\tpublic static function decode( s : String ) : String {\n\t\tthrow \"Not implemented\";\n\t}\n\n\t/**\n\t\tSimilar to `String.charCodeAt` but uses the UTF8 character position.\n\t**/\n\tpublic static inline function charCodeAt( s : String, index : Int ) : Int {\n\t\treturn s.charCodeAt(index);\n\t}\n\n\t/**\n\t\tTells if the String is correctly encoded as UTF8.\n\t**/\n\tpublic static inline function validate( s : String ) : Bool {\n\t\treturn true;\n\t}\n\n\t/**\n\t\tReturns the number of UTF8 chars of the String.\n\t**/\n\t#if js @:extern #end\n\tpublic static inline function length( s : String ) : Int {\n\t\treturn s.length;\n\t}\n\n\t/**\n\t\tCompare two UTF8 strings, character by character.\n\t**/\n\tpublic static function compare( a : String, b : String ) : Int {\n\t\treturn a > b ? 1 : (a == b ? 0 : -1);\n\t}\n\n\t/**\n\t\tThis is similar to `String.substr` but the `pos` and `len` parts are considering UTF8 characters.\n\t**/\n\tpublic static inline function sub( s : String, pos : Int, len : Int ) : String {\n\t\treturn s.substr(pos,len);\n\t}\n\n}","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\nimport js.html.compat.Uint8Array;\nimport js.html.compat.DataView;\n\n@:coreApi\nclass Bytes {\n\n\tpublic var length(default,null) : Int;\n\tvar b : js.html.Uint8Array;\n\tvar data : js.html.DataView;\n\n\tfunction new(data:BytesData) {\n\t\tthis.length = data.byteLength;\n\t\tthis.b = new js.html.Uint8Array(data);\n\t\tuntyped {\n\t\t\tb.bufferValue = data; // some impl does not return the same instance in .buffer\n\t\t\tdata.hxBytes = this;\n\t\t\tdata.bytes = this.b;\n\t\t}\n\t}\n\n\tpublic inline function get( pos : Int ) : Int {\n\t\treturn b[pos];\n\t}\n\n\tpublic inline function set( pos : Int, v : Int ) : Void {\n\t\tb[pos] = v & 0xFF; // the &0xFF is necessary for js.html.compat support\n\t}\n\n\tpublic function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {\n\t\tif( pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length ) throw Error.OutsideBounds;\n\t\tif( srcpos == 0 && len == src.length )\n\t\t\tb.set(src.b,pos);\n\t\telse\n\t\t\tb.set(src.b.subarray(srcpos,srcpos+len),pos);\n\t}\n\n\tpublic function fill( pos : Int, len : Int, value : Int ) : Void {\n\t\tfor( i in 0...len )\n\t\t\tset(pos++, value);\n\t}\n\n\tpublic function sub( pos : Int, len : Int ) : Bytes {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\treturn new Bytes(b.buffer.slice(pos+b.byteOffset,pos+b.byteOffset+len));\n\t}\n\n\tpublic function compare( other : Bytes ) : Int {\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor( i in 0...len )\n\t\t\tif( b1[i] != b2[i] )\n\t\t\t\treturn b1[i] - b2[i];\n\t\treturn length - other.length;\n\t}\n\n\tinline function initData() : Void {\n\t\tif( data == null ) data = new js.html.DataView(b.buffer, b.byteOffset, b.byteLength);\n\t}\n\n\tpublic function getDouble( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat64(pos, true);\n\t}\n\n\tpublic function getFloat( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat32(pos, true);\n\t}\n\n\tpublic function setDouble( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat64(pos, v, true);\n\t}\n\n\tpublic function setFloat( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat32(pos, v, true);\n\t}\n\n\tpublic function getUInt16( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getUint16(pos, true);\n\t}\n\n\tpublic function setUInt16( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setUint16(pos, v, true);\n\t}\n\n\tpublic function getInt32( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getInt32(pos, true);\n\t}\n\n\tpublic function setInt32( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setInt32(pos, v, true);\n\t}\n\n\tpublic function getInt64( pos : Int ) : haxe.Int64 {\n\t\treturn Int64.make(getInt32(pos + 4),getInt32(pos));\n\t}\n\n\tpublic function setInt64( pos : Int, v : haxe.Int64 ) : Void {\n\t\tsetInt32(pos, v.low);\n\t\tsetInt32(pos + 4, v.high);\n\t}\n\n\tpublic function getString( pos : Int, len : Int ) : String {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar fcc = String.fromCharCode;\n\t\tvar i = pos;\n\t\tvar max = pos+len;\n\t\t// utf8-decode and utf16-encode\n\t\twhile( i < max ) {\n\t\t\tvar c = b[i++];\n\t\t\tif( c < 0x80 ) {\n\t\t\t\tif( c == 0 ) break;\n\t\t\t\ts += fcc(c);\n\t\t\t} else if( c < 0xE0 )\n\t\t\t\ts += fcc( ((c & 0x3F) << 6) | (b[i++] & 0x7F) );\n\t\t\telse if( c < 0xF0 ) {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\ts += fcc( ((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F) );\n\t\t\t} else {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\tvar c3 = b[i++];\n\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t// surrogate pair\n\t\t\t\ts += fcc( (u >> 10) + 0xD7C0 );\n\t\t\t\ts += fcc( (u & 0x3FF) | 0xDC00 );\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString() : String {\n\t\treturn getString(0,length);\n\t}\n\n\tpublic function toHex() : String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor( i in 0...str.length )\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor( i in 0...length ) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData() : BytesData {\n\t\treturn untyped b.bufferValue;\n\t}\n\n\tpublic static function alloc( length : Int ) : Bytes {\n\t\treturn new Bytes(new BytesData(length));\n\t}\n\n\tpublic static function ofString( s : String ) : Bytes {\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile( i < s.length ) {\n\t\t\tvar c : Int = StringTools.fastCodeAt(s,i++);\n\t\t\t// surrogate pair\n\t\t\tif( 0xD800 <= c && c <= 0xDBFF )\n\t\t\t    c = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s,i++) & 0x3FF);\n\t\t\tif( c <= 0x7F )\n\t\t\t\ta.push(c);\n\t\t\telse if( c <= 0x7FF ) {\n\t\t\t\ta.push( 0xC0 | (c >> 6) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\ta.push( 0xE0 | (c >> 12) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else {\n\t\t\t\ta.push( 0xF0 | (c >> 18) );\n\t\t\t\ta.push( 0x80 | ((c >> 12) & 63) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(new js.html.Uint8Array(a).buffer);\n\t}\n\n\tpublic static function ofData( b : BytesData ) : Bytes {\n\t\tvar hb = untyped b.hxBytes;\n\t\tif( hb != null ) return hb;\n\t\treturn new Bytes(b);\n\t}\n\n\tpublic inline static function fastGet( b : BytesData, pos : Int ) : Int {\n\t\t// this requires that we have wrapped it with haxe.io.Bytes beforehand\n\t\treturn untyped b.bytes[pos];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tAllows to encode/decode String and bytes using Base64 encoding.\n**/\nclass Base64 {\n\n\tpublic static var CHARS(default,null) = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tpublic static var BYTES(default,null) = haxe.io.Bytes.ofString(CHARS);\n\n\tpublic static function encode( bytes : haxe.io.Bytes, complement = true ) : String {\n\t\tvar str = new BaseCode(BYTES).encodeBytes(bytes).toString();\n\t\tif( complement )\n\t\t\tswitch (bytes.length % 3) {\n\t\t\tcase 1:\n\t\t\t\tstr += \"==\";\n\t\t\tcase 2:\n\t\t\t\tstr += \"=\";\n\t\t\tdefault:\n\t\t\t}\n\t\treturn str;\n\t}\n\n\tpublic static function decode( str : String, complement = true ) : haxe.io.Bytes {\n\t\tif( complement )\n\t\t\twhile( str.charCodeAt(str.length-1) == \"=\".code )\n\t\t\t\tstr = str.substr(0,-1);\n\t\treturn new BaseCode(BYTES).decodeBytes(haxe.io.Bytes.ofString(str));\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tAllows to encode/decode String and bytes using a power of two base dictionnary.\n**/\nclass BaseCode {\n\n\tvar base : haxe.io.Bytes;\n\tvar nbits : Int;\n\tvar tbl : Array<Int>;\n\n\tpublic function new( base : haxe.io.Bytes ) {\n\t\tvar len = base.length;\n\t\tvar nbits = 1;\n\t\twhile( len > 1 << nbits )\n\t\t\tnbits++;\n\t\tif( nbits > 8 || len != 1 << nbits )\n\t\t\tthrow \"BaseCode : base length must be a power of two.\";\n\t\tthis.base = base;\n\t\tthis.nbits = nbits;\n\t}\n\n\tpublic function encodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if (neko && !interp)\n\t\treturn haxe.io.Bytes.ofData( base_encode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tvar size = Std.int(b.length * 8 / nbits);\n\t\tvar out = haxe.io.Bytes.alloc(size + (((b.length * 8) % nbits == 0) ? 0 : 1) );\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar mask = (1 << nbits) - 1;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < nbits ) {\n\t\t\t\tcurbits += 8;\n\t\t\t\tbuf <<= 8;\n\t\t\t\tbuf |= b.get(pin++);\n\t\t\t}\n\t\t\tcurbits -= nbits;\n\t\t\tout.set(pout++,base.get((buf >> curbits) & mask));\n\t\t}\n\t\tif( curbits > 0 )\n\t\t\tout.set(pout++,base.get((buf << (nbits - curbits)) & mask));\n\t\treturn out;\n\t\t#end\n\t}\n\n\tfunction initTable() {\n\t\tvar tbl = new Array();\n\t\tfor( i in 0...256 )\n\t\t\ttbl[i] = -1;\n\t\tfor( i in 0...base.length )\n\t\t\ttbl[base.get(i)] = i;\n\t\tthis.tbl = tbl;\n\t}\n\n\tpublic function decodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if (neko && !interp)\n\t\treturn haxe.io.Bytes.ofData( base_decode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tif( this.tbl == null ) initTable();\n\t\tvar tbl = this.tbl;\n\t\tvar size = (b.length * nbits) >> 3;\n\t\tvar out = haxe.io.Bytes.alloc(size);\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < 8 ) {\n\t\t\t\tcurbits += nbits;\n\t\t\t\tbuf <<= nbits;\n\t\t\t\tvar i = tbl[b.get(pin++)];\n\t\t\t\tif( i == -1 )\n\t\t\t\t\tthrow \"BaseCode : invalid encoded char\";\n\t\t\t\tbuf |= i;\n\t\t\t}\n\t\t\tcurbits -= 8;\n\t\t\tout.set(pout++,(buf >> curbits) & 0xFF);\n\t\t}\n\t\treturn out;\n\t\t#end\n\t}\n\n\tpublic function encodeString( s : String ) {\n\t\t#if (neko && !interp)\n\t\treturn neko.NativeString.toString( base_encode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn encodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic function decodeString( s : String ) {\n\t\t#if (neko && !interp)\n\t\treturn neko.NativeString.toString( base_decode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn decodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic static function encode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.encodeString(s);\n\t}\n\n\tpublic static function decode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.decodeString(s);\n\t}\n\n\t#if neko\n\tprivate static var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\tprivate static var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tBalancedTree allows key-value mapping with arbitrary keys, as long as they\n\tcan be ordered. By default, `Reflect.compare` is used in the `compare`\n\tmethod, which can be overridden in subclasses.\n\n\tOperations have a logarithmic average and worst-case cost.\n\n\tIteration over keys and values, using `keys` and `iterator` respectively,\n\tare in-order.\n**/\nclass BalancedTree<K,V> {\n\tvar root:TreeNode<K,V>;\n\n\t/**\n\t\tCreates a new BalancedTree, which is initially empty.\n\t**/\n\tpublic function new() { }\n\n\t/**\n\t\tBinds `key` to `value`.\n\n\t\tIf `key` is already bound to a value, that binding disappears.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function set(key:K, value:V) {\n\t\troot = setLoop(key, value, root);\n\t}\n\n\t/**\n\t\tReturns the value `key` is bound to.\n\n\t\tIf `key` is not bound to any value, `null` is returned.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function get(key:K):Null<V> {\n\t\tvar node = root;\n\t\twhile (node != null) {\n\t\t\tvar c = compare(key, node.key);\n\t\t\tif (c == 0) return node.value;\n\t\t\tif (c < 0) node = node.left;\n\t\t\telse node = node.right;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tRemoves the current binding of `key`.\n\n\t\tIf `key` has no binding, `this` BalancedTree is unchanged and false is\n\t\treturned.\n\n\t\tOtherwise the binding of `key` is removed and true is returned.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function remove(key:K) {\n\t\ttry {\n\t\t\troot = removeLoop(key, root);\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e:String) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t\tTells if `key` is bound to a value.\n\n\t\tThis method returns true even if `key` is bound to null.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function exists(key:K) {\n\t\tvar node = root;\n\t\twhile (node != null) {\n\t\t\tvar c = compare(key, node.key);\n\t\t\tif (c == 0) return true;\n\t\t\telse if (c < 0) node = node.left;\n\t\t\telse node = node.right;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tIterates over the bound values of `this` BalancedTree.\n\n\t\tThis operation is performed in-order.\n\t**/\n\tpublic function iterator():Iterator<V> {\n\t\tvar ret = [];\n\t\titeratorLoop(root, ret);\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tIterates over the keys of `this` BalancedTree.\n\n\t\tThis operation is performed in-order.\n\t**/\n\tpublic function keys():Iterator<K> {\n\t\tvar ret = [];\n\t\tkeysLoop(root, ret);\n\t\treturn ret.iterator();\n\t}\n\n\tfunction setLoop(k:K, v:V, node:TreeNode<K,V>) {\n\t\tif (node == null) return new TreeNode<K,V>(null, k, v, null);\n\t\tvar c = compare(k, node.key);\n\t\treturn if (c == 0) new TreeNode<K,V>(node.left, k, v, node.right, node.get_height());\n\t\telse if (c < 0) {\n\t\t\tvar nl = setLoop(k, v, node.left);\n\t\t\tbalance(nl, node.key, node.value, node.right);\n\t\t} else {\n\t\t\tvar nr = setLoop(k, v, node.right);\n\t\t\tbalance(node.left, node.key, node.value, nr);\n\t\t}\n\t}\n\n\tfunction removeLoop(k:K, node:TreeNode<K,V>) {\n\t\tif (node == null) throw \"Not_found\";\n\t\tvar c = compare(k, node.key);\n\t\treturn if (c == 0) merge(node.left, node.right);\n\t\telse if (c < 0) balance(removeLoop(k, node.left), node.key, node.value, node.right);\n\t\telse balance(node.left, node.key, node.value, removeLoop(k, node.right));\n\t}\n\n\tfunction iteratorLoop(node:TreeNode<K,V>, acc:Array<V>) {\n\t\tif (node != null) {\n\t\t\titeratorLoop(node.left, acc);\n\t\t\tacc.push(node.value);\n\t\t\titeratorLoop(node.right, acc);\n\t\t}\n\t}\n\n\tfunction keysLoop(node:TreeNode<K,V>, acc:Array<K>) {\n\t\tif (node != null) {\n\t\t\tkeysLoop(node.left, acc);\n\t\t\tacc.push(node.key);\n\t\t\tkeysLoop(node.right, acc);\n\t\t}\n\t}\n\n\tfunction merge(t1, t2) {\n\t\tif (t1 == null) return t2;\n\t\tif (t2 == null) return t1;\n\t\tvar t = minBinding(t2);\n\t\treturn balance(t1, t.key, t.value, removeMinBinding(t2));\n\t}\n\n\tfunction minBinding(t:TreeNode<K,V>) {\n\t\treturn if (t == null) throw \"Not_found\";\n\t\telse if (t.left == null) t;\n\t\telse minBinding(t.left);\n\t}\n\n\tfunction removeMinBinding(t:TreeNode<K,V>) {\n\t\treturn if (t.left == null) t.right;\n\t\telse balance(removeMinBinding(t.left), t.key, t.value, t.right);\n\t}\n\n\tfunction balance(l:TreeNode<K,V>, k:K, v:V, r:TreeNode<K,V>):TreeNode<K,V> {\n\t\tvar hl = l.get_height();\n\t\tvar hr = r.get_height();\n\t\treturn if (hl > hr + 2) {\n\t\t\tif (l.left.get_height() >= l.right.get_height()) new TreeNode<K,V>(l.left, l.key, l.value, new TreeNode<K,V>(l.right, k, v, r));\n\t\t\telse new TreeNode<K,V>(new TreeNode<K,V>(l.left,l.key, l.value, l.right.left), l.right.key, l.right.value, new TreeNode<K,V>(l.right.right, k, v, r));\n\t\t} else if (hr > hl + 2) {\n\t\t\tif (r.right.get_height() > r.left.get_height()) new TreeNode<K,V>(new TreeNode<K,V>(l, k, v, r.left), r.key, r.value, r.right);\n\t\t\telse new TreeNode<K,V>(new TreeNode<K,V>(l, k, v, r.left.left), r.left.key, r.left.value, new TreeNode<K,V>(r.left.right, r.key, r.value, r.right));\n\t\t} else {\n\t\t\tnew TreeNode<K,V>(l, k, v, r, (hl > hr ? hl : hr) + 1);\n\t\t}\n\t}\n\n\tfunction compare(k1:K, k2:K) {\n\t\treturn Reflect.compare(k1, k2);\n\t}\n\n\tpublic function toString() {\n\t\treturn root == null ? '{}' : '{${root.toString()}}';\n\t}\n}\n\nclass TreeNode<K,V> {\n\tpublic var left : TreeNode<K,V>;\n\tpublic var right : TreeNode<K,V>;\n\tpublic var key : K;\n\tpublic var value : V;\n\t#if as3\n\tpublic\n\t#end\n\tvar _height : Int;\n\n\tpublic function new(l, k, v, r, h = -1) {\n\t\tleft = l;\n\t\tkey = k;\n\t\tvalue = v;\n\t\tright = r;\n\t\tif (h == -1)\n\t\t\t_height = (left.get_height() > right.get_height() ? left.get_height() : right.get_height()) + 1;\n\t\telse\n\t\t\t_height = h;\n\t}\n\n\t@:extern public inline function get_height() return this == null ? 0 : _height;\n\n\tpublic function toString() {\n\t\treturn (left == null ? \"\" : left.toString() + \", \") + '$key=$value' + (right == null ? \"\" : \", \" +right.toString());\n\t}\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tEnumValueMap allows mapping of enum value keys to arbitrary values.\n\n\tKeys are compared by value and recursively over their parameters. If any\n\tparameter is not an enum value, `Reflect.compare` is used to compare them.\n**/\nclass EnumValueMap<K:EnumValue, V> extends haxe.ds.BalancedTree<K, V> implements haxe.Constraints.IMap<K,V> {\n\n\toverride function compare(k1:EnumValue, k2:EnumValue):Int {\n\t\tvar d = k1.getIndex() - k2.getIndex();\n\t\tif (d != 0) return d;\n\t\tvar p1 = k1.getParameters();\n\t\tvar p2 = k2.getParameters();\n\t\tif (p1.length == 0 && p2.length == 0) return 0;\n\t\treturn compareArgs(p1, p2);\n\t}\n\n\tfunction compareArgs(a1:Array<Dynamic>, a2:Array<Dynamic>):Int {\n\t\tvar ld = a1.length - a2.length;\n\t\tif (ld != 0) return ld;\n\t\tfor (i in 0...a1.length) {\n\t\t\tvar d = compareArg(a1[i], a2[i]);\n\t\t\tif (d != 0) return d;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction compareArg(v1:Dynamic, v2:Dynamic):Int {\n\t\treturn if (Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {\n\t\t\tcompare(v1, v2);\n\t\t} else if (Std.is(v1, Array) && Std.is(v2, Array)) {\n\t\t\tcompareArgs(v1, v2);\n\t\t} else {\n\t\t\tReflect.compare(v1, v2);\n\t\t}\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic inline function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic inline function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic inline function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key|0);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements haxe.Constraints.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { };\n\t\tuntyped h.__keys__ = { };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = untyped key.__id__ || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2015 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tHelper that converts between floating point and binary representation.\n\tAlways works in low-endian encoding.\n**/\nclass FPHelper {\n\n\t#if neko_v21\n\t// stored in helper\n\t#elseif neko\n\tstatic var i64tmp = new neko.vm.Tls<Int64>();\n\t#elseif !(java || cs)\n\tstatic var i64tmp = Int64.ofInt(0);\n\t#end\n\n\t#if neko\n\t\t#if neko_v21\n\t\tstatic var helpers = new neko.vm.Tls<neko.NativeArray<Dynamic>>();\n\t\t#else\n\t\tstatic var helperf = new neko.vm.Tls<neko.NativeString>();\n\t\tstatic var helperd = new neko.vm.Tls<neko.NativeString>();\n\t\tstatic var _float_of_bytes = neko.Lib.load(\"std\",\"float_of_bytes\",2);\n\t\tstatic var _double_of_bytes = neko.Lib.load(\"std\",\"double_of_bytes\",2);\n\t\tstatic var _float_bytes = neko.Lib.load(\"std\",\"float_bytes\",2);\n\t\tstatic var _double_bytes = neko.Lib.load(\"std\",\"double_bytes\",2);\n\t\t#end\n\t#elseif flash\n\t\tstatic var helper = {\n\t\t\tvar b = new flash.utils.ByteArray();\n\t\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\tb;\n\t\t}\n\t#elseif php\n\t\tstatic var isLittleEndian : Bool = untyped __call__('unpack','S','\\x01\\x00')[1] == 1;\n\t#else\n\t\tstatic inline var LN2 = 0.6931471805599453; // Math.log(2)\n\t#end\n\n\t#if neko_v21 inline #end\n\tpublic static function i32ToFloat( i : Int ) : Float {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $itof(i,false);\n\t\t\t#else\n\t\t\tvar helper = helperf.value;\n\t\t\tif( helper == null )\n\t\t\t\thelperf.value = helper = neko.NativeString.alloc(4);\n\t\t\tuntyped $sset(helper,0,i&0xFF);\n\t\t\tuntyped $sset(helper,1,(i>>8)&0xFF);\n\t\t\tuntyped $sset(helper,2,(i>>16)&0xFF);\n\t\t\tuntyped $sset(helper,3,i>>>24);\n\t\t\treturn _float_of_bytes(helper,false);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32_as_float32(i);\n\t\t#elseif cs\n\t\t\tvar helper = new SingleHelper(0);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\thelper.i = i;\n\t\t\t} else {\n\t\t\t\thelper.i = ((i >>> 24) & 0xFF) | (((i >> 16) & 0xFF) << 8) | (((i >> 8) & 0xFF) << 16) | ((i & 0xFF) << 24);\n\t\t\t}\n\n\t\t\treturn helper.f;\n\t\t#elseif java\n\t\t\treturn java.lang.Float.FloatClass.intBitsToFloat(i);\n\t\t#elseif php\n\t\t\treturn untyped  __call__('unpack', 'f', __call__('pack', 'l', i))[1];\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeUnsignedInt(i);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readFloat();\n\t\t#else\n\t\t\tvar sign = 1 - ((i >>> 31) << 1);\n\t\t\tvar exp = (i >>> 23) & 0xFF;\n\t\t\tvar sig = i & 0x7FFFFF;\n\t\t\tif( sig == 0 && exp == 0 )\n\t\t\t\treturn 0.0;\n\t\t\treturn sign*(1 + Math.pow(2, -23)*sig) * Math.pow(2, exp-127);\n\t\t#end\n\t}\n\n\t#if neko_v21 inline #end\n\tpublic static function floatToI32( f : Float ) : Int {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $ftoi(f,false);\n\t\t\t#else\n\t\t\tvar r = _float_bytes(f,false);\n\t\t\treturn untyped $sget(r,0) | ($sget(r,1)<<8) | ($sget(r,2)<<16) | ($sget(r,3)<<24);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_float32_as_le_int32(f);\n\t\t#elseif cs\n\t\t\tvar helper = new SingleHelper(f);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\treturn helper.i;\n\t\t\t} else {\n\t\t\t\tvar i = helper.i;\n\t\t\t\treturn ((i >>> 24) & 0xFF) | (((i >> 16) & 0xFF) << 8) | (((i >> 8) & 0xFF) << 16) | ((i & 0xFF) << 24);\n\t\t\t}\n\t\t#elseif java\n\t\t\treturn java.lang.Float.FloatClass.floatToRawIntBits(f);\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeFloat(f);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readUnsignedInt();\n\t\t#elseif php\n\t\t\treturn untyped __call__('unpack','l',__call__('pack', 'f', f))[1];\n\t\t#else\n\t\t\tif( f == 0 ) return 0;\n\t\t\tvar af = f < 0 ? -f : f;\n\t\t\tvar exp = Math.floor(Math.log(af) / LN2);\n\t\t\tif( exp < -127 ) exp = -127 else if( exp > 128 ) exp = 128;\n\t\t\tvar sig = Math.round((af / Math.pow(2, exp) - 1) * 0x800000) & 0x7FFFFF;\n\t\t\treturn (f < 0 ? 0x80000000 : 0) | ((exp + 127) << 23) | sig;\n\t\t#end\n\t}\n\n\t#if neko_v21 inline #end\n\tpublic static function i64ToDouble( low : Int, high : Int ) : Float {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $itod(low,high,false);\n\t\t\t#else\n\t\t\tvar helper = helperd.value;\n\t\t\tif( helper == null )\n\t\t\t\thelperd.value = helper = neko.NativeString.alloc(8);\n\t\t\tuntyped $sset(helper,0,low&0xFF);\n\t\t\tuntyped $sset(helper,1,(low>>8)&0xFF);\n\t\t\tuntyped $sset(helper,2,(low>>16)&0xFF);\n\t\t\tuntyped $sset(helper,3,low>>>24);\n\t\t\tuntyped $sset(helper,4,high&0xFF);\n\t\t\tuntyped $sset(helper,5,(high>>8)&0xFF);\n\t\t\tuntyped $sset(helper,6,(high>>16)&0xFF);\n\t\t\tuntyped $sset(helper,7,high>>>24);\n\t\t\treturn _double_of_bytes(helper,false);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32s_as_float64(low,high);\n\t\t#elseif cs\n\t\t\tvar helper = new FloatHelper(0);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\thelper.i = haxe.Int64.make(high,low);\n\t\t\t} else {\n\t\t\t\tvar i1 = high,\n\t\t\t\t    i2 = low;\n\t\t\t\tvar j2 = ((i1 >>> 24) & 0xFF) | (((i1 >> 16) & 0xFF) << 8) | (((i1 >> 8) & 0xFF) << 16) | ((i1 & 0xFF) << 24);\n\t\t\t\tvar j1 = ((i2 >>> 24) & 0xFF) | (((i2 >> 16) & 0xFF) << 8) | (((i2 >> 8) & 0xFF) << 16) | ((i2 & 0xFF) << 24);\n\t\t\t\thelper.i = haxe.Int64.make(j1,j2);\n\t\t\t}\n\t\t\treturn helper.f;\n\t\t#elseif java\n\t\t\treturn java.lang.Double.DoubleClass.longBitsToDouble( Int64.make(high,low) );\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeUnsignedInt(low);\n\t\t\thelper.writeUnsignedInt(high);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readDouble();\n\t\t#elseif php\n\t\t\treturn untyped  __call__('unpack', 'd', __call__('pack', 'ii', isLittleEndian ? low : high, isLittleEndian ? high : low))[1];\n\t\t#else\n\t\t\tvar sign = 1 - ((high >>> 31) << 1);\n\t\t\tvar exp = ((high >> 20) & 0x7FF) - 1023;\n\t\t\tvar sig = (high&0xFFFFF) * 4294967296. + (low>>>31) * 2147483648. + (low&0x7FFFFFFF);\n\t\t\tif( sig == 0 && exp == -1023 )\n\t\t\t\treturn 0.0;\n\t\t\treturn sign*(1.0 + Math.pow(2, -52)*sig) * Math.pow(2, exp);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns an Int64 representing the bytes representation of the double precision IEEE float value.\n\t\tWARNING : for performance reason, the same Int64 value might be reused every time. Copy its low/high values before calling again.\n\t\tWe still ensure that this is safe to use in a multithread environment\n\t**/\n\tpublic static function doubleToI64( v : Float ) : Int64 {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\tvar helper = helpers.value;\n\t\t\tif( helper == null ) {\n\t\t\t\thelpers.value = helper = neko.NativeArray.alloc(2);\n\t\t\t\thelper[0] = neko.NativeArray.alloc(2);\n\t\t\t\thelper[1] = haxe.Int64.ofInt(0);\n\t\t\t}\n\t\t\tvar i64 : haxe.Int64 = helper[1], int2 = helper[0];\n\t\t\tuntyped $dtoi(v,int2,false);\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(int2[0]);\n\t\t\t\ti64.set_high(int2[1]);\n\t\t\t}\n\t\t\treturn i64;\n\t\t\t#else\n\t\t\tvar r = _double_bytes(v,false), i64 = i64tmp.value;\n\t\t\tif( i64 == null )\n\t\t\t\ti64 = i64tmp.value = haxe.Int64.ofInt(0);\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(untyped $sget(r,0) | ($sget(r,1)<<8) | ($sget(r,2)<<16) | ($sget(r,3)<<24));\n\t\t\t\ti64.set_high(untyped $sget(r,4) | ($sget(r,5)<<8) | ($sget(r,6)<<16) | ($sget(r,7)<<24));\n\t\t\t}\n\t\t\treturn i64;\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn Int64.make(untyped __global__.__hxcpp_reinterpret_float64_as_le_int32_high(v),\n\t\t\t\t               untyped __global__.__hxcpp_reinterpret_float64_as_le_int32_low(v) );\n\t\t#elseif java\n\t\t\treturn java.lang.Double.DoubleClass.doubleToRawLongBits(v);\n\t\t#elseif cs\n\t\t\tvar helper = new FloatHelper(v);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\treturn helper.i;\n\t\t\t} else {\n\t\t\t\tvar i = helper.i;\n\t\t\t\tvar i1 = haxe.Int64.getHigh(i),\n\t\t\t\t    i2 = haxe.Int64.getLow(i);\n\t\t\t\tvar j2 = ((i1 >>> 24) & 0xFF) | (((i1 >> 16) & 0xFF) << 8) | (((i1 >> 8) & 0xFF) << 16) | ((i1 & 0xFF) << 24);\n\t\t\t\tvar j1 = ((i2 >>> 24) & 0xFF) | (((i2 >> 16) & 0xFF) << 8) | (((i2 >> 8) & 0xFF) << 16) | ((i2 & 0xFF) << 24);\n\n\t\t\t\treturn haxe.Int64.make(j1,j2);\n\t\t\t}\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeDouble(v);\n\t\t\thelper.position = 0;\n\t\t\tvar i64 = i64tmp;\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(cast helper.readUnsignedInt());\n\t\t\t\ti64.set_high(cast helper.readUnsignedInt());\n\t\t\t}\n\t\t\treturn i64;\n\t\t#elseif php\n\t\t\tvar a = untyped __call__('unpack',isLittleEndian ? 'V2' : 'N2',__call__('pack', 'd', v));\n\t\t\tvar i64 = i64tmp;\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(a[isLittleEndian ? 1 : 2]);\n\t\t\t\ti64.set_high(a[isLittleEndian ? 2 : 1]);\n\t\t\t}\n\t\t\treturn i64;\n\t\t#else\n\t\t\tvar i64 = i64tmp;\n\t\t\tif( v == 0 ) {\n\t\t\t\t@:privateAccess {\n\t\t\t\t\ti64.set_low(0);\n\t\t\t\t\ti64.set_high(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar av = v < 0 ? -v : v;\n\t\t\t\tvar exp = Math.floor(Math.log(av) / LN2);\n\t\t\t\tvar sig = Math.fround(((av / Math.pow(2, exp)) - 1) * 4503599627370496.); // 2^52\n\t\t\t\tvar sig_l = Std.int(sig);\n\t\t\t\tvar sig_h = Std.int(sig / 4294967296.0);\n\t\t\t\t@:privateAccess {\n\t\t\t\t\ti64.set_low(sig_l);\n\t\t\t\t\ti64.set_high((v < 0 ? 0x80000000 : 0) | ((exp + 1023) << 20) | sig_h);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn i64;\n\t\t#end\n\t}\n\n}\n\n#if cs\n@:meta(System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Explicit))\n@:nativeGen @:struct private class SingleHelper\n{\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var i:Int;\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var f:Single;\n\n\tpublic function new(f:Single)\n\t{\n\t\tthis.i = 0;\n\t\tthis.f = f;\n\t}\n}\n\n@:meta(System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Explicit))\n@:nativeGen @:struct private class FloatHelper\n{\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var i:haxe.Int64;\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var f:Float;\n\n\tpublic function new(f:Float)\n\t{\n\t\tthis.i = haxe.Int64.ofInt(0);\n\t\tthis.f = f;\n\t}\n}\n\n#end\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tThis class provides a convenient way of working with paths. It supports the\n\tcommon path formats:\n\n\t- directory1/directory2/filename.extension\n\t- directory1\\directory2\\filename.excention\n**/\nclass Path {\n\n\t/**\n\t\tThe directory.\n\n\t\tThis is the leading part of the path that is not part of the file name\n\t\tand the extension.\n\n\t\tDoes not end with a `/` or `\\` separator.\n\n\t\tIf the path has no directory, the value is null.\n\t**/\n\tpublic var dir : String;\n\n\t/**\n\t\tThe file name.\n\n\t\tThis is the part of the part between the directory and the extension.\n\n\t\tIf there is no file name, e.g. for \".htaccess\" or \"/dir/\", the value\n\t\tis the empty String \"\".\n\t**/\n\tpublic var file : String;\n\n\t/**\n\t\tThe file extension.\n\n\t\tIt is separated from the file name by a dot. This dot is not part of\n\t\tthe extension.\n\n\t\tIf the path has no extension, the value is null.\n\t**/\n\tpublic var ext : String;\n\n\t/**\n\t\tTrue if the last directory separator is a backslash, false otherwise.\n\t**/\n\tpublic var backslash : Bool;\n\n\t/**\n\t\tCreates a new Path instance by parsing `path`.\n\n\t\tPath information can be retrieved by accessing the dir, file and ext\n\t\tproperties.\n\t**/\n\tpublic function new( path : String ) {\n\t\tswitch (path) {\n\t\t\tcase \".\" | \"..\":\n\t\t\t\tdir = path;\n\t\t\t\tfile = \"\";\n\t\t\t\treturn;\n\t\t}\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\tif( c1 < c2 ) {\n\t\t\tdir = path.substr(0,c2);\n\t\t\tpath = path.substr(c2+1);\n\t\t\tbackslash = true;\n\t\t} else if( c2 < c1 ) {\n\t\t\tdir = path.substr(0,c1);\n\t\t\tpath = path.substr(c1+1);\n\t\t} else\n\t\t\tdir = null;\n\t\tvar cp = path.lastIndexOf(\".\");\n\t\tif( cp != -1 ) {\n\t\t\text = path.substr(cp+1);\n\t\t\tfile = path.substr(0,cp);\n\t\t} else {\n\t\t\text = null;\n\t\t\tfile = path;\n\t\t}\n\t}\n\n\t/**\n\t\tReturns a String representation of `this` path.\n\n\t\tIf `this.backslash` is true, backslash is used as directory separator,\n\t\totherwise slash is used. This only affects the separator between\n\t\t`this.dir` and `this.file`.\n\n\t\tIf `this.directory` or `this.extension` is null, their representation\n\t\tis the empty String \"\".\n\t**/\n\tpublic function toString() {\n\t\treturn (if( dir == null ) \"\" else dir + if( backslash ) \"\\\\\" else \"/\") + file + (if( ext == null ) \"\" else \".\" + ext);\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the file extension.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function withoutExtension( path : String ) {\n\t\tvar s = new Path(path);\n\t\ts.ext = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the directory.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function withoutDirectory( path ) {\n\t\tvar s = new Path(path);\n\t\ts.dir = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the directory of `path`.\n\n\t\tIf the directory is null, the empty String \"\" is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function directory( path ) {\n\t\tvar s = new Path(path);\n\t\tif( s.dir == null )\n\t\t\treturn \"\";\n\t\treturn s.dir;\n\t}\n\n\t/**\n\t\tReturns the extension of `path`.\n\n\t\tIf the extension is null, the empty String \"\" is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function extension( path ) {\n\t\tvar s = new Path(path);\n\t\tif( s.ext == null )\n\t\t\treturn \"\";\n\t\treturn s.ext;\n\t}\n\n\t/**\n\t\tReturns a String representation of `path` where the extension is `ext`.\n\n\t\tIf `path` has no extension, `ext` is added as extension.\n\n\t\tIf `path` or `ext` are null, the result is unspecified.\n\t**/\n\tpublic static function withExtension( path, ext ) {\n\t\tvar s = new Path(path);\n\t\ts.ext = ext;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tJoins all paths in `paths` together.\n\n\t\tIf `paths` is empty, the empty String `\"\"` is returned. Otherwise the\n\t\tpaths are joined with a slash between them.\n\n\t\tIf `paths` is null, the result is unspecified.\n\t**/\n\tpublic static function join(paths:Array<String>) : String {\n\t\tvar paths = paths.filter(function(s) return s != null && s != \"\");\n\t\tif (paths.length == 0) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar path = paths[0];\n\t\tfor (i in 1...paths.length) {\n\t\t\tpath = addTrailingSlash(path);\n\t\t\tpath += paths[i];\n\t\t}\n\t\treturn normalize(path);\n\t}\n\n\t/**\n\t\tNormalize a given `path` (e.g. make '/usr/local/../lib' to '/usr/lib').\n\n\t\tAlso replaces backslashes \\ with slashes / and afterwards turns\n\t\tmultiple slashes into a single one.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function normalize(path : String) : String {\n\t\tvar slash = '/';\n\t\tpath = path.split(\"\\\\\").join(\"/\");\n\t\tif( path == null || path == slash ) {\n\t\t\treturn slash;\n\t\t}\n\n\t\tvar target = [];\n\n\t\tfor( token in path.split(slash) ) {\n\t\t\tif(token == '..' && target.length > 0 && target[target.length-1] != \"..\") {\n\t\t\t\ttarget.pop();\n\t\t\t} else if(token != '.') {\n\t\t\t\ttarget.push(token);\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = target.join(slash);\n\t\tvar regex = ~/([^:])\\/+/g;\n\t\tvar result = regex.replace(tmp, \"$1\" +slash);\n\t\tvar acc = new StringBuf();\n\t\tvar colon = false;\n\t\tvar slashes = false;\n\t\tfor (i in 0...tmp.length) {\n\t\t\tswitch (tmp.charCodeAt(i)) {\n\t\t\t\tcase \":\".code:\n\t\t\t\t\tacc.add(\":\");\n\t\t\t\t\tcolon = true;\n\t\t\t\tcase \"/\".code if (colon == false):\n\t\t\t\t\tslashes = true;\n\t\t\t\tcase i:\n\t\t\t\t\tcolon = false;\n\t\t\t\t\tif (slashes) {\n\t\t\t\t\t\tacc.add(\"/\");\n\t\t\t\t\t\tslashes = false;\n\t\t\t\t\t}\n\t\t\t\t\tacc.add(String.fromCharCode(i));\n\t\t\t}\n\t\t}\n\t\tvar result = acc.toString();\n\t\treturn result;\n\t}\n\n\t/**\n\t\tAdds a trailing slash to `path`, if it does not have one already.\n\n\t\tIf the last slash in `path` is a backslash, a backslash is appended to\n\t\t`path`.\n\n\t\tIf the last slash in `path` is a slash, or if no slash is found, a slash\n\t\tis appended to `path`. In particular, this applies to the empty String\n\t\t\"\".\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function addTrailingSlash( path : String ) : String {\n\t\tif (path.length == 0)\n\t\t\treturn \"/\";\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\treturn if ( c1 < c2 ) {\n\t\t\tif (c2 != path.length - 1) path + \"\\\\\";\n\t\t\telse path;\n\t\t} else {\n\t\t\tif (c1 != path.length - 1) path + \"/\";\n\t\t\telse path;\n\t\t}\n\t}\n\n\t/**\n\t\tRemoves trailing slashes from `path`.\n\n\t\tIf `path` does not end with a `/` or `\\`, `path` is returned unchanged.\n\n\t\tOtherwise the substring of `path` excluding the trailing slashes or\n\t\tbackslashes is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\t@:require(haxe_ver >= 3.1)\n\tpublic static function removeTrailingSlashes ( path : String ) : String {\n\t\twhile (true) {\n\t\t\tswitch(path.charCodeAt(path.length - 1)) {\n\t\t\t\tcase '/'.code | '\\\\'.code: path = path.substr(0, -1);\n\t\t\t\tcase _: break;\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t\tReturns true if the path is an absolute path, and false otherwise.\n\t**/\n\t@:require(haxe_ver >= 3.2)\n\tpublic static function isAbsolute ( path : String ) : Bool {\n\t\tif (StringTools.startsWith(path, '/')) return true;\n\t\tif (path.charAt(1) == ':') return true;\n\t\treturn false;\n\t}\n\n\tprivate static function unescape( path : String ) : String {\n\t\tvar regex = ~/-x([0-9][0-9])/g;\n\t\treturn regex.map(path, function(regex) return String.fromCharCode(Std.parseInt(regex.matched(1))));\n\t}\n\n\tprivate static function escape( path : String, allowSlashes : Bool = false ) : String {\n\t\tvar regex = allowSlashes ? ~/[^A-Za-z0-9_\\/\\\\\\.]/g : ~/[^A-Za-z0-9_\\.]/g;\n\t\treturn regex.map(path, function(v) return '-x' + v.matched(0).charCodeAt(0));\n\t}\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.spaces;\n\nclass HSB implements Color {\n\n\tpublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int, val:Float):Float {\n\t\tdata[channel] = \n\t\t\tif (channel == 0) {\n\t\t\t\tloop(val, 360);\n\t\t\t} else {\n\t\t\t\tMath.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\t\t}\n\t\t\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn channel == 0 ? 360 : 100;\n\t}\n\n\t/**\n\t * Hue color value\n\t * @return Number (between 0 and 360)\n\t */\t\n\tpublic var hue(get_hue, set_hue) : Float;\n\n\t/**\n\t * Saturation color value\n\t * @return Number (between 0 and 100)\n\t */\t\n\tpublic var saturation(get_saturation, set_saturation) : Float;\n\n\t/**\n\t * Black color value\n\t * @param value Number (between 0 and 100)\n\t */\t\n\tpublic var brightness(get_brightness, set_brightness) : Float;\n\t\n\t\n\tprivate function get_hue():Float{\n\t\treturn getValue(0);\n\t}\n\n\tprivate function set_hue(val:Float):Float{\n\t\tdata[0] = loop(val, 360);\n\t\treturn val;\n\t}\n\t\n\tprivate function get_saturation():Float{\n\t\treturn getValue(1);\n\t}\n\t\n\tprivate function set_saturation(val:Float):Float{\n\t\tdata[1] = Math.min(100, Math.max(val, 0));\n\t\treturn val;\n\t}\n\t\n\tprivate function get_brightness():Float{\n\t\treturn getValue(2);\n\t}\n\t\n\tprivate function set_brightness(val:Float):Float{\n\t\tdata[2] = Math.min(100, Math.max(val, 0));\n\t\treturn val;\n\t}\n\t\n\tpublic function toRGB():RGB {\n\t\tvar hue = hue; \n\t\tvar saturation = saturation;\n\t\tvar brightness = brightness;\n\t\tvar r:Float = 0, g:Float = 0, b:Float = 0, i:Float, f:Float, p:Float, q:Float, t:Float;\n\t\thue%=360;\n\t\tif(brightness==0) \n\t\t{\n\t\t\treturn new RGB();\n\t\t}\n\t\tsaturation*=0.01;\n\t\tbrightness*=0.01;\n\t\thue/=60;\n\t\ti = Math.floor(hue);\n\t\tf = hue-i;\n\t\tp = brightness*(1-saturation);\n\t\tq = brightness*(1-(saturation*f));\n\t\tt = brightness*(1-(saturation*(1-f)));\n\t\tif (i==0) {r=brightness; g=t; b=p;}\n\t\telse if (i==1) {r=q; g=brightness; b=p;}\n\t\telse if (i==2) {r=p; g=brightness; b=t;}\n\t\telse if (i==3) {r=p; g=q; b=brightness;}\n\t\telse if (i==4) {r=t; g=p; b=brightness;}\n\t\telse if (i==5) {r=brightness; g=p; b=q;}\n\n\t\treturn new RGB(r * 255, g * 255, b * 255);\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of HSB color\n\t * @return Hexidecimal color value\n\t * \n\t */\t\n\tpublic function getColor():Int {\n\t\treturn toRGB().getColor();\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):HSB {\n\t\tvar r:Float = rgb.red;\n\t\tvar g:Float = rgb.green;\n\t\tvar b:Float = rgb.blue;\n\t\t\n\t\tr/=255;\n\t\tg/=255;\n\t\tb/=255;\n\t\t\n\t\tvar h:Float, s:Float, v:Float;\n\t\tvar min:Float, max:Float, delta:Float;\n\n\t\tmin = Math.min( r, Math.min(g, b) );\n\t\tmax = Math.max( r, Math.max(g, b) );\n\t\t\n\t\tv = max*100;\n\n\t\tdelta = max - min;\n\n\t\tif( max != 0 )\n\t\t{\n\t\t\ts = (delta / max)*100;\n\t\t} else {\n\t\t\ts = 0;\n\t\t\th = -1;\n\t\t\t\n\t\t\tthis.hue = h;\n\t\t\tthis.saturation = s;\n\t\t\tthis.brightness = v;\n\t\t\treturn this;\n\t\t}\n\n\t\tif (delta == 0) {\n\t\t\tthis.hue = 0;\n\t\t\tthis.saturation = s;\n\t\t\tthis.brightness = v;\n\t\t\treturn this;\n\t\t}\n\n\t\tif( r == max )\n\t\t{\n\t\t\th = ( g - b ) / delta;\n\t\t} else if( g == max ) {\n\t\t\th = 2 + ( b - r ) / delta;\n\t\t} else {\n\t\t\th = 4 + ( r - g ) / delta;\n\t\t}\n\n\t\th *= 60;\n\t\tif( h < 0 ) h += 360;\n\t\t\n\t\tthis.hue = h;\n\t\tthis.saturation = s;\n\t\tthis.brightness = v;\n\t\t\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of HSB color\n\t * @param value Hexidecimal color value\n\t * \n\t */\t\t\n\tpublic function setColor(color:Int):HSB{\n\t\treturn fromRGB(new RGB(color >> 16 & 0xFF, color >> 8 & 0xFF, color & 0xFF));\n\t}\n\t\n\t/**\n\t * @param hue (between 0 and 360)\n\t * @param saturation (between 0 and 100)\n\t * @param black (between 0 and 100)\n\t */\t\t\n\tpublic function new(?hue:Float=0, ?saturation:Float=0, ?brightness:Float=0):Void {\n\t\tnumOfChannels = 3;\n\t\tdata = [];\n\t\tthis.hue = hue;\n\t\tthis.saturation = saturation;\n\t\tthis.brightness = brightness;\n\t}\n\n\tpublic function clone() { return new HSB(hue, saturation, brightness); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):HSB {\n\t\tvar target:HSB = Std.is(target,HSB) ? cast target : new HSB().fromRGB(target.toRGB());\n\t\treturn new HSB\n\t\t\t(\n\t\t\t\thue + (target.hue - hue) * ratio, \n\t\t\t\tsaturation + (target.saturation - saturation) * ratio, \n\t\t\t\tbrightness + (target.brightness - brightness) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\n\t\n\tstatic function loop(index:Float, length:Float):Float {\n\t\tif (index < 0)\n\t\t\tindex = length + index % length;\n\t\t\n\t\tif (index >= length)\n\t\t\tindex %= length;\n\t\t\n\t\treturn index;\n\t}\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.spaces;\n\nclass RGB implements Color {\n\n\tpublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int,val:Float):Float {\n\t\tdata[channel] = Math.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn 255;\n\t}\n\n\t/**\n\t * Red color channel\n\t * @return Number (between 0 and 255)\n\t */\t\n\tpublic var red(get_red, set_red) : Float;\n\t\n\t/**\n\t * Green color channel\n\t * @return Number (between 0 and 255)\n\t */\t\n\tpublic var green(get_green, set_green) : Float;\n\n\t/**\n\t * Blue color channel\n\t * @return Number (between 0 and 255)\n\t */\t\n\tpublic var blue(get_blue, set_blue) : Float;\n\n\tprivate function get_red():Float{\n\t\treturn getValue(0);\n\t}\n\n\tprivate function set_red(value:Float):Float{\n\t\treturn setValue(0,value);\n\t}\n\t\n\tprivate function get_green():Float{\n\t\treturn getValue(1);\n\t}\n\t\n\tprivate function set_green(value:Float):Float{\n\t\treturn setValue(1,value);\n\t}\n\t\n\tprivate function get_blue():Float{\n\t\treturn getValue(2);\n\t}\n\t\n\tprivate function set_blue(value:Float):Float{\n\t\treturn setValue(2,value);\n\t}\n\t\n\tpublic function toRGB():RGB {\n\t\treturn clone();\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of color\n\t * @return Hexidecimal color value\n\t * \n\t */\n\tpublic function getColor():Int{\n\t\treturn (Math.round(red) << 16) | (Math.round(green) << 8) | Math.round(blue);\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):RGB {\n\t\tthis.red = rgb.red;\n\t\tthis.green = rgb.green;\n\t\tthis.blue = rgb.blue;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of color\n\t * @param value Hexidecimal color value\n\t * \n\t */\t\n\tpublic function setColor(color:Int):RGB{\n\t\tthis.red = color >> 16 & 0xFF;\n\t\tthis.green = color >> 8 & 0xFF;\n\t\tthis.blue = color & 0xFF;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * \n\t * @param r Number (between 0 and 255)\n\t * @param g Number (between 0 and 255)\n\t * @param b Number (between 0 and 255)\n\t * \n\t */\t\t\n\tpublic function new(?r:Float=0, ?g:Float=0, ?b:Float=0)\n\t{\n\t\tnumOfChannels = 3;\n\t\tdata = [];\n\t\tthis.red = r;\n\t\tthis.green = g;\n\t\tthis.blue = b;\n\t}\n\t\n\tpublic function clone() { return new RGB(red, green, blue); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):RGB {\n\t\tvar target:RGB = Std.is(target,RGB) ? cast target : new RGB().fromRGB(target.toRGB());\n\t\treturn new RGB\n\t\t\t(\n\t\t\t\tred + (target.red - red) * ratio, \n\t\t\t\tgreen + (target.green - green) * ratio, \n\t\t\t\tblue + (target.blue - blue) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn untyped js.Lib.global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2015 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla/HTMLCanvasElement.webidl line 17:0. Do not edit!\n\npackage js.html;\n\n@:native(\"HTMLCanvasElement\")\nextern class CanvasElement extends Element\n{\n\tvar width : Int;\n\tvar height : Int;\n\t\n\t/** @throws DOMError */\n\tfunction getContext( contextId : String, ?contextOptions : Dynamic ) : Dynamic/*MISSING nsISupports*/;\n\t/** @throws DOMError */\n\tfunction toDataURL( ?type : String = \"\", ?encoderOptions : Dynamic ) : String;\n\t/** @throws DOMError */\n\tfunction toBlob( callback : Blob -> Void, ?type : String = \"\", ?encoderOptions : Dynamic ) : Void;\n\t\n\t/** Shorthand for getting a CanvasRenderingContext2D. */\n\tinline function getContext2d( ?attribs : {} ) : CanvasRenderingContext2D {\n\t\treturn cast getContext(\"2d\", attribs);\n\t}\n\t/** Shorthand for getting a js.html.webgl.RenderingContext. */\n\tinline function getContextWebGL( ?attribs : js.html.webgl.ContextAttributes ) : js.html.webgl.RenderingContext {\n\t\treturn CanvasUtil.getContextWebGL(this, attribs);\n\t}\n}\n\nprivate class CanvasUtil {\n\tpublic static function getContextWebGL( canvas :CanvasElement, attribs :{} ) {\n\t\tfor (name in [\"webgl\", \"experimental-webgl\"]) {\n\t\t\tvar ctx = canvas.getContext(name, attribs);\n\t\t\tif (ctx != null) return ctx;\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n@:keep\nclass ArrayBuffer {\n\n\tpublic var byteLength : Int;\n\tvar a : Array<Int>;\n\t\n\tpublic function new( ?a : Dynamic ) {\n\t\tif( Std.is(a,Array) ) {\n\t\t\tthis.a = a;\n\t\t\tbyteLength = a.length;\n\t\t} else {\n\t\t\tvar len : Int = a;\n\t\t\tthis.a = [];\n\t\t\tfor( i in 0...len )\n\t\t\t\tthis.a[i] = 0;\n\t\t\tbyteLength = len;\n\t\t}\n\t}\n\t\n\tpublic function slice(begin,?end) {\n\t\treturn new ArrayBuffer(a.slice(begin,end));\n\t}\n\t\n\tstatic function sliceImpl(begin,?end) {\n\t\tvar u = new js.html.Uint8Array(untyped __js__('this'), begin, end == null ? null : end - begin);\n        var result = new js.html.ArrayBuffer(u.byteLength);\n        var resultArray = new js.html.Uint8Array(result);\n\t\tresultArray.set(u);\n        return result;\n\t}\n\n\tstatic function __init__() untyped {\n\t\tvar ArrayBuffer = js.Lib.global.ArrayBuffer || js.html.compat.ArrayBuffer;\n\t\tif( ArrayBuffer.prototype.slice == null ) ArrayBuffer.prototype.slice = sliceImpl; // IE10\n\t}\n}","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\nimport haxe.io.Error;\n\n@:keep\n@:access(js.html.compat.ArrayBuffer)\nclass DataView {\n\n\tvar buf : ArrayBuffer;\n\tvar offset : Int;\n\tvar length : Int;\n\n\tpublic function new( buffer : ArrayBuffer, ?byteOffset : Int, ?byteLength : Int ) : Void {\n\t\tthis.buf = buffer;\n\t\tthis.offset = byteOffset == null ? 0 : byteOffset;\n\t\tthis.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;\n\t\tif( offset < 0 || length < 0 || offset+length > buffer.byteLength )\n\t\t\tthrow OutsideBounds;\n\t}\n\n\tpublic function getInt8( byteOffset : Int ) : Int {\n\t\tvar v = buf.a[offset + byteOffset];\n\t\treturn v >= 0x80 ? v - 256 : v;\n\t}\n\n\tpublic function getUint8( byteOffset : Int ) : Int {\n\t\treturn buf.a[offset + byteOffset];\n\t}\n\n\tpublic function getInt16( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar v = getUint16(byteOffset, littleEndian);\n\t\treturn v >= 0x8000 ? v - 65536 : v;\n\t}\n\n\tpublic function getUint16( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\treturn littleEndian ? buf.a[offset + byteOffset] | (buf.a[offset + byteOffset + 1] << 8) : (buf.a[offset + byteOffset]<<8) | buf.a[offset + byteOffset + 1];\n\t}\n\n\tpublic function getInt32( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar p = offset + byteOffset;\n\t\tvar a = buf.a[p++];\n\t\tvar b = buf.a[p++];\n\t\tvar c = buf.a[p++];\n\t\tvar d = buf.a[p++];\n\t\treturn littleEndian ? a | (b<<8) | (c<<16) | (d<<24) : d | (c << 8) | (b << 16) | (a << 24);\n\t}\n\n\tpublic function getUint32( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar v = getInt32(byteOffset, littleEndian);\n\t\treturn v < 0 ? cast (v + 4294967296.) : v;\n\t}\n\n\tpublic function getFloat32( byteOffset : Int, ?littleEndian : Bool ) : Float {\n\t\treturn haxe.io.FPHelper.i32ToFloat(getInt32(byteOffset,littleEndian));\n\t}\n\n\tpublic function getFloat64( byteOffset : Int, ?littleEndian : Bool ) : Float {\n\t\tvar a = getInt32(byteOffset, littleEndian);\n\t\tvar b = getInt32(byteOffset + 4, littleEndian);\n\t\treturn haxe.io.FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);\n\t}\n\n\tpublic function setInt8( byteOffset : Int, value : Int ) : Void {\n\t\tbuf.a[byteOffset + offset] = (value < 0) ? (value + 128) & 0xFF : value & 0xFF;\n\t}\n\n\tpublic function setUint8( byteOffset : Int, value : Int ) : Void {\n\t\tbuf.a[byteOffset + offset] = value & 0xFF;\n\t}\n\n\tpublic function setInt16( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tsetUint16(byteOffset, value < 0 ? value + 65536 : value, littleEndian);\n\t}\n\n\tpublic function setUint16( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tvar p = byteOffset + offset;\n\t\tif( littleEndian ) {\n\t\t\tbuf.a[p] = value&0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t} else {\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p] = value&0xFF;\n\t\t}\n\t}\n\n\tpublic function setInt32( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tsetUint32(byteOffset, value, littleEndian);\n\t}\n\n\tpublic function setUint32( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tvar p = byteOffset + offset;\n\t\tif( littleEndian ) {\n\t\t\tbuf.a[p++] = value & 0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p++] = (value>>16) & 0xFF;\n\t\t\tbuf.a[p++] = value >>> 24;\n\t\t} else {\n\t\t\tbuf.a[p++] = value >>> 24;\n\t\t\tbuf.a[p++] = (value>>16) & 0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p++] = value & 0xFF;\n\t\t}\n\t}\n\n\tpublic function setFloat32( byteOffset : Int, value : Float, ?littleEndian : Bool ) : Void {\n\t\tsetUint32(byteOffset, haxe.io.FPHelper.floatToI32(value),littleEndian);\n\t}\n\n\tpublic function setFloat64( byteOffset : Int, value : Float, ?littleEndian : Bool ) : Void {\n\t\tvar i64 = haxe.io.FPHelper.doubleToI64(value);\n\t\tif( littleEndian ) {\n\t\t\tsetUint32(byteOffset, i64.low);\n\t\t\tsetUint32(byteOffset, i64.high);\n\t\t} else {\n\t\t\tsetUint32(byteOffset, i64.high);\n\t\t\tsetUint32(byteOffset, i64.low);\n\t\t}\n\t}\n\n\tstatic function __init__() {\n\t\tvar DataView = untyped js.Lib.global.DataView || js.html.compat.DataView;\n\t}\n\n}","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n@:keep\nclass Uint8Array {\n\n\tstatic var BYTES_PER_ELEMENT = 1;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) : Dynamic {\n\t\tvar arr;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = buffer.byteLength - offset;\n\t\t\tif( offset == 0 )\n\t\t\t\tarr = cast @:privateAccess buffer.a;\n\t\t\telse\n\t\t\t\t// here we are losing the fact that we should reference the same data,\n\t\t\t\t// but I don't see another way to have this behaviour while keeping [] access\n\t\t\t\tarr = cast @:privateAccess buffer.a.slice(offset, offset+length);\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Int>).copy();\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO \"+arg1;\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tvar t : Dynamic = untyped __js__(\"this\");\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > t.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tt[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > t.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tt[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar t : Dynamic = untyped __js__(\"this\");\n\t\tvar a = _new(t.slice(start,end));\n\t\ta.byteOffset = start;\n\t\treturn a;\n\t}\n\n\tstatic function __init__() {\n\t\tvar Uint8Array = untyped js.Lib.global.Uint8Array || _new;\n\t}\n\n}","package tusk;\r\n\r\n/**\r\n * Base class for all components.\r\n */\r\n@:autoBuild(tusk.macros.AutoSerializer.apply())\r\n@:autoBuild(tusk.macros.ComponentIndexer.index())\r\n#if editor\r\n@:autoBuild(tusk.macros.ComponentInspector.build())\r\n#end\r\nclass Component {\r\n\t/**\r\n\t * The ID type of the component class\r\n\t */\r\n\tpublic static var tid(default, null):Int = -1;\r\n\r\n\t/**\r\n\t * The ID type of the component's class\r\n\t */\r\n\tpublic var _tid(get, null):Int;\r\n\tpublic function get__tid():Int { return Component.tid; };\r\n\r\n\t/**\r\n\t * Empty constructor\r\n\t */\r\n\tpublic function new() {}\r\n}","package tusk;\r\n\r\nimport tusk.Component;\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\n\r\nclass PromiseComponent extends Component {\r\n\t@:dontSerialize\r\n\tprivate var onDone:Deferred<Bool>;\r\n\t@:dontSerialize\r\n\tpublic var done:Promise<Bool>;\r\n\r\n\tpublic function new() {\r\n\t\tonDone = new Deferred<Bool>();\r\n\t\tdone = onDone.promise();\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic function reset() {\r\n\t\tif(onDone.isResolved()) {\r\n\t\t\tonDone = new Deferred<Bool>();\r\n\t\t\tdone = onDone.promise();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function finish() {\r\n\t\tif(!onDone.isResolved()) onDone.resolve(true);\r\n\t}\r\n}","package tusk.macros;\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\n\r\nusing haxe.macro.ExprTools;\r\n\r\nimport haxe.ds.StringMap;\r\nimport haxe.ds.IntMap;\r\n\r\n/**\r\n * At compile-time, assigns each component module a unique\r\n * integer number (`tid`) so that components can be looked\r\n * up in an `IntMap` rather than a `StringMap`.\r\n */\r\nclass ComponentIndexer {\r\n    private static var nextID:Int = 0;\r\n    private static var componentMap:StringMap<Int> = new StringMap<Int>();\r\n    private static var indexMap:IntMap<String> = new IntMap<String>();\r\n\r\n    /**\r\n     * Index the component. Applied to components using:\r\n     * ```haxe\r\n     * @:autoBuild(tusk.macros.ComponentIndexer.index())\r\n     * ```\r\n     * @return an array of the fields in the class\r\n     */\r\n    macro public static function index():Array<Field> {\r\n        var fields = Context.getBuildFields();\r\n        var name:String = Context.getLocalClass().get().module;\r\n        ensureID(name);\r\n\r\n        // find the tid field\r\n        var staticTIDField:Field = null;\r\n        for(field in fields) {\r\n            if(field.name == \"tid\") {\r\n                staticTIDField = field;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // add the static ID\r\n        if(staticTIDField != null) {\r\n            fields.remove(staticTIDField);\r\n        }\r\n        staticTIDField = {\r\n            pos: Context.currentPos(),\r\n            name: \"tid\",\r\n            meta: [],\r\n            kind: FVar(macro: Int, macro $v{componentMap.get(name)}),\r\n            doc: \"The type ID of the component class.\",\r\n            access: [APublic, AStatic, AInline]\r\n        };\r\n        fields.push(staticTIDField);\r\n\r\n        // override the instance type ID\r\n        fields.push({\r\n            pos: Context.currentPos(),\r\n            name: \"get__tid\",\r\n            meta: [],\r\n            kind: FFun({\r\n                ret: macro: Int,\r\n                params: [],\r\n                expr: macro { return $v{componentMap.get(name)}; },\r\n                args: []\r\n            }),\r\n            doc: \"The type ID of the component's class.\",\r\n            access: [APublic, AOverride]\r\n        });\r\n        return fields;\r\n    }\r\n\r\n    private static function ensureID(name:String) {\r\n        if(!componentMap.exists(name)) {\r\n            componentMap.set(name, nextID);\r\n            indexMap.set(nextID, name);\r\n            //trace(name + ' => ' + nextID);\r\n            nextID++;\r\n        }\r\n    }\r\n\r\n    private static function getCompName(e:Expr):String {\r\n        return switch(e.expr) {\r\n            case EConst(c):\r\n                switch(c) {\r\n                    case CIdent(s): s;\r\n                    default: null;\r\n                }\r\n            case EField(e, field):\r\n                getCompName(e) + \".\" + field;\r\n            default: null;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the integer ID of the given class. Will attempt to find the fully qualified\r\n     * classname (including module).\r\n     * @param e<Class<tusk.Component>> a tusk.Component child class (ex: `SoundComponent`)\r\n     */\r\n    macro public static function ID(e:ExprOf<Class<tusk.Component>>):ExprOf<Int> {\r\n        var compName:String = getCompName(e);\r\n        var t:haxe.macro.Type = Context.getType(compName);\r\n        var name:String = switch(t) {\r\n            case TInst(t, p):\r\n                t.toString();\r\n            default: null;\r\n        }\r\n        ensureID(name);\r\n        return macro $v{componentMap.get(name)};\r\n    }\r\n\r\n\r\n    @:noCompletion\r\n    @:dox(hide)\r\n    macro public static function GetName(e:ExprOf<Int>):Expr {\r\n        // TODO\r\n        /*trace(e);\r\n        trace(macro ${e});\r\n        //var id:Int = $v{e};\r\n        for(name in componentMap.keys()) {\r\n            if(componentMap.get(name) == id) {\r\n                return macro $v{componentMap.get(name)};\r\n            }\r\n        }*/\r\n        //return macro $v{indexMap.get(e)};\r\n        return macro null;\r\n    }\r\n}","package loading;\n\nimport tusk.PromiseComponent;\n\nclass SlamComponent extends PromiseComponent {\n\tpublic var t:Float;\n\tpublic var totalLength:Float;\n\tpublic var easing:Float->Float->Float->Float->Float;\n\n\tpublic var startScale:Float;\n\tpublic var endScale:Float;\n\n\tpublic function new(time:Float, startScale:Float, endScale:Float, ?easing:Float->Float->Float->Float->Float) {\n\t\tthis.t = 0;\n\t\tthis.totalLength = time;\n\t\tthis.startScale = startScale;\n\t\tthis.endScale = endScale;\n\t\tthis.easing = easing == null ? tusk.math.Ease.OutElastic : easing;\n\t\tsuper();\n\t}\n}","package tusk.macros;\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\n\r\n/**\r\n * For automatically adding in variable and property\r\n * serialization as a build macro.\r\n *\r\n * **NOTE**: only public, non-static variables and properties will be serialized!\r\n *\r\n * @see https://github.com/Masadow/HaxeSerializer\r\n */\r\n@:noCompletion class AutoSerializer {\r\n    /**\r\n     * Run the auto serializer on the class. Used automatically on all components with:\r\n     * ```haxe\r\n     * @:autoBuild(tusk.macros.AutoSerializer.apply())\r\n     * ```\r\n     * @return an array of the fields in the class\r\n     */\r\n    macro public static function apply():Array<Field> {\r\n        var pos = Context.currentPos();\r\n        var fields = Context.getBuildFields();\r\n\r\n        // collect all the public, non-stance variables and properties\r\n        // and record their `s.serialize(fielName)` and `fieldName = u.unserialize()` calls\r\n        var serializers:Array<Expr> = new Array<Expr>();\r\n        var unserializers:Array<Expr> = new Array<Expr>();\r\n        for(field in fields) {\r\n            /*if((field.kind == FieldType.FProp || field.kind == FieldType.FVar)\r\n               && (field.access != null\r\n               && field.access.indexOf(Access.APublic) > -1\r\n               && field.access.indexOf(Access.AStatic) == -1\r\n               && field.access.indexOf(Access.APrivate) == -1)) {\r\n                var fieldName = field.name;\r\n                serializers.push(macro s.serialize($i{fieldName}));\r\n                unserializers.push(macro $i{fieldName} = u.unserialize());\r\n            }*/\r\n            var doSerialize = true;\r\n            for(entry in field.meta) {\r\n                if(entry != null && entry.name == \":dontSerialize\") {\r\n                    doSerialize = false;\r\n                    break;\r\n                }\r\n            }\r\n            if(!doSerialize) {\r\n                continue;\r\n            }\r\n\r\n            var kindOk:Bool = true;\r\n            switch(field.kind) {\r\n                case FVar(t, eo): kindOk = true;\r\n                case FProp(get , set, t, eo): kindOk = true;\r\n                default: kindOk = false;\r\n            }\r\n\r\n            if(   doSerialize\r\n               && kindOk\r\n               && field.access != null\r\n               && field.access.indexOf(Access.APublic) > -1\r\n               && field.access.indexOf(Access.AStatic) == -1\r\n               && field.access.indexOf(Access.APrivate) == -1) {\r\n                var fieldName = field.name;\r\n                serializers.push(macro s.serialize($i{fieldName}));\r\n                unserializers.push(macro $i{fieldName} = u.unserialize());\r\n            }\r\n        }\r\n\r\n        var serializeFunctionExists:Bool = false;\r\n        var unSerializeFunctionExists:Bool = false;\r\n        /*for(field in fields) {\r\n            if(field.name == 'hxSerialize') {\r\n                serializeFunctionExists = true;\r\n            }\r\n            else if(field.name == 'hxUnserialize') {\r\n                unSerializeFunctionExists = true;\r\n            }\r\n        }*/\r\n        if(Context.getLocalClass().get().superClass.t.get().name == 'PromiseComponent') {\r\n            serializeFunctionExists = true;\r\n            unSerializeFunctionExists = true;\r\n        }\r\n\r\n        // add the hxSerialize field\r\n        var hxSerialize:FieldType = FFun({\r\n            ret: null,\r\n            params: [],\r\n            expr: {\r\n                pos: pos,\r\n                expr: EBlock(serializers)\r\n            },\r\n            args: [{\r\n                value: null,\r\n                type: macro: haxe.Serializer,\r\n                opt: false,\r\n                name: \"s\"\r\n            }]\r\n        });\r\n        fields.push({\r\n            pos: pos,\r\n            name: \"hxSerialize\",\r\n            meta: [],\r\n            kind: hxSerialize,\r\n            doc: null,\r\n            access: serializeFunctionExists ? [APublic, AOverride] : [APublic]\r\n        });\r\n\r\n        // add the hxUnserialize field\r\n        var hxUnserialize:FieldType = FFun({\r\n            ret: null,\r\n            params: [],\r\n            expr: {\r\n                pos: pos,\r\n                expr: EBlock(unserializers)\r\n            },\r\n            args: [{\r\n                value: null,\r\n                type: macro: haxe.Unserializer,\r\n                opt: false,\r\n                name: \"u\"\r\n            }]\r\n        });\r\n        fields.push({\r\n            pos: pos,\r\n            name: \"hxUnserialize\",\r\n            meta: [],\r\n            kind: hxSerialize,\r\n            doc: null,\r\n            access: unSerializeFunctionExists ? [APublic, AOverride] : [APublic]\r\n        });\r\n\r\n        return fields;\r\n    }\r\n}","package tusk;\r\n\r\nimport tusk.events.*;\r\n\r\nimport haxe.Serializer;\r\nimport haxe.Unserializer;\r\n\r\n/**\r\n * Base class for all processors ('systems')\r\n */\r\n@:autoBuild(tusk.macros.EventConnector.connect())\r\nclass Processor {\r\n\tpublic var entities:Array<Entity>;\r\n\r\n\t/**\r\n\t * The processor's matcher\r\n\t */\r\n\tpublic var matcher(default, null):Matcher;\r\n\r\n\t/**\r\n\t * Whether or not the processor is currently enabled\r\n\t */\r\n\tpublic var enabled(default, set):Bool = true;\r\n\tfunction set_enabled(enabled:Bool):Bool {\r\n\t\tif(this.enabled != enabled) {\r\n\t\t\tthis.enabled = enabled;\r\n\t\t\tif(this.enabled) {\r\n\t\t\t\tonEnabled();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tonDisabled();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.enabled;\r\n\t}\r\n\r\n\t/**\r\n\t * These will be replaced by a macro\r\n\t */\r\n\t@:dox(hide)\r\n\tpublic function ___connectRoutes() {}\r\n\t@:dox(hide)\r\n\tpublic function ___disconnectRoutes() {}\r\n\r\n\t/**\r\n\t * Create a new processor with the given matcher\r\n\t * @param  entities a list of all current entities in the game\r\n\t */\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tif(entities != null) {\r\n\t\t\tthis.entities = matcher.matchEntities(entities);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.entities = new Array<Entity>();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Override to hook into the event sent when this processor is re-enabled\r\n\t */\r\n\tpublic function onEnabled():Void {}\r\n\r\n\t/**\r\n\t * Override to hook into the event sent when this processor is disabled\r\n\t */\r\n\tpublic function onDisabled():Void {}\r\n\r\n\t/**\r\n\t * Override this to hook into the event when the game changes an entity\r\n\t * @param  entity                  the entity that was changed\r\n\t * @param  event.ChangeEvent       the event describing the change\r\n\t */\r\n\tpublic function onEntityChanged(entity:Entity, event:Entity.ChangeEvent):Void {}\r\n\r\n\t/**\r\n\t * Override to hook into when the application is ready\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onStart(event:StartEvent) {}\r\n\r\n\t/**\r\n\t * Override to hook into when the application is being destroyed\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onDestroy(event:DestroyEvent) {}\r\n\r\n\t/**\r\n\t * Override to hook into when the application's timer updates\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onUpdate(event:UpdateEvent) {}\r\n\r\n\t/**\r\n\t * Override to hook into the render function\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onRender(event:RenderEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when a key is pressed\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onKeyDown(event:KeyEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when a key is released\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onKeyUp(event:KeyEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when a mouse button is pressed\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onMouseDown(event:MouseButtonEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when a mouse button is released\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onMouseUp(event:MouseButtonEvent) {}\r\n\r\n\t/**\r\n\t * Override to react to when the mouse is moved\r\n\t * @param  event The event supplied by the event caller\r\n\t */\r\n\tpublic function onMouseMove(event:MouseMoveEvent) {}\r\n\r\n\t/**\r\n\t * Called by the haxe serializer when serializing.\r\n\t * @param the haxe serializer\r\n\t */\r\n\t@:keep\r\n\tfunction hxSerialize(s:Serializer) {\r\n\t\ts.serialize(enabled);\r\n\t}\r\n\r\n\t/**\r\n\t * Called by the haxe serializer when unserializing.\r\n\t * @param the haxe unserializer\r\n\t */\r\n\t@:keep\r\n\tfunction hxUnserialize(u:Unserializer) {\r\n\t\tenabled = u.unserialize();\r\n\t}\r\n}","package loading;\n\nimport tusk.debug.Log;\nimport tusk.Matcher;\nimport tusk.Processor;\nimport tusk.Entity;\nimport tusk.events.UpdateEvent;\nimport tusk.lib.comp.TransformComponent;\n\nclass SlamProcessor extends Processor {\n\tpublic function new(?entities:Array<Entity>) {\n\t\tmatcher = new Matcher().include(TransformComponent.tid).include(SlamComponent.tid);\n\t\tsuper(entities);\n\t}\n\t\n\toverride public function onUpdate(data:UpdateEvent):Void {\n\t\tfor(entity in entities) {\n\t\t\tvar t:TransformComponent = cast entity.get(TransformComponent.tid);\n\t\t\tvar s:SlamComponent = cast entity.get(SlamComponent.tid);\n\n\t\t\t// skip completed slams\n\t\t\tif(s.done.isResolved()) continue;\n\n\t\t\t// move the slam along\n\t\t\ts.t += data.dt;\n\t\t\tif(s.t >= s.totalLength) {\n\t\t\t\ts.t = s.totalLength;\n\t\t\t\ts.finish();\n\t\t\t}\n\n\t\t\t// update the scale\n\t\t\tt.lastScale.copy(t.scale);\n\t\t\tt.scale.x = s.easing(s.t, s.startScale, s.endScale - s.startScale, s.totalLength);\n\t\t\tt.scale.y = t.scale.x;\n\t\t\tt.scale.z = t.scale.x;\n\t\t}\n\t}\n}","package loading;\n\nimport tusk.PromiseComponent;\nimport glm.Vec3;\n\nclass SlideComponent extends PromiseComponent {\n\tpublic var t:Float;\n\tpublic var totalLength:Float;\n\tpublic var easing:Float->Float->Float->Float->Float;\n\n\tpublic var startPos:Vec3;\n\tpublic var endPos:Vec3;\n\n\tpublic function new(time:Float, startPos:Vec3, endPos:Vec3, ?easing:Float->Float->Float->Float->Float) {\n\t\tthis.t = 0;\n\t\tthis.totalLength = time;\n\t\tthis.startPos = startPos;\n\t\tthis.endPos = endPos;\n\t\tthis.easing = easing == null ? tusk.math.Ease.OutElastic : easing;\n\t\tsuper();\n\t}\n}","package loading;\n\nimport tusk.debug.Log;\nimport tusk.Matcher;\nimport tusk.Processor;\nimport tusk.Entity;\nimport tusk.events.UpdateEvent;\nimport tusk.lib.comp.TransformComponent;\n\nclass SlideProcessor extends Processor {\n\tpublic function new(?entities:Array<Entity>) {\n\t\tmatcher = new Matcher().include(TransformComponent.tid).include(SlideComponent.tid);\n\t\tsuper(entities);\n\t}\n\t\n\toverride public function onUpdate(data:UpdateEvent):Void {\n\t\tfor(entity in entities) {\n\t\t\tvar t:TransformComponent = cast entity.get(TransformComponent.tid);\n\t\t\tvar s:SlideComponent = cast entity.get(SlideComponent.tid);\n\n\t\t\t// skip completed slams\n\t\t\tif(s.done.isResolved()) continue;\n\n\t\t\t// move the slam along\n\t\t\ts.t += data.dt;\n\t\t\tif(s.t >= s.totalLength) {\n\t\t\t\ts.t = s.totalLength;\n\t\t\t\ts.finish();\n\t\t\t}\n\n\t\t\t// update the position\n\t\t\tt.lastPosition.copy(t.position);\n\t\t\tt.position.x = s.easing(s.t, s.startPos.x, s.endPos.x - s.startPos.x, s.totalLength);\n\t\t\tt.position.y = s.easing(s.t, s.startPos.y, s.endPos.y - s.startPos.y, s.totalLength);\n\t\t\tt.position.z = s.easing(s.t, s.startPos.z, s.endPos.z - s.startPos.z, s.totalLength);\n\t\t}\n\t}\n}","package minigames;\n\nimport tusk.debug.Log;\nimport tusk.lib.comp.Camera2DComponent;\nimport tusk.lib.comp.MaterialComponent;\nimport tusk.lib.comp.TransformComponent;\nimport tusk.lib.proc.Camera2DProcessor;\nimport tusk.lib.proc.MaterialProcessor;\nimport tusk.lib.proc.Renderer2DProcessor;\nimport tusk.lib.proc.TransformProcessor;\nimport tusk.Tusk;\nimport tusk.Scene;\nimport tusk.Entity;\nimport tusk.resources.*;\nimport tusk.lib.comp.TextComponent;\nimport tusk.lib.comp.*;\nimport tusk.lib.proc.*;\n\nimport tusk.modules.tiled.TileMap;\n\nimport promhx.Deferred;\nimport promhx.Promise;\nimport promhx.Stream;\n\nimport glm.Vec2;\nimport glm.Vec3;\nimport glm.Quat;\nimport glm.Vec4;\n\nimport minigames.bottlerocket.*;\n\nimport tusk.events.*;\n\nclass BottleRocket extends Scene {\n\tpublic function new() {\n\t\tsuper('BottleRocket');\n\t}\n\n\tprivate var quad:Mesh;\n\tprivate var particlesMaterial:Material;\n\tprivate var backgroundMaterial:Material;\n\tprivate var spriteMaterial:Material;\n\tprivate var backgroundTileMap:TileMap;\n\tprivate var backgroundMesh:Mesh;\n\tprivate var controlsMaterial:Material;\n\n\tprivate var textMesh:Mesh;\n\tprivate var font:Font;\n\tprivate var fontMat:Material;\n\n\tprivate var circleOutMat:Material;\n\n\tprivate var countdownMusic:Sound;\n\tprivate var pumpMusic:Sound;\n\tprivate var winMusic:Sound;\n\tprivate var whooshSound:Sound;\n\n\tprivate function loadAssets():Promise<Scene> {\n\t\tvar def:Deferred<Scene> = new Deferred<Scene>();\n\t\tvar prom:Promise<Scene> = def.promise();\n\n\t\t// load assets!\n\t\tPromise.when(\n\t\t\ttusk.defaults.Primitives.loadQuad(),\n\t\t\ttusk.defaults.Materials.loadParticlesUntextured(),\n\t\t\tSpriteMaterial.load(),\n\t\t\tBackgroundMaterial.load(),\n\t\t\tTusk.assets.loadTexture(tusk.Files.sprites___bottlerocket__png),\n\t\t\tTusk.assets.loadTexture(tusk.Files.tilemaps___bottlerocketbackground__png),\n\t\t\tTusk.assets.loadText(tusk.Files.tilemaps___bottlerocketbackground__json),\n\t\t\tTusk.assets.loadTexture(tusk.Files.sprites___bottlerocketcontrols__png),\n\t\t\ttusk.defaults.Materials.loadUnlitTextured(),\n\t\t\ttusk.defaults.Primitives.loadTextMesh(),\n\t\t\ttusk.defaults.Fonts.loadSubatomic_Screen(),\n\t\t\ttusk.defaults.Materials.loadTextBasic(),\n\t\t\ttusk.defaults.Materials.loadEffectCircleOut(),\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___countdown__ogg),\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___bottlerocketpump__ogg),\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___wintrumpet__ogg),\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___bottlerocketwhoosh__ogg)\n\t\t).then(function(quad:Mesh, particlesMaterial:Material, spriteMaterial:Material, backgroundMaterial:Material, spriteSheet:Texture, backgroundSheet:Texture, backgroundJSON:Text, controls:Texture, unlitTextured:Material, textMesh:Mesh, font:Font, fontMat:Material, circleOutMat:Material, countdownMusic:Sound, pumpMusic:Sound, winMusic:Sound, whooshSound:Sound) {\n\t\t\tthis.quad = quad;\n\t\t\tthis.particlesMaterial = particlesMaterial;\n\n\t\t\tthis.circleOutMat = circleOutMat;\n\n\t\t\tthis.textMesh = textMesh;\n\t\t\tthis.font = font;\n\t\t\tthis.fontMat = fontMat;\n\t\t\tthis.fontMat.textures = new Array<Texture>();\n\t\t\tthis.fontMat.textures.push(font.texture);\n\n\t\t\tthis.controlsMaterial = unlitTextured;\n\t\t\tthis.controlsMaterial.textures = new Array<Texture>();\n\t\t\tthis.controlsMaterial.textures.push(controls);\n\n\t\t\tthis.spriteMaterial = spriteMaterial;\n\t\t\tthis.spriteMaterial.textures = new Array<Texture>();\n\t\t\tthis.spriteMaterial.textures.push(spriteSheet);\n\n\t\t\tthis.backgroundMaterial = backgroundMaterial;\n\t\t\tthis.backgroundMaterial.textures = new Array<Texture>();\n\t\t\tthis.backgroundMaterial.textures.push(backgroundSheet);\n\n\t\t\tthis.countdownMusic = countdownMusic;\n\t\t\tthis.pumpMusic = pumpMusic;\n\t\t\tthis.winMusic = winMusic;\n\t\t\tthis.whooshSound = whooshSound;\n\n\t\t\tbackgroundTileMap = TileMap.fromJSON(backgroundJSON.text);\n\t\t\tTileMap.buildMesh(backgroundTileMap, 'tilemap.bottlerocket').then(function(mesh:Mesh) {\n\t\t\t\tbackgroundMesh = mesh;\n\t\t\t\tdef.resolve(this);\n\t\t\t});\n\t\t}).catchError(function(err:Dynamic) {\n\t\t\tLog.error(err);\n\t\t\tdef.throwError('Failed to load assets!');\n\t\t});\n\n\t\treturn prom;\n\t}\n\n\toverride public function onLoad(event:LoadEvent) {\n\t\tif(event.scene != this) return;\n\t\tLog.info(\"Loading bottle rocket scene..\");\n\n\t\tvar loadComplete:Promise<Scene> = loadAssets();\n\t\tvar loadingScreen:LoadingScreen = new LoadingScreen('Bottle Rocket Blast!', loadComplete);\n\t\tTusk.pushScene(loadingScreen);\n\t\tPromise.when(loadingScreen.sceneDone.promise(), loadComplete).then(function(_, _) {\n\t\t\tTusk.removeScene(loadingScreen);\n\t\t\tCamera2DProcessor.cameras = new Array<Camera2DComponent>();\n\t\t\t// start the game!\n\t\t\tLog.info('Starting bottle rocket!');\n\n\t\t\tthis.useProcessor(new VelocityProcessor());\n\t\t\tthis.useProcessor(new TimedPromiseProcessor());\n\t\t\tthis.useProcessor(new TimerDisplayProcessor());\n\t\t\tthis.useProcessor(new PumpProcessor());\n\t\t\tthis.useProcessor(new MeshProcessor());\n\t\t\tthis.useProcessor(new MaterialProcessor());\n\t\t\tthis.useProcessor(new Camera2DProcessor());\n\t\t\tthis.useProcessor(new TransformTrackerProcessor());\n\t\t\tthis.useProcessor(new TransformProcessor());\n\t\t\tthis.useProcessor(new TextProcessor());\n\t\t\tthis.useProcessor(new Renderer2DProcessor(new Vec4(110, 175, 231, 255) / 255));\n\t\t\tthis.useProcessor(new CircleEffectRendererProcessor());\n\t\t\tthis.useProcessor(new SoundProcessor());\n\n\t\t\t// create the camera\n\t\t\tvar w:Float = Tusk.instance.app.window.width;\n\t\t\tvar h:Float = Tusk.instance.app.window.height;\n\t\t\tvar camera:Entity = new Entity(this, 'Camera', [\n\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0), Quat.identity(), new Vec3(1, 1, 1)),\n\t\t\t\tnew Camera2DComponent(new Vec2(w, h) / -2.0, new Vec2(w, h) / 2.0, -100, 100)\n\t\t\t]);\n\t\t\tentities.push(camera);\n\n\t\t\t// the tilemap in the background\n\t\t\tentities.push(new Entity(this, 'TileMap', [\n\t\t\t\tnew TransformComponent(new Vec3((backgroundTileMap.width * backgroundTileMap.tilewidth * 2) / -2,\n\t\t\t\t\tTusk.game.height / -2 - (backgroundTileMap.tileheight * 2 * 2), 0), Quat.identity(), new Vec3(2, 2, 2)),\n\t\t\t\tnew MeshComponent(backgroundMesh),\n\t\t\t\tnew MaterialComponent(backgroundMaterial)\n\t\t\t]));\n\n\t\t\tvar groundY:Float = (Tusk.game.height / -2) + (2 * backgroundTileMap.tileheight);\n\n\t\t\t// create the pump base\n\t\t\tvar pumpBaseMesh:Mesh = quad.clone('br.pumpbasemesh');\n\t\t\tfor(uv in pumpBaseMesh.uvs) {\n\t\t\t\tuv.y = uv.y / 2 + 0.5;\n\t\t\t}\n\t\t\t// create the pump\n\t\t\tvar pumpMesh:Mesh = quad.clone('br.pumpmesh');\n\t\t\tfor(uv in pumpMesh.uvs) {\n\t\t\t\tuv.x = uv.x / 2 + 0.5;\n\t\t\t\tuv.y /= 2;\n\t\t\t}\n\t\t\t// create the bottleRocket\n\t\t\tvar bottleRocketMesh:Mesh = quad.clone('br.bottleRocketmesh');\n\t\t\tfor(uv in bottleRocketMesh.uvs) {\n\t\t\t\tuv.x /= 2;\n\t\t\t\tuv.y /= 2;\n\t\t\t}\n\t\t\t/*var red:Vec3 = new Vec3(205, 53, 23) / 255;\n\t\t\tvar yellow:Vec3 = new Vec3(238, 196, 49) / 255;*/\n\n\t\t\tentities.push(new Entity(this, 'P1 Pump Base', [\n\t\t\t\tnew TransformComponent(new Vec3(-256, groundY + 128, -1), Quat.identity(), new Vec3(-256, 128, 128)),\n\t\t\t\tnew MeshComponent(pumpBaseMesh),\n\t\t\t\tnew MaterialComponent(spriteMaterial),\n\t\t\t\tnew CustomUniformsComponent(function() {\n\t\t\t\t\tspriteMaterial.setVec3('colour', GameTracker.player[0].colour);\n\t\t\t\t})\n\t\t\t]));\n\t\t\tentities.push(new Entity(this, 'P2 Pump Base', [\n\t\t\t\tnew TransformComponent(new Vec3(256, groundY + 128, -1), Quat.identity(), new Vec3(256, 128, 128)),\n\t\t\t\tnew MeshComponent(pumpBaseMesh),\n\t\t\t\tnew MaterialComponent(spriteMaterial),\n\t\t\t\tnew CustomUniformsComponent(function() {\n\t\t\t\t\tspriteMaterial.setVec3('colour', GameTracker.player[1].colour);\n\t\t\t\t})\n\t\t\t]));\n\n\t\t\t// create the actual pumps\n\t\t\t// top: 72\n\t\t\t// bottom: 0\n\t\t\tvar p1PumpEntity:Entity = new Entity(this, 'P1 Pump', [\n\t\t\t\tnew TransformComponent(new Vec3(-300, groundY + 128 + 72, -0.5), Quat.identity(), new Vec3(128, 128, 128)),\n\t\t\t\tnew MeshComponent(pumpMesh),\n\t\t\t\tnew MaterialComponent(spriteMaterial)\n\t\t\t]);\n\t\t\tentities.push(p1PumpEntity);\n\t\t\tvar p2PumpEntity:Entity = new Entity(this, 'P2 Pump', [\n\t\t\t\tnew TransformComponent(new Vec3(320, groundY + 128 + 72, -0.5), Quat.identity(), new Vec3(128, 128, 128)),\n\t\t\t\tnew MeshComponent(pumpMesh),\n\t\t\t\tnew MaterialComponent(spriteMaterial),\n\t\t\t]);\n\t\t\tentities.push(p2PumpEntity);\n\n\t\t\t// create the bottle rockets\n\t\t\tvar p1RocketTransform:TransformComponent = new TransformComponent(new Vec3(-192, groundY + 128 + 8, -0.75), Quat.identity(), new Vec3(128, 128, 128));\n\t\t\tvar p1Rocket:Entity = new Entity(this, 'P1 Rocket', [\n\t\t\t\tp1RocketTransform,\n\t\t\t\tnew MeshComponent(bottleRocketMesh),\n\t\t\t\tnew MaterialComponent(spriteMaterial),\n\t\t\t\tnew CustomUniformsComponent(function() {\n\t\t\t\t\tspriteMaterial.setVec3('colour', GameTracker.player[0].colour);\n\t\t\t\t})\n\t\t\t]);\n\t\t\tentities.push(p1Rocket);\n\t\t\tvar p2RocketTransform:TransformComponent = new TransformComponent(new Vec3(192, groundY + 128 + 8, -0.75), Quat.identity(), new Vec3(128, 128, 128));\n\t\t\tvar p2Rocket:Entity = new Entity(this, 'P2 Rocket', [\n\t\t\t\tp2RocketTransform,\n\t\t\t\tnew MeshComponent(bottleRocketMesh),\n\t\t\t\tnew MaterialComponent(spriteMaterial),\n\t\t\t\tnew CustomUniformsComponent(function() {\n\t\t\t\t\tspriteMaterial.setVec3('colour', GameTracker.player[1].colour);\n\t\t\t\t})\n\t\t\t]);\n\t\t\tentities.push(p2Rocket);\n\n\t\t\t// show the controls\n\t\t\t/*var controlsEntity:Entity = new Entity(this, 'Controls', [\n\t\t\t\tnew TransformComponent(new Vec3(0, -180, 0), Quat.identity(), new Vec3(128, 128, 128)),\n\t\t\t\tnew MeshComponent(quad),\n\t\t\t\tnew MaterialComponent(controlsMaterial)\n\t\t\t]);\n\t\t\tentities.push(controlsEntity);*/\n\n\t\t\tvar p1Pump:PumpComponent;\n\t\t\tvar p2Pump:PumpComponent;\n\n\t\t\tentities.push(new Entity(this, 'Countdown Music', [\n\t\t\t\tnew SoundComponent(countdownMusic.path, true)\n\t\t\t]));\n\n\t\t\t// start the countdown!\n\t\t\tvar countdownText:TextComponent = new TextComponent(font, '3',\n\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\n\t\t\t\t\tnew Vec4(1, 1, 1, 1));\n\t\t\tvar countdownTimer:TimedPromiseComponent = new TimedPromiseComponent(1.0);\n\t\t\tvar countdownTransform:TransformComponent = new TransformComponent(new Vec3(0, 0, -0.99), Quat.identity(), new Vec3(8, 8, 8));\n\t\t\tvar countdownEntity:Entity = new Entity(this, 'Countdown', [\n\t\t\t\tcountdownTransform,\n\t\t\t\tnew MeshComponent(textMesh.clone('br.countdowntextmesh')),\n\t\t\t\tnew MaterialComponent(fontMat.path),\n\t\t\t\tcountdownText,\n\t\t\t\tcountdownTimer\n\t\t\t]);\n\t\t\tentities.push(countdownEntity);\n\t\t\tvar p1V:VelocityComponent;\n\t\t\tvar p2V:VelocityComponent;\n\t\t\tvar pumpSound:SoundComponent;\n\t\t\tcountdownTimer.done.pipe(function(_) {\n\t\t\t\tcountdownText.text = '2';\n\t\t\t\tcountdownTimer.t = 0;\n\t\t\t\tcountdownTimer.reset();\n\t\t\t\treturn countdownTimer.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\tcountdownText.text = '1';\n\t\t\t\tcountdownTimer.t = 0;\n\t\t\t\tcountdownTimer.reset();\n\t\t\t\treturn countdownTimer.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\tcountdownText.text = 'Go!';\n\t\t\t\tp1Pump = new PumpComponent(0, groundY + 128 + 72);\n\t\t\t\tp1PumpEntity.push(p1Pump);\n\t\t\t\tp2Pump = new PumpComponent(1, groundY + 128 + 72);\n\t\t\t\tp2PumpEntity.push(p2Pump);\n\n\t\t\t\t// in a second, start displaying the time left\n\t\t\t\thaxe.Timer.delay(function() {\n\t\t\t\t\t// add the pump sound\n\t\t\t\t\tpumpSound = new SoundComponent(pumpMusic.path, true);\n\t\t\t\t\tentities.push(new Entity(this, 'PumpSound', [pumpSound]));\n\t\t\t\t\tcountdownEntity.push(new TimerDisplayComponent());\n\t\t\t\t}, 1000);\n\n\t\t\t\t// start the pump timer\n\t\t\t\tcountdownTimer.t = 0;\n\t\t\t\tcountdownTimer.wait = 10;\n\t\t\t\tcountdownTimer.reset();\n\t\t\t\treturn countdownTimer.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\t// stop pumping!\n\t\t\t\t//Tusk.removeEntity(controlsEntity);\n\t\t\t\tp1PumpEntity.removeType(PumpComponent.tid);\n\t\t\t\tp2PumpEntity.removeType(PumpComponent.tid);\n\t\t\t\tcountdownEntity.removeType(TimerDisplayComponent.tid);\n\t\t\t\t\n\t\t\t\tcountdownTimer.t = 0;\n\t\t\t\tcountdownTimer.wait = 1;\n\t\t\t\tcountdownTimer.reset();\n\t\t\t\treturn countdownTimer.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\tpumpSound.stop = true;\n\t\t\t\tcountdownText.text = 'Launch!';\n\t\t\t\tp1V = new VelocityComponent(p1Pump.pressure * 512, p1RocketTransform.position.y);\n\t\t\t\tp2V = new VelocityComponent(p2Pump.pressure * 512, p2RocketTransform.position.y);\n\t\t\t\tp1Rocket.push(p1V);\n\t\t\t\tp2Rocket.push(p2V);\n\t\t\t\tcamera.push(new TransformTrackerComponent(p1RocketTransform, p2RocketTransform));\n\t\t\t\tentities.push(new Entity(this, '', [new SoundComponent(whooshSound.path, true)]));\n\n\t\t\t\tvar def:Deferred<Bool> = new Deferred<Bool>();\n\t\t\t\tPromise.when(p1V.done, p2V.done).then(function(_, _) { def.resolve(true); });\n\t\t\t\treturn def.promise();\n\t\t\t}).pipe(function(_) {\n\t\t\t\t// figure out who won\n\t\t\t\tvar winner:Int = -1;\n\t\t\t\tif(p1V.maxHeight > p2V.maxHeight) winner = 0;\n\t\t\t\telse if(p2V.maxHeight > p1V.maxHeight) winner = 1;\n\n\t\t\t\tcountdownTransform.scale.set(4, 4, 4);\n\t\t\t\tcountdownTransform.lastScale.copy(countdownTransform.scale);\n\t\t\t\tif(winner >= 0) {\n\t\t\t\t\tcountdownText.text = GameTracker.player[winner].name + ' wins!';\n\t\t\t\t\tGameTracker.player[winner].score += 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcountdownText.text = 'Tie!';\n\t\t\t\t}\n\n\t\t\t\tentities.push(new Entity(this, 'WinMusic', [new SoundComponent(winMusic.path, true)]));\n\t\t\t\t\n\t\t\t\t// remove the velocity components\n\t\t\t\tp1Rocket.removeType(VelocityComponent.tid);\n\t\t\t\tp2Rocket.removeType(VelocityComponent.tid);\n\n\t\t\t\t// reset the time\n\t\t\t\tcountdownTimer.t = 0;\n\t\t\t\tcountdownTimer.wait = 3;\n\t\t\t\tcountdownTimer.reset();\n\t\t\t\treturn countdownTimer.done;\n\t\t\t}).pipe(function(_) {\n\t\t\t\t// circle out\n\t\t\t\tvar cec:CircleEffectComponent = new CircleEffectComponent(false);\n\t\t\t\tentities.push(new Entity(this, 'Circle Effect', [\n\t\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0.1), Quat.identity(), new Vec3(1024, 1024, 1024)),\n\t\t\t\t\tnew MeshComponent(quad.path),\n\t\t\t\t\tnew MaterialComponent(circleOutMat.path),\n\t\t\t\t\tcec\n\t\t\t\t]));\n\t\t\t\treturn cec.done;\n\t\t\t}).then(function(_) {\n\t\t\t\tsceneDone.resolve(this);\n\t\t\t});\n\t\t});\n\t}\n}","package minigames;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.lib.comp.Camera2DComponent;\r\nimport tusk.lib.comp.MaterialComponent;\r\nimport tusk.lib.comp.TransformComponent;\r\nimport tusk.lib.proc.Camera2DProcessor;\r\nimport tusk.lib.proc.MaterialProcessor;\r\nimport tusk.lib.proc.Renderer2DProcessor;\r\nimport tusk.lib.proc.TransformProcessor;\r\nimport tusk.Tusk;\r\nimport tusk.Scene;\r\nimport tusk.Entity;\r\nimport tusk.resources.*;\r\nimport tusk.lib.comp.TextComponent;\r\nimport tusk.lib.comp.*;\r\nimport tusk.lib.proc.*;\r\n\r\nimport tusk.modules.tiled.TileMap;\r\n\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\nimport promhx.Stream;\r\n\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\nimport glm.Quat;\r\nimport glm.Vec4;\r\n\r\nimport tusk.events.*;\r\n\r\nimport minigames.captainknowitall.*;\r\n\r\nclass Question {\r\n\tpublic var question:String;\r\n\tpublic var correctAnswer:String;\r\n\tpublic var wrongAnswer:String;\r\n\r\n\tpublic function new(question:String, correctAnswer:String, wrongAnswer:String) {\r\n\t\tthis.question = question;\r\n\t\tthis.correctAnswer = correctAnswer;\r\n\t\tthis.wrongAnswer = wrongAnswer;\r\n\t}\r\n}\r\n\r\nclass CaptainKnowItAll extends Scene {\r\n\tpublic function new() {\r\n\t\tsuper('CaptainKnowItAll');\r\n\t}\r\n\r\n\tprivate var questionNumber:Int = 0;\r\n\tprivate var questions:Array<Question> = [\r\n\t\tnew Question('How tall is Mount Everest?', '8,848 m', '11,426 m'),\r\n\t\tnew Question('How hot is the sun?', '5,778 K', '4,923 K'),\r\n\t\tnew Question('What is the population of Canada?', '35 million', '45 million'),\r\n\t\tnew Question('How far away is the moon?', '384 Mm', '229 Mm'),\r\n\t\tnew Question('How many days are in May?', '31', '30'),\r\n\t\tnew Question('Where is the hottest place on Earth?', 'Al Aziziyah', 'Death Valley'),\r\n\t\tnew Question('What year did the titanic sink?', '1912', '1914'),\r\n\t\tnew Question('How many Earths can fit into the sun?', '1.3 million', '6.9 million'),\r\n\t\tnew Question('What year was Elton John born?', '1947', '1952'),\r\n\t\tnew Question('Where is the coldest place on earth?', 'Antarctica', 'The North Pole'),\r\n\t\tnew Question('What is 6 x 7?', '42', '47'),\r\n\t\tnew Question('Who is the fastest man in the world?', 'Usain Bolt', 'Tyson Gay'),\r\n\t\tnew Question('What element begins with the letter \\'K\\'?', 'Potassium', 'Krypton'),\r\n\t\tnew Question('Who painted the Mona Lisa?', 'Da Vinci', 'Michelangelo'),\r\n\t\tnew Question('Who painted the Sistine Chapel?', 'Michelangelo', 'Da Vinci'),\r\n\t\tnew Question('Who wrote the James Bond books?', 'Ian Fleming', 'Arthur Conan Doyle'),\r\n\t\tnew Question('Who sang \"My Way\"?', 'Frank Sinatra', 'Dean Martin'),\r\n\t\tnew Question('What\\'s the capital of Scotland?', 'Edinburgh', 'Glasgow'),\r\n\t\tnew Question('Which is the smallest ocean?', 'Artic', 'Indian'),\r\n\t\tnew Question('Can Queen Elizabeth the Second vote?', 'No', 'Yes'),\r\n\t\tnew Question('Where was Christopher Columbus born?', 'Italy', 'Spain'),\r\n\t\tnew Question('Who starts first in chess?', 'White', 'Black'),\r\n\t\tnew Question('Which planet is nearest the sun?', 'Mercury', 'Venus'),\r\n\t\tnew Question('What does the roman numeral C represent?', '100', '1000'),\r\n\t\tnew Question('Where is St. Paul\\'s Cathedral?', 'London', 'Rome'),\r\n\t\tnew Question('Which country has the longest coastline?', 'Canada', 'Russia'),\r\n\t\tnew Question('Which is bigger?', 'Jupiter', 'Saturn'),\r\n\t\tnew Question('How many planets are in our solar system?', 'Eight', 'Nine'),\r\n\t\tnew Question('What colour is Yoda?', 'Green', 'Peach')\r\n\t];\r\n\tprivate var questionDoneDef:Deferred<Bool> = new Deferred<Bool>();\r\n\tprivate var questionDone:Stream<Bool>;\r\n\tpublic static var aIsCorrect:Bool;\r\n\r\n\tprivate var quad:Mesh;\r\n\tprivate var particlesMaterial:Material;\r\n\r\n\tprivate var textMesh:Mesh;\r\n\tprivate var font:Font;\r\n\tprivate var fontMat:Material;\r\n\r\n\tprivate var circleOutMat:Material;\r\n\r\n\tprivate var countdownMusic:Sound;\r\n\r\n\tprivate var bgMaterial:Material;\r\n\r\n\tprivate var loadingCrunch:Sound;\r\n\tprivate var winMusic:Sound;\r\n\r\n\tprivate function loadAssets():Promise<Scene> {\r\n\t\tvar def:Deferred<Scene> = new Deferred<Scene>();\r\n\t\tvar prom:Promise<Scene> = def.promise();\r\n\r\n\t\t// load assets!\r\n\t\tPromise.when(\r\n\t\t\ttusk.defaults.Primitives.loadQuad(),\r\n\t\t\ttusk.defaults.Materials.loadParticlesUntextured(),\r\n\t\t\ttusk.defaults.Primitives.loadTextMesh(),\r\n\t\t\ttusk.defaults.Fonts.loadSubatomic_Screen(),\r\n\t\t\ttusk.defaults.Materials.loadTextBasic(),\r\n\t\t\ttusk.defaults.Materials.loadEffectCircleOut(),\r\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___countdown__ogg),\r\n\t\t\ttusk.defaults.Materials.loadUnlitColoured(),\r\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___loadingcrunch__ogg),\r\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___wintrumpet__ogg)\r\n\t\t).then(function(quad:Mesh, particlesMaterial:Material, textMesh:Mesh, font:Font, fontMat:Material, circleOutMat:Material, countdownMusic:Sound,\r\n\t\t\tbgMaterial:Material,\r\n\t\t\tloadingCrunch:Sound, winMusic:Sound) {\r\n\t\t\tthis.quad = quad;\r\n\t\t\tthis.particlesMaterial = particlesMaterial;\r\n\r\n\t\t\tthis.circleOutMat = circleOutMat;\r\n\r\n\t\t\tthis.textMesh = textMesh;\r\n\t\t\tthis.font = font;\r\n\t\t\tthis.fontMat = fontMat;\r\n\t\t\tthis.fontMat.textures = new Array<Texture>();\r\n\t\t\tthis.fontMat.textures.push(font.texture);\r\n\r\n\t\t\tthis.countdownMusic = countdownMusic;\r\n\t\t\tthis.bgMaterial = bgMaterial;\r\n\t\t\tthis.loadingCrunch = loadingCrunch;\r\n\t\t\tthis.winMusic = winMusic;\r\n\r\n\t\t\tdef.resolve(this);\r\n\t\t}).catchError(function(err:Dynamic) {\r\n\t\t\tLog.error(err);\r\n\t\t\tdef.throwError('Failed to load assets!');\r\n\t\t});\r\n\r\n\t\treturn prom;\r\n\t}\r\n\r\n\tvar bgColourShift:ColourShiftComponent;\r\n\tvar crunchSoundComponent:SoundComponent;\r\n\tvar player1Score:PlayerScoreComponent;\r\n\tvar player1Timer:PlayerTimerComponent;\r\n\tvar player1Answer:PlayerAnswerComponent;\r\n\tvar player1LockedIn:TextComponent;\r\n\tvar player2Score:PlayerScoreComponent;\r\n\tvar player2Timer:PlayerTimerComponent;\r\n\tvar player2Answer:PlayerAnswerComponent;\r\n\tvar player2LockedIn:TextComponent;\r\n\r\n\tprivate var questionEntity:Entity;\r\n\tprivate var answerAEntity:Entity;\r\n\tprivate var answerBEntity:Entity;\r\n\r\n\tprivate var questionsAllDoneDef:Deferred<Bool> = new Deferred<Bool>();\r\n\tprivate var questionsAllDone:Promise<Bool>;\r\n\r\n\tprivate function doQuestion() {\r\n\t\tplayer1Answer.answer = -1;\r\n\t\tplayer2Answer.answer = -1;\r\n\r\n\t\taIsCorrect = tusk.math.Random.bool();\r\n\t\tcrunchSoundComponent.play = true;\r\n\t\tvar scvs:loading.SlamComponent = new loading.SlamComponent(0.5, 96, 4);\r\n\t\tquestionEntity = new Entity(this, 'Question', [\r\n\t\t\tnew TransformComponent(new Vec3(0, 128, 0.05), Quat.identity(), new Vec3(4, 4, 4)),\r\n\t\t\tnew MeshComponent(textMesh.clone('vstext')),\r\n\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\tnew TextComponent(font, questions[questionNumber].question,\r\n\t\t\t\tTextAlign.Centre, TextVerticalAlign.Top,\r\n\t\t\t\tnew Vec4(1, 1, 1, 1)),\r\n\t\t\tscvs\r\n\t\t]);\r\n\t\tentities.push(questionEntity);\r\n\t\tscvs.done.pipe(function(_) {\r\n\t\t\tcrunchSoundComponent.play = true;\r\n\t\t\tvar scaa:loading.SlamComponent = new loading.SlamComponent(0.5, 16, 3);\r\n\t\t\tanswerAEntity = new Entity(this, 'Answer A', [\r\n\t\t\t\tnew TransformComponent(new Vec3(-256, 0, 0.05), Quat.identity(), new Vec3(3, 3, 3)),\r\n\t\t\t\tnew MeshComponent(textMesh.clone('answerAtext')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tnew TextComponent(font, aIsCorrect ? questions[questionNumber].correctAnswer : questions[questionNumber].wrongAnswer,\r\n\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\r\n\t\t\t\tscaa\r\n\t\t\t]);\r\n\t\t\tentities.push(answerAEntity);\r\n\t\t\treturn scaa.done;\r\n\t\t}).pipe(function(_) {\r\n\t\t\tcrunchSoundComponent.play = true;\r\n\t\t\tvar scab:loading.SlamComponent = new loading.SlamComponent(0.5, 16, 3);\r\n\t\t\tanswerBEntity = new Entity(this, 'Answer B', [\r\n\t\t\t\tnew TransformComponent(new Vec3(256, 0, 0.05), Quat.identity(), new Vec3(3, 3, 3)),\r\n\t\t\t\tnew MeshComponent(textMesh.clone('answerBtext')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tnew TextComponent(font, aIsCorrect ? questions[questionNumber].wrongAnswer : questions[questionNumber].correctAnswer,\r\n\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\r\n\t\t\t\tscab\r\n\t\t\t]);\r\n\t\t\tentities.push(answerBEntity);\r\n\t\t\treturn scab.done;\r\n\t\t}).pipe(function(_) {\r\n\t\t\tbgColourShift.active = true;\r\n\t\t\tplayer1Timer.active = true;\r\n\t\t\tplayer1Answer.reset();\r\n\t\t\tplayer2Timer.active = true;\r\n\t\t\tplayer2Answer.reset();\r\n\r\n\t\t\t// wait for both players to answer\r\n\t\t\tvar answerDef:Deferred<Bool> = new Deferred<Bool>();\r\n\t\t\tvar answerPromise:Promise<Bool> = answerDef.promise();\r\n\t\t\t//Promise.when(player1Answer.done).then(function(_) { js.Lib.debug(); answerDef.resolve(true); });\r\n\t\t\tplayer1Answer.done.then(function(_) { player1LockedIn.text = 'Locked in!'; if(player2Answer.done.isResolved()) answerDef.resolve(true); });\r\n\t\t\tplayer2Answer.done.then(function(_) { player2LockedIn.text = 'Locked in!'; if(player1Answer.done.isResolved()) answerDef.resolve(true); });\r\n\t\t\treturn answerPromise;\r\n\t\t}).then(function(_) {\r\n\t\t\t// ok, both players have answered!\r\n\t\t\t// update their scores!\r\n\t\t\tif(aIsCorrect) {\r\n\t\t\t\tplayer1Score.score += if(player1Answer.answer == 0) 1 else if(player1Answer.answer == 1) -1 else 0;\r\n\t\t\t\tplayer2Score.score += if(player2Answer.answer == 0) 1 else if(player2Answer.answer == 1) -1 else 0;\r\n\t\t\t}\r\n\t\t\telse if(!aIsCorrect) {\r\n\t\t\t\tplayer1Score.score += if(player1Answer.answer == 1) 1 else if(player1Answer.answer == 0) -1 else 0;\r\n\t\t\t\tplayer2Score.score += if(player2Answer.answer == 1) 1 else if(player2Answer.answer == 0) -1 else 0;\r\n\t\t\t}\r\n\r\n\t\t\t// reset the colour shift\r\n\t\t\tbgColourShift.reset(tusk.math.Random.float(0, 359.9));\r\n\t\t\tbgColourShift.active = false;\r\n\r\n\t\t\t// wipe the old question\r\n\t\t\tTusk.removeEntity(questionEntity);\r\n\t\t\tTusk.removeEntity(answerAEntity);\r\n\t\t\tTusk.removeEntity(answerBEntity);\r\n\r\n\t\t\tquestionNumber++;\r\n\t\t\tplayer1Answer.reset();\r\n\t\t\tplayer1LockedIn.text = ''; \r\n\t\t\tplayer2Answer.reset();\r\n\t\t\tplayer2LockedIn.text = ''; \r\n\r\n\t\t\t// see if we're done\r\n\t\t\tif((player1Timer.t <= 0 && player2Timer.t <= 0) || questionNumber >= questions.length) {\r\n\t\t\t\tquestionsAllDoneDef.resolve(true);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// let us go on to the next question\r\n\t\t\t\tquestionDoneDef.resolve(true);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\toverride public function onLoad(event:LoadEvent) {\r\n\t\tif(event.scene != this) return;\r\n\t\tLog.info(\"Loading captain know it all scene..\");\r\n\r\n\t\tvar loadComplete:Promise<Scene> = loadAssets();\r\n\t\tvar loadingScreen:LoadingScreen = new LoadingScreen('Captain Know-It-All!', loadComplete);\r\n\t\tTusk.pushScene(loadingScreen);\r\n\t\tPromise.when(loadingScreen.sceneDone.promise(), loadComplete).then(function(_, _) {\r\n\t\t\tTusk.removeScene(loadingScreen);\r\n\t\t//loadComplete.then(function(_) {\r\n\t\t\t// shuffle the questions!\r\n\t\t\tquestions = Util.shuffle(questions);\r\n\r\n\t\t\tCamera2DProcessor.cameras = new Array<Camera2DComponent>();\r\n\t\t\t// start the game!\r\n\t\t\tLog.info('Starting captain know it all!');\r\n\r\n\t\t\tthis.useProcessor(new PlayerAnswerProcessor());\r\n\t\t\tthis.useProcessor(new loading.SlamProcessor());\r\n\t\t\tthis.useProcessor(new loading.SlideProcessor());\r\n\t\t\tthis.useProcessor(new PlayerTimerProcessor());\r\n\t\t\tthis.useProcessor(new PlayerScoreProcessor());\r\n\t\t\tthis.useProcessor(new ColourShiftProcessor());\r\n\t\t\tthis.useProcessor(new TimedPromiseProcessor());\r\n\t\t\tthis.useProcessor(new MeshProcessor());\r\n\t\t\tthis.useProcessor(new MaterialProcessor());\r\n\t\t\tthis.useProcessor(new Camera2DProcessor());\r\n\t\t\tthis.useProcessor(new TransformProcessor());\r\n\t\t\tthis.useProcessor(new TextProcessor());\r\n\t\t\tthis.useProcessor(new Renderer2DProcessor(new Vec4(0.9, 0.9, 0.9, 1)));\r\n\t\t\tthis.useProcessor(new CircleEffectRendererProcessor());\r\n\t\t\tthis.useProcessor(new SoundProcessor());\r\n\r\n\t\t\t// create the promise for all questions being done\r\n\t\t\tquestionsAllDone = questionsAllDoneDef.promise();\r\n\t\t\tquestionDone = questionDoneDef.stream();\r\n\r\n\t\t\t// create the camera\r\n\t\t\tvar w:Float = Tusk.instance.app.window.width;\r\n\t\t\tvar h:Float = Tusk.instance.app.window.height;\r\n\t\t\tvar camera:Entity = new Entity(this, 'Camera', [\r\n\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0), Quat.identity(), new Vec3(1, 1, 1)),\r\n\t\t\t\tnew Camera2DComponent(new Vec2(w, h) / -2.0, new Vec2(w, h) / 2.0, -100, 100)\r\n\t\t\t]);\r\n\t\t\tentities.push(camera);\r\n\r\n\t\t\t// create the background\r\n\t\t\tvar bgMesh:Mesh = quad.clone('mesh.bgcaptain');\r\n\t\t\tbgMesh.colours = new Array<Vec4>();\r\n\t\t\tvar gradientColours:Array<Vec4> = Util.randomGradientColours();\r\n\t\t\tfor(v in bgMesh.vertices) {\r\n\t\t\t\tvar colour:Vec4 = gradientColours[if(v.y > 0) 1 else 0];\r\n\t\t\t\tbgMesh.colours.push(colour);\r\n\t\t\t}\r\n\t\t\tbgColourShift = new ColourShiftComponent(tusk.math.Random.float(0, 359.9), 5, tusk.math.Ease.OutCubic);\r\n\t\t\tentities.push(new Entity(this, 'BG', [\r\n\t\t\t\tnew TransformComponent(new Vec3(0, 0, 1), Quat.identity(), new Vec3(1024, 1024, 1024)),\r\n\t\t\t\tnew MeshComponent(bgMesh),\r\n\t\t\t\tnew MaterialComponent(bgMaterial),\r\n\t\t\t\tbgColourShift\r\n\t\t\t]));\r\n\r\n\t\t\t// setup the players\r\n\t\t\tplayer1Score = new PlayerScoreComponent(0);\r\n\t\t\tplayer1Timer = new PlayerTimerComponent(10);\r\n\t\t\tplayer1Answer = new PlayerAnswerComponent(0, player1Timer);\r\n\t\t\tplayer1LockedIn = new TextComponent(font, '',\r\n\t\t\t\t\tTextAlign.Left, TextVerticalAlign.Bottom,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1));\r\n\t\t\tplayer2Score = new PlayerScoreComponent(1);\r\n\t\t\tplayer2Timer = new PlayerTimerComponent(10);\r\n\t\t\tplayer2Answer = new PlayerAnswerComponent(1, player2Timer);\r\n\t\t\tplayer2LockedIn = new TextComponent(font, '',\r\n\t\t\t\t\tTextAlign.Right, TextVerticalAlign.Bottom,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1));\r\n\r\n\t\t\t// create the player timers\r\n\t\t\tentities.push(new Entity(this, 'Player 1', [\r\n\t\t\t\tnew TransformComponent(new Vec3(Tusk.game.width / -2 + 32, Tusk.game.height / -2 + font.lineHeight * 2 + 32, 0.05), Quat.identity(), new Vec3(2, 2, 2)),\r\n\t\t\t\tnew MeshComponent(textMesh.clone('p1text')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tnew TextComponent(font, '${GameTracker.player[0].name}: 0',\r\n\t\t\t\t\tTextAlign.Left, TextVerticalAlign.Top,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\r\n\t\t\t\tplayer1Score,\r\n\t\t\t\tplayer1Answer\r\n\t\t\t]));\r\n\t\t\tentities.push(new Entity(this, 'Player 1 Timer', [\r\n\t\t\t\tnew TransformComponent(new Vec3(Tusk.game.width / -2 + 32, Tusk.game.height / -2 + 32, 0.05), Quat.identity(), new Vec3(2, 2, 2)),\r\n\t\t\t\tnew MeshComponent(textMesh.clone('p1timertext')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tnew TextComponent(font, '10.000',\r\n\t\t\t\t\tTextAlign.Left, TextVerticalAlign.Top,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\r\n\t\t\t\tplayer1Timer\r\n\t\t\t]));\r\n\t\t\tentities.push(new Entity(this, 'Player 1 Locked In', [\r\n\t\t\t\tnew TransformComponent(new Vec3(Tusk.game.width / -2 + 32, Tusk.game.height / -2 + font.lineHeight * 3 + 32, 0.05), Quat.identity(), new Vec3(4, 4, 4)),\r\n\t\t\t\tnew MeshComponent(textMesh.clone('p1lockedintext')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tplayer1LockedIn\r\n\t\t\t]));\r\n\t\t\tentities.push(new Entity(this, 'Player 2', [\r\n\t\t\t\tnew TransformComponent(new Vec3(Tusk.game.width / 2 - 32, Tusk.game.height / -2 + font.lineHeight * 2 + 32, 0.05), Quat.identity(), new Vec3(2, 2, 2)),\r\n\t\t\t\tnew MeshComponent(textMesh.clone('p2text')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tnew TextComponent(font, '${GameTracker.player[1].name}: 0',\r\n\t\t\t\t\tTextAlign.Right, TextVerticalAlign.Top,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\r\n\t\t\t\tplayer2Score,\r\n\t\t\t\tplayer2Answer\r\n\t\t\t]));\r\n\t\t\tentities.push(new Entity(this, 'Player 2 Timer', [\r\n\t\t\t\tnew TransformComponent(new Vec3(Tusk.game.width / 2 - 32, Tusk.game.height / -2 + 32, 0.05), Quat.identity(), new Vec3(2, 2, 2)),\r\n\t\t\t\tnew MeshComponent(textMesh.clone('p2timertext')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tnew TextComponent(font, '10.000',\r\n\t\t\t\t\tTextAlign.Right, TextVerticalAlign.Top,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1)),\r\n\t\t\t\tplayer2Timer\r\n\t\t\t]));\r\n\t\t\tentities.push(new Entity(this, 'Player 2 Locked In', [\r\n\t\t\t\tnew TransformComponent(new Vec3(Tusk.game.width / 2 - 32, Tusk.game.height / -2 + font.lineHeight * 3 + 32, 0.05), Quat.identity(), new Vec3(4, 4, 4)),\r\n\t\t\t\tnew MeshComponent(textMesh.clone('p2lockedintext')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tplayer2LockedIn\r\n\t\t\t]));\r\n\r\n\t\t\t// create the countdown music\r\n\t\t\tentities.push(new Entity(this, 'Countdown Music', [\r\n\t\t\t\tnew SoundComponent(countdownMusic.path, true)\r\n\t\t\t]));\r\n\t\t\tcrunchSoundComponent = new SoundComponent(loadingCrunch.path, false);\r\n\t\t\tentities.push(new Entity(this, 'CrunchSound', [crunchSoundComponent]));\r\n\r\n\t\t\t// start the countdown!\r\n\t\t\tvar countdownText:TextComponent = new TextComponent(font, '3',\r\n\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1));\r\n\t\t\tvar countdownTimer:TimedPromiseComponent = new TimedPromiseComponent(1.0);\r\n\t\t\tvar countdownTransform:TransformComponent = new TransformComponent(new Vec3(0, 0, -0.99), Quat.identity(), new Vec3(8, 8, 8));\r\n\t\t\tvar countdownEntity:Entity = new Entity(this, 'Countdown', [\r\n\t\t\t\tcountdownTransform,\r\n\t\t\t\tnew MeshComponent(textMesh.clone('br.countdowntextmesh')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tcountdownText,\r\n\t\t\t\tcountdownTimer\r\n\t\t\t]);\r\n\t\t\tentities.push(countdownEntity);\r\n\t\t\tcountdownTimer.done.pipe(function(_) {\r\n\t\t\t\tcountdownText.text = '2';\r\n\t\t\t\tcountdownTimer.t = 0;\r\n\t\t\t\tcountdownTimer.reset();\r\n\t\t\t\treturn countdownTimer.done;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\tcountdownText.text = '1';\r\n\t\t\t\tcountdownTimer.t = 0;\r\n\t\t\t\tcountdownTimer.reset();\r\n\t\t\t\treturn countdownTimer.done;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\tcountdownText.text = 'Go!';\r\n\t\t\t\tcountdownTimer.t = 0;\r\n\t\t\t\tcountdownTimer.wait = 0.5;\r\n\t\t\t\tcountdownTimer.reset();\r\n\t\t\t\treturn countdownTimer.done;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\tcountdownText.text = '';\r\n\r\n\t\t\t\tStream.whenever(questionDone).then(function(_) {\r\n\t\t\t\t\tdoQuestion();\r\n\t\t\t\t});\r\n\t\t\t\tquestionDoneDef.resolve(true);\r\n\t\t\t\treturn questionsAllDone;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\tvar winningPlayer:Int = -1;\r\n\t\t\t\tif(player1Score.score == player2Score.score) {\r\n\t\t\t\t\twinningPlayer = player1Timer.t >= player2Timer.t ? 0 : 1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\twinningPlayer = player1Score.score > player2Score.score ? 0 : 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// show who won\r\n\t\t\t\tcountdownText.text = '${GameTracker.player[winningPlayer].name} wins!';\r\n\t\t\t\tcountdownTransform.scale.set(4, 4, 4);\r\n\t\t\t\tcountdownTransform.lastScale.copy(countdownTransform.scale);\r\n\r\n\t\t\t\t// give em a point!\r\n\t\t\t\tGameTracker.player[winningPlayer].score++;\r\n\r\n\t\t\t\t// play the win music!\r\n\t\t\t\tentities.push(new Entity(this, 'WinMusic', [new SoundComponent(winMusic.path, true)]));\r\n\r\n\t\t\t\t// and delay\r\n\t\t\t\tcountdownTimer.t = 0;\r\n\t\t\t\tcountdownTimer.wait = 3;\r\n\t\t\t\tcountdownTimer.reset();\r\n\t\t\t\treturn countdownTimer.done;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\t// circle out\r\n\t\t\t\tvar cec:CircleEffectComponent = new CircleEffectComponent(false);\r\n\t\t\t\tentities.push(new Entity(this, 'Circle Effect', [\r\n\t\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0.1), Quat.identity(), new Vec3(1024, 1024, 1024)),\r\n\t\t\t\t\tnew MeshComponent(quad.path),\r\n\t\t\t\t\tnew MaterialComponent(circleOutMat.path),\r\n\t\t\t\t\tcec\r\n\t\t\t\t]));\r\n\t\t\t\treturn cec.done;\r\n\t\t\t}).then(function(_) {\r\n\t\t\t\tsceneDone.resolve(this);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","package minigames;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.lib.comp.Camera2DComponent;\r\nimport tusk.lib.comp.MaterialComponent;\r\nimport tusk.lib.comp.TransformComponent;\r\nimport tusk.lib.proc.Camera2DProcessor;\r\nimport tusk.lib.proc.MaterialProcessor;\r\nimport tusk.lib.proc.Renderer2DProcessor;\r\nimport tusk.lib.proc.TransformProcessor;\r\nimport tusk.Tusk;\r\nimport tusk.Scene;\r\nimport tusk.Entity;\r\nimport tusk.resources.*;\r\nimport tusk.lib.comp.TextComponent;\r\nimport tusk.lib.comp.*;\r\nimport tusk.lib.proc.*;\r\n\r\nimport tusk.modules.tiled.TileMap;\r\n\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\nimport promhx.Stream;\r\n\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\nimport glm.Quat;\r\nimport glm.Vec4;\r\n\r\nimport tusk.events.*;\r\n\r\nimport minigames.sledtillyouredead.*;\r\n\r\nclass SledTillYoureDead extends Scene {\r\n\tpublic function new() {\r\n\t\tsuper('SledTillYoureDead');\r\n\t}\r\n\r\n\tprivate var quad:Mesh;\r\n\tprivate var particlesMaterial:Material;\r\n\r\n\tprivate var textMesh:Mesh;\r\n\tprivate var font:Font;\r\n\tprivate var fontMat:Material;\r\n\r\n\tprivate var circleOutMat:Material;\r\n\r\n\tprivate var countdownMusic:Sound;\r\n\tprivate var sledMusic:Sound;\r\n\tprivate var winMusic:Sound;\r\n\r\n\tprivate var sledMaterial:Material;\r\n\r\n\tprivate var sledTileMap:TileMap;\r\n\tprivate var sledBGMaterial:Material;\r\n\tprivate var sledBGMesh:Mesh;\r\n\r\n\tprivate function loadAssets():Promise<Scene> {\r\n\t\tvar def:Deferred<Scene> = new Deferred<Scene>();\r\n\t\tvar prom:Promise<Scene> = def.promise();\r\n\r\n\t\t// load assets!\r\n\t\tPromise.when(\r\n\t\t\ttusk.defaults.Primitives.loadQuad(),\r\n\t\t\ttusk.defaults.Materials.loadParticlesUntextured(),\r\n\t\t\ttusk.defaults.Primitives.loadTextMesh(),\r\n\t\t\ttusk.defaults.Fonts.loadSubatomic_Screen(),\r\n\t\t\ttusk.defaults.Materials.loadTextBasic(),\r\n\t\t\ttusk.defaults.Materials.loadEffectCircleOut(),\r\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___countdown__ogg),\r\n\t\t\tSpriteMaterial.load(),\r\n\t\t\tTusk.assets.loadTexture(tusk.Files.sprites___sled__png),\r\n\t\t\tTusk.assets.loadText(tusk.Files.tilemaps___sledside__json),\r\n\t\t\tTusk.assets.loadTexture(tusk.Files.tilemaps___sledbg__png),\r\n\t\t\ttusk.defaults.Materials.loadUnlitTextured(),\r\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___sledding__ogg),\r\n\t\t\tTusk.assets.loadSound(tusk.Files.sounds___wintrumpet__ogg)\r\n\t\t).then(function(quad:Mesh, particlesMaterial:Material, textMesh:Mesh, font:Font, fontMat:Material, circleOutMat:Material, countdownMusic:Sound,\r\n\t\t\tsledMaterial:Material, sledTexture:Texture,\r\n\t\t\tsledSideSrc:Text, sideBG:Texture, sledBGMaterial:Material,\r\n\t\t\tsledMusic:Sound, winMusic:Sound) {\r\n\t\t\tthis.quad = quad;\r\n\t\t\tthis.particlesMaterial = particlesMaterial;\r\n\r\n\t\t\tthis.circleOutMat = circleOutMat;\r\n\r\n\t\t\tthis.countdownMusic = countdownMusic;\r\n\t\t\tthis.sledMusic = sledMusic;\r\n\t\t\tthis.winMusic = winMusic;\r\n\r\n\t\t\tthis.textMesh = textMesh;\r\n\t\t\tthis.font = font;\r\n\t\t\tthis.fontMat = fontMat;\r\n\t\t\tthis.fontMat.textures = new Array<Texture>();\r\n\t\t\tthis.fontMat.textures.push(font.texture);\r\n\r\n\t\t\tthis.sledMaterial = sledMaterial;\r\n\t\t\tthis.sledMaterial.textures = new Array<Texture>();\r\n\t\t\tthis.sledMaterial.textures.push(sledTexture);\r\n\r\n\t\t\tthis.sledBGMaterial = sledBGMaterial;\r\n\t\t\tthis.sledBGMaterial.textures = new Array<Texture>();\r\n\t\t\tthis.sledBGMaterial.textures.push(sideBG);\r\n\r\n\t\t\tsledTileMap = TileMap.fromJSON(sledSideSrc.text);\r\n\t\t\tTileMap.buildMesh(sledTileMap, 'tilemap.sled').then(function(mesh:Mesh) {\r\n\t\t\t\tsledBGMesh = mesh;\r\n\t\t\t\tdef.resolve(this);\r\n\t\t\t});\r\n\t\t}).catchError(function(err:Dynamic) {\r\n\t\t\tLog.error(err);\r\n\t\t\tdef.throwError('Failed to load assets!');\r\n\t\t});\r\n\r\n\t\treturn prom;\r\n\t}\r\n\r\n\tpublic static var obstacles:Array<TransformComponent> = new Array<TransformComponent>();\r\n\tprivate var treeMesh:Mesh;\r\n\tprivate var rockMesh:Mesh;\r\n\tprivate var flagMesh:Mesh;\r\n\tprivate function createObstacle() {\r\n\t\tvar mesh:Mesh = switch(tusk.math.Random.int(0, 2)) {\r\n\t\t\tdefault: treeMesh;\r\n\t\t\tcase 1: rockMesh;\r\n\t\t\tcase 2: flagMesh;\r\n\t\t}\r\n\r\n\t\tvar x:Float = tusk.math.Random.float(-380, 380);\r\n\t\tvar transform:TransformComponent = new TransformComponent(new Vec3(x, Tusk.game.height / -2 - 64, -0.5), Quat.identity(), new Vec3(64, 64, 64));\r\n\t\tentities.push(new Entity(this, 'Obstacle', [\r\n\t\t\ttransform,\r\n\t\t\tnew MeshComponent(mesh),\r\n\t\t\tnew MaterialComponent(sledBGMaterial),\r\n\t\t\tnew ScrollComponent(Tusk.game.height / 2 + 64),\r\n\t\t\tnew CollisionComponent(16, 1)\r\n\t\t]));\r\n\t\tobstacles.push(transform);\r\n\t}\r\n\r\n\toverride public function onLoad(event:LoadEvent) {\r\n\t\tif(event.scene != this) return;\r\n\t\tLog.info(\"Loading sled till you're dead scene..\");\r\n\r\n\t\tvar loadComplete:Promise<Scene> = loadAssets();\r\n\t\tvar loadingScreen:LoadingScreen = new LoadingScreen('Sled Till You\\'re Dead!', loadComplete);\r\n\t\tTusk.pushScene(loadingScreen);\r\n\t\tPromise.when(loadingScreen.sceneDone.promise(), loadComplete).then(function(_, _) {\r\n\t\t\tTusk.removeScene(loadingScreen);\r\n\t\t//loadComplete.then(function(_) {\t\t\t\r\n\t\t\tCamera2DProcessor.cameras = new Array<Camera2DComponent>();\r\n\t\t\t// start the game!\r\n\t\t\tLog.info('Starting sled till you\\'re dead!');\r\n\r\n\t\t\tthis.useProcessor(new CollisionProcessor());\r\n\t\t\tthis.useProcessor(new AnimatedSledProcessor());\r\n\t\t\tthis.useProcessor(new MovementProcessor());\r\n\t\t\tthis.useProcessor(new ScrollProcessor());\r\n\t\t\tthis.useProcessor(new SpawnProcessor());\r\n\t\t\tthis.useProcessor(new TimedPromiseProcessor());\r\n\t\t\tthis.useProcessor(new MeshProcessor());\r\n\t\t\tthis.useProcessor(new MaterialProcessor());\r\n\t\t\tthis.useProcessor(new Camera2DProcessor());\r\n\t\t\tthis.useProcessor(new TransformProcessor());\r\n\t\t\tthis.useProcessor(new TextProcessor());\r\n\t\t\tthis.useProcessor(new Renderer2DProcessor(new Vec4(0.9, 0.9, 0.9, 1)));\r\n\t\t\tthis.useProcessor(new CircleEffectRendererProcessor());\r\n\t\t\tthis.useProcessor(new SoundProcessor());\r\n\r\n\t\t\t// create the camera\r\n\t\t\tvar w:Float = Tusk.instance.app.window.width;\r\n\t\t\tvar h:Float = Tusk.instance.app.window.height;\r\n\t\t\tvar camera:Entity = new Entity(this, 'Camera', [\r\n\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0), Quat.identity(), new Vec3(1, 1, 1)),\r\n\t\t\t\tnew Camera2DComponent(new Vec2(w, h) / -2.0, new Vec2(w, h) / 2.0, -100, 100)\r\n\t\t\t]);\r\n\t\t\tentities.push(camera);\r\n\r\n\t\t\t// create the side borders\r\n\t\t\tentities.push(new Entity(this, 'LeftBorder', [\r\n\t\t\t\tnew TransformComponent(new Vec3(Tusk.game.width / -2, Tusk.game.height / -2 - 128, 0), Quat.identity(), new Vec3(2, 2, 2)),\r\n\t\t\t\tnew MeshComponent(sledBGMesh),\r\n\t\t\t\tnew MaterialComponent(sledBGMaterial),\r\n\t\t\t\tnew ScrollComponent(Tusk.game.height / -2, true, 64)\r\n\t\t\t]));\r\n\t\t\tentities.push(new Entity(this, 'RightBorder', [\r\n\t\t\t\tnew TransformComponent(new Vec3(Tusk.game.width / 2, Tusk.game.height / -2 - 128, 0), Quat.identity(), new Vec3(-2, 2, 2)),\r\n\t\t\t\tnew MeshComponent(sledBGMesh),\r\n\t\t\t\tnew MaterialComponent(sledBGMaterial),\r\n\t\t\t\tnew ScrollComponent(Tusk.game.height / -2, true, 64)\r\n\t\t\t]));\r\n\r\n\t\t\t// create P1 sled\r\n\t\t\tvar sledMesh1:Mesh = quad.clone('sled.mesh1');\r\n\t\t\tfor(uv in sledMesh1.uvs) {\r\n\t\t\t\tuv.x /= 4;\r\n\t\t\t}\r\n\t\t\tvar sledMesh2:Mesh = sledMesh1.clone('sled.mesh2');\r\n\t\t\tvar p1Collision:CollisionComponent = new CollisionComponent(16, 0);\r\n\t\t\tentities.push(new Entity(this, 'P1 Sled', [\r\n\t\t\t\tnew TransformComponent(new Vec3(-92, 192, -1), Quat.identity(), new Vec3(64, 64, 64)),\r\n\t\t\t\tnew MeshComponent(sledMesh1),\r\n\t\t\t\tnew MaterialComponent(sledMaterial),\r\n\t\t\t\tnew CustomUniformsComponent(function() {\r\n\t\t\t\t\tsledMaterial.setVec3('colour', GameTracker.player[0].colour);\r\n\t\t\t\t}),\r\n\t\t\t\tnew AnimatedSledComponent(sledMesh1, 4, 15),\r\n\t\t\t\tnew MovementComponent(0),\r\n\t\t\t\tp1Collision\r\n\t\t\t]));\r\n\t\t\tvar p2Collision:CollisionComponent = new CollisionComponent(16, 0);\r\n\t\t\tentities.push(new Entity(this, 'P2 Sled', [\r\n\t\t\t\tnew TransformComponent(new Vec3(92, 192, -1), Quat.identity(), new Vec3(64, 64, 64)),\r\n\t\t\t\tnew MeshComponent(sledMesh2),\r\n\t\t\t\tnew MaterialComponent(sledMaterial),\r\n\t\t\t\tnew CustomUniformsComponent(function() {\r\n\t\t\t\t\tsledMaterial.setVec3('colour', GameTracker.player[1].colour);\r\n\t\t\t\t}),\r\n\t\t\t\tnew AnimatedSledComponent(sledMesh2, 4, 15),\r\n\t\t\t\tnew MovementComponent(1),\r\n\t\t\t\tp2Collision\r\n\t\t\t]));\r\n\r\n\t\t\t// prepare to create some obstacles!\r\n\t\t\ttreeMesh = quad.clone('sled.mesh.tree');\r\n\t\t\ttreeMesh.uvs[0].set(0.5, 1.0);\r\n\t\t\ttreeMesh.uvs[1].set(1.0, 1.0);\r\n\t\t\ttreeMesh.uvs[2].set(1.0, 0.5);\r\n\t\t\ttreeMesh.uvs[3].set(1.0, 0.5);\r\n\t\t\ttreeMesh.uvs[4].set(0.5, 0.5);\r\n\t\t\ttreeMesh.uvs[5].set(0.5, 1.0);\r\n\t\t\trockMesh = quad.clone('sled.mesh.rock');\r\n\t\t\trockMesh.uvs[0].set(0.5, 0.5);\r\n\t\t\trockMesh.uvs[1].set(1.0, 0.5);\r\n\t\t\trockMesh.uvs[2].set(1.0, 0.0);\r\n\t\t\trockMesh.uvs[3].set(1.0, 0.0);\r\n\t\t\trockMesh.uvs[4].set(0.5, 0.0);\r\n\t\t\trockMesh.uvs[5].set(0.5, 0.5);\r\n\t\t\tflagMesh = quad.clone('sled.mesh.flag');\r\n\t\t\tflagMesh.uvs[0].set(0.0, 1.0);\r\n\t\t\tflagMesh.uvs[1].set(0.5, 1.0);\r\n\t\t\tflagMesh.uvs[2].set(0.5, 0.5);\r\n\t\t\tflagMesh.uvs[3].set(0.5, 0.5);\r\n\t\t\tflagMesh.uvs[4].set(0.0, 0.5);\r\n\t\t\tflagMesh.uvs[5].set(0.0, 1.0);\r\n\r\n\t\t\t// create the countdown music\r\n\t\t\tentities.push(new Entity(this, 'Countdown Music', [\r\n\t\t\t\tnew SoundComponent(countdownMusic.path, true)\r\n\t\t\t]));\r\n\r\n\t\t\t// add the sledding music!\r\n\t\t\tvar sledMusicComponent:SoundComponent = new SoundComponent(sledMusic.path, false);\r\n\t\t\tentities.push(new Entity(this, 'Sled Music', [sledMusicComponent]));\r\n\r\n\t\t\t// start the countdown!\r\n\t\t\tvar countdownText:TextComponent = new TextComponent(font, '3',\r\n\t\t\t\t\tTextAlign.Centre, TextVerticalAlign.Centre,\r\n\t\t\t\t\tnew Vec4(0, 0, 0, 1));\r\n\t\t\tvar countdownTimer:TimedPromiseComponent = new TimedPromiseComponent(1.0);\r\n\t\t\tvar countdownTransform:TransformComponent = new TransformComponent(new Vec3(0, 0, -0.99), Quat.identity(), new Vec3(8, 8, 8));\r\n\t\t\tvar countdownEntity:Entity = new Entity(this, 'Countdown', [\r\n\t\t\t\tcountdownTransform,\r\n\t\t\t\tnew MeshComponent(textMesh.clone('br.countdowntextmesh')),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tcountdownText,\r\n\t\t\t\tcountdownTimer\r\n\t\t\t]);\r\n\t\t\tentities.push(countdownEntity);\r\n\t\t\tcountdownTimer.done.pipe(function(_) {\r\n\t\t\t\tcountdownText.text = '2';\r\n\t\t\t\tcountdownTimer.t = 0;\r\n\t\t\t\tcountdownTimer.reset();\r\n\t\t\t\treturn countdownTimer.done;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\tcountdownText.text = '1';\r\n\t\t\t\tcountdownTimer.t = 0;\r\n\t\t\t\tcountdownTimer.reset();\r\n\t\t\t\treturn countdownTimer.done;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\tcountdownText.text = 'Go!';\r\n\r\n\t\t\t\t// in a second, start displaying the time left\r\n\t\t\t\thaxe.Timer.delay(function() {\r\n\t\t\t\t\t// remove the text\r\n\t\t\t\t\tcountdownText.text = '';\r\n\t\t\t\t\tsledMusicComponent.play = true;\r\n\t\t\t\t}, 1000);\r\n\r\n\t\t\t\t// start the game!\r\n\r\n\t\t\t\t// setup the obstacle spawning system\r\n\t\t\t\tentities.push(new Entity(this, 'Spawner', [new SpawnComponent(createObstacle)]));\r\n\r\n\t\t\t\t// figure out who hit something first\r\n\t\t\t\tvar hitDef:Deferred<Int> = new Deferred<Int>();\r\n\t\t\t\tvar hitPromise:Promise<Int> = hitDef.promise();\r\n\t\t\t\tp1Collision.done.then(function(_) { if(!hitPromise.isResolved()) hitDef.resolve(0); });\r\n\t\t\t\tp2Collision.done.then(function(_) { if(!hitPromise.isResolved()) hitDef.resolve(1); });\r\n\t\t\t\treturn hitPromise;\r\n\t\t\t}).pipe(function(player:Int) {\r\n\t\t\t\tLog.info('${GameTracker.player[player].name} hit an obstacle!');\r\n\r\n\t\t\t\t// stop the music!\r\n\t\t\t\tsledMusicComponent.play = false;\r\n\t\t\t\tsledMusicComponent.stop = true;\r\n\r\n\t\t\t\t// prepare for the end!\r\n\t\t\t\tfor(entity in entities) {\r\n\t\t\t\t\t// stop moving\r\n\t\t\t\t\tif(entity.hasType(ScrollComponent.tid)) entity.removeType(ScrollComponent.tid);\r\n\t\t\t\t\t// stop spawning\r\n\t\t\t\t\tif(entity.name == 'Spawner') Tusk.removeEntity(entity);\r\n\t\t\t\t\t// stop animating\r\n\t\t\t\t\tif(entity.hasType(AnimatedSledComponent.tid)) entity.removeType(AnimatedSledComponent.tid);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// show who won\r\n\t\t\t\tcountdownText.text = '${GameTracker.player[1 - player].name} wins!';\r\n\t\t\t\tcountdownTransform.scale.set(4, 4, 4);\r\n\t\t\t\tcountdownTransform.lastScale.copy(countdownTransform.scale);\r\n\r\n\t\t\t\t// give em a point!\r\n\t\t\t\tGameTracker.player[1 - player].score++;\r\n\r\n\t\t\t\t// play the win music!\r\n\t\t\t\tentities.push(new Entity(this, 'WinMusic', [new SoundComponent(winMusic.path, true)]));\r\n\r\n\t\t\t\t// and delay\r\n\t\t\t\tcountdownTimer.t = 0;\r\n\t\t\t\tcountdownTimer.wait = 3;\r\n\t\t\t\tcountdownTimer.reset();\r\n\t\t\t\treturn countdownTimer.done;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\t// circle out\r\n\t\t\t\tvar cec:CircleEffectComponent = new CircleEffectComponent(false);\r\n\t\t\t\tentities.push(new Entity(this, 'Circle Effect', [\r\n\t\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0.1), Quat.identity(), new Vec3(1024, 1024, 1024)),\r\n\t\t\t\t\tnew MeshComponent(quad.path),\r\n\t\t\t\t\tnew MaterialComponent(circleOutMat.path),\r\n\t\t\t\t\tcec\r\n\t\t\t\t]));\r\n\t\t\t\treturn cec.done;\r\n\t\t\t}).then(function(_) {\r\n\t\t\t\tsceneDone.resolve(this);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","package minigames.bottlerocket;\n\nimport glm.Mat4;\n\nimport tusk.resources.Shader;\nimport tusk.resources.Material;\n\nimport promhx.Deferred;\nimport promhx.Promise;\n\nimport snow.modules.opengl.GL;\nimport snow.modules.opengl.GL.GLBuffer;\n\nimport tusk.Tusk;\n\nclass BackgroundMaterial {\n\tpublic static function load():Promise<Material> {\n\t\t#if snow\n\t\tif(Tusk.assets.isLoaded(\"br_unlit.textured\")) {\n\t\t\tvar d:Deferred<Material> = new Deferred<Material>();\n\t\t\td.resolve(Tusk.assets.getMaterial(\"br_unlit.textured\"));\n\t\t\treturn d.promise();\n\t\t}\n\n\t\tvar shader:Shader = new Shader(\"br_unlit.textured\",\n\t\t\thaxe.Resource.getString(\"unlit.textured.vert\"),\n\t\t\thaxe.Resource.getString(\"unlit.textured.frag\"));\n\t\tvar mat = new Material(\"br_unlit.textured\", shader);\n\n\t\t// setup the attribute flags\n\t\tmat.attributeFlags.set(AttributeTypes.Pos3);\n\t\tmat.attributeFlags.set(AttributeTypes.UV);\n\n\t\tGL.useProgram(mat.shader.program);\n\t\tvar posLocation:Int = mat.shader.getAttributeLocation(\"position\");\n\t\tvar uvLocation:Int = mat.shader.getAttributeLocation(\"uv\");\n\n\t\tmat.onRender = function(setupUniforms:SetupRenderUniformsCallback, vertexBuffer:GLBuffer, vertexCount:Int) {\n\t\t\tGL.useProgram(mat.shader.program);\n\t\t\tGL.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\n\n\t\t\tif(mat.textures != null && mat.textures.length > 0) {\n\t\t\t\tGL.activeTexture(GL.TEXTURE0);\n\t\t\t\tGL.bindTexture(GL.TEXTURE_2D, mat.textures[0].texture);\n\t\t\t}\n\n\t\t\tsetupUniforms(mat);\n\n\t\t\tGL.enableVertexAttribArray(posLocation);\n\t\t\tGL.enableVertexAttribArray(uvLocation);\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer);\n\n\t\t\tGL.vertexAttribPointer(posLocation, 3, GL.FLOAT, false, 5*4, 0);\n\t\t\tGL.vertexAttribPointer(uvLocation, 2, GL.FLOAT, false, 5*4, 3*4);\n\n\t\t\tGL.drawArrays(GL.TRIANGLES, 0, vertexCount);\n\n\t\t\tGL.bindTexture(GL.TEXTURE_2D, null);\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\n\t\t\tGL.disableVertexAttribArray(posLocation);\n\t\t\tGL.disableVertexAttribArray(uvLocation);\n\t\t\tGL.useProgram(null);\n\t\t}\n\n\t\treturn Tusk.assets.loadMaterial(\"br_unlit.textured\", mat);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t}\n}","package minigames.bottlerocket;\n\nimport tusk.Component;\n\nclass PumpComponent extends Component {\n\tpublic var pressure:Float;\n\tpublic var pumpPos:Float;\n\tpublic var pumpVelocity:Float;\n\tpublic var playerNumber:Int;\n\n\tpublic var aiDirection:Float = -1;\n\n\tpublic var topY:Float;\n\n\tpublic function new(playerNumber:Int, topY:Float) {\n\t\tthis.pressure = 0;\n\t\tthis.pumpPos = 1;\n\t\tthis.pumpVelocity = 0;\n\t\tthis.playerNumber = playerNumber;\n\t\tthis.topY = topY;\n\t\tsuper();\n\t}\n}","package minigames.bottlerocket;\n\nimport tusk.debug.Log;\nimport tusk.Matcher;\nimport tusk.Processor;\nimport tusk.Entity;\nimport tusk.events.UpdateEvent;\nimport tusk.lib.comp.TransformComponent;\nimport tusk.Tusk;\n\nclass PumpProcessor extends Processor {\n\tinline private static var pumpAcceleration:Float = 10;\n\n\tpublic function new(?entities:Array<Entity>) {\n\t\tmatcher = new Matcher().include(TransformComponent.tid).include(PumpComponent.tid);\n\t\tsuper(entities);\n\t}\n\t\n\toverride public function onUpdate(event:UpdateEvent):Void {\n\t\tfor(entity in entities) {\n\t\t\tvar t:TransformComponent = cast entity.get(TransformComponent.tid);\n\t\t\tvar p:PumpComponent = cast entity.get(PumpComponent.tid);\n\n\t\t\tvar axis:Float = 0;\n\t\t\tvar directionSpeed = tusk.math.Random.float(3, 4);\n\t\t\tif(GameTracker.player[p.playerNumber].isCPU) {\n\t\t\t\tif(p.pumpPos < 0.1) {\n\t\t\t\t\tp.aiDirection += directionSpeed * event.dt;\n\t\t\t\t}\n\t\t\t\telse if(p.pumpPos >= 0.9) {\n\t\t\t\t\tp.aiDirection -= directionSpeed * event.dt;\n\t\t\t\t}\n\t\t\t\tp.aiDirection = tusk.math.MathTools.clamp(p.aiDirection, -1, 1);\n\t\t\t\tif(p.aiDirection < 0) axis = -1;\n\t\t\t\telse if(p.aiDirection > 0) axis = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// get the desired movement\n\t\t\t\tif(Tusk.instance.app.input.keydown(GameTracker.player[p.playerNumber].btnA)) axis -= 1.0;\n\t\t\t\tif(Tusk.instance.app.input.keydown(GameTracker.player[p.playerNumber].btnB)) axis += 1.0;\n\t\t\t}\n\n\t\t\t// figure out the pump's motion\n\t\t\tp.pumpVelocity += axis * pumpAcceleration * event.dt;\n\t\t\tvar lastPos:Float = p.pumpPos;\n\t\t\tp.pumpPos += p.pumpVelocity * event.dt;\n\t\t\tif(p.pumpPos <= 0 || p.pumpPos >= 1 || axis == 0) {\n\t\t\t\tp.pumpVelocity = 0;\n\t\t\t}\n\t\t\tp.pumpPos = tusk.math.MathTools.clamp(p.pumpPos, 0, 1);\n\n\t\t\t// calculate the pressure change\n\t\t\tif(p.pumpPos < lastPos) {\n\t\t\t\tp.pressure += lastPos - p.pumpPos;\n\t\t\t}\n\n\t\t\t// move the pump!\n\t\t\tt.lastPosition.copy(t.position);\n\t\t\tt.position.y = p.topY - (72 * (1.0 - p.pumpPos));\n\t\t}\n\t}\n}","package minigames.bottlerocket;\n\nimport tusk.Component;\n\nclass TimerDisplayComponent extends Component {\n\tpublic function new() {\n\t\tsuper();\n\t}\n}","package minigames.bottlerocket;\n\nimport tusk.debug.Log;\nimport tusk.Matcher;\nimport tusk.Processor;\nimport tusk.Entity;\nimport tusk.events.UpdateEvent;\nimport tusk.lib.comp.TextComponent;\nimport tusk.lib.comp.TimedPromiseComponent;\nimport tusk.Tusk;\n\nclass TimerDisplayProcessor extends Processor {\n\tinline private static var pumpAcceleration:Float = 10;\n\n\tpublic function new(?entities:Array<Entity>) {\n\t\tmatcher = new Matcher().include(TimedPromiseComponent.tid).include(TextComponent.tid).include(TimerDisplayComponent.tid);\n\t\tsuper(entities);\n\t}\n\t\n\toverride public function onUpdate(event:UpdateEvent):Void {\n\t\tfor(entity in entities) {\n\t\t\tvar text:TextComponent = cast entity.get(TextComponent.tid);\n\t\t\tvar timer:TimedPromiseComponent = cast entity.get(TimedPromiseComponent.tid);\n\n\t\t\tvar timeLeft:Float = timer.wait - timer.t;\n\t\t\tif(timeLeft < 0) timeLeft = 0;\n\t\t\ttext.text = Util.floatToStringPrecision(timeLeft, 2);\n\t\t}\n\t}\n}","package minigames.bottlerocket;\n\nimport tusk.Component;\nimport tusk.lib.comp.TransformComponent;\n\nclass TransformTrackerComponent extends Component {\n\tpublic var t1:TransformComponent;\n\tpublic var t2:TransformComponent;\n\n\tpublic function new(t1:TransformComponent, t2:TransformComponent) {\n\t\tthis.t1 = t1;\n\t\tthis.t2 = t2;\n\t\tsuper();\n\t}\n}","package minigames.bottlerocket;\n\nimport tusk.debug.Log;\nimport tusk.Matcher;\nimport tusk.Processor;\nimport tusk.Entity;\nimport tusk.events.UpdateEvent;\nimport tusk.lib.comp.TransformComponent;\nimport tusk.lib.comp.Camera2DComponent;\nimport tusk.Tusk;\n\nclass TransformTrackerProcessor extends Processor {\n\tinline private static var gravity:Float = -10;\n\n\tpublic function new(?entities:Array<Entity>) {\n\t\tmatcher = new Matcher().include(TransformComponent.tid).include(TransformTrackerComponent.tid).include(Camera2DComponent.tid);\n\t\tsuper(entities);\n\t}\n\t\n\toverride public function onUpdate(event:UpdateEvent):Void {\n\t\tfor(entity in entities) {\n\t\t\tvar t:TransformComponent = cast entity.get(TransformComponent.tid);\n\t\t\tvar tracker:TransformTrackerComponent = cast entity.get(TransformTrackerComponent.tid);\n\n\t\t\tvar highest:TransformComponent = tracker.t1;\n\t\t\tif(tracker.t2.position.y > tracker.t1.position.y) {\n\t\t\t\thighest = tracker.t2;\n\t\t\t}\n\n\t\t\tt.lastPosition.copy(t.position);\n\t\t\tt.position.y = highest.position.y;\n\n\t\t\tvar c:Camera2DComponent = cast entity.get(Camera2DComponent.tid);\n\t\t\tc.viewMatrixDirty = true;\n\t\t}\n\t}\n}","package minigames.bottlerocket;\n\nimport tusk.PromiseComponent;\n\nclass VelocityComponent extends PromiseComponent {\n\tpublic var velocity:Float;\n\tpublic var minHeight:Float;\n\tpublic var maxHeight:Float = -1;\n\n\tpublic function new(velocity:Float, minHeight:Float) {\n\t\tthis.velocity = velocity;\n\t\tthis.minHeight = minHeight;\n\t\tsuper();\n\t}\n}","package minigames.bottlerocket;\n\nimport tusk.debug.Log;\nimport tusk.Matcher;\nimport tusk.Processor;\nimport tusk.Entity;\nimport tusk.events.UpdateEvent;\nimport tusk.lib.comp.TransformComponent;\nimport tusk.Tusk;\n\nclass VelocityProcessor extends Processor {\n\tinline private static var gravity:Float = -1024;\n\n\tpublic function new(?entities:Array<Entity>) {\n\t\tmatcher = new Matcher().include(TransformComponent.tid).include(VelocityComponent.tid);\n\t\tsuper(entities);\n\t}\n\t\n\toverride public function onUpdate(event:UpdateEvent):Void {\n\t\tfor(entity in entities) {\n\t\t\tvar t:TransformComponent = cast entity.get(TransformComponent.tid);\n\t\t\tvar v:VelocityComponent = cast entity.get(VelocityComponent.tid);\n\n\t\t\tt.lastPosition.copy(t.position);\n\t\t\tv.velocity += gravity * event.dt;\n\t\t\tif(v.velocity < 0 && v.maxHeight < 0) {\n\t\t\t\tv.maxHeight = t.position.y;\n\t\t\t}\n\t\t\tt.position.y += v.velocity * event.dt;\n\t\t\tif(t.position.y <= v.minHeight) {\n\t\t\t\tt.position.y = v.minHeight;\n\t\t\t\tv.velocity = 0;\n\t\t\t\tif(!v.done.isResolved()) {\n\t\t\t\t\tv.finish();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","package minigames.captainknowitall;\r\n\r\nimport tusk.Component;\r\nimport hxColorToolkit.spaces.HSB;\r\n\r\nclass ColourShiftComponent extends Component {\r\n\tpublic var colourMain:HSB;\r\n\tpublic var colourSecond:HSB;\r\n\tpublic var t:Float;\r\n\tpublic var fadeTime:Float;\r\n\tpublic var active:Bool = false;\r\n\r\n\tpublic var startSaturation:Float = 75;\r\n\tpublic var mainStartBrightness:Float = 90;\r\n\tpublic var secondStartBrightness:Float = 10;\r\n\r\n\tpublic var easing:Float->Float->Float->Float->Float;\r\n\r\n\tpublic function reset(hue:Float) {\r\n\t\tt = 0;\r\n\t\tcolourMain = new HSB(hue, startSaturation, mainStartBrightness);\r\n\t\tcolourSecond = new HSB(hue, startSaturation, secondStartBrightness);\r\n\t}\r\n\r\n\tpublic function new(hue:Float, fadeTime:Float, easing:Float->Float->Float->Float->Float) {\r\n\t\tthis.fadeTime = fadeTime;\r\n\t\tthis.easing = easing;\r\n\t\treset(hue);\r\n\t\tsuper();\r\n\t}\r\n}","package minigames.captainknowitall;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.Entity;\r\nimport tusk.events.UpdateEvent;\r\nimport tusk.lib.comp.MeshComponent;\r\nimport tusk.Tusk;\r\nimport hxColorToolkit.spaces.RGB;\r\nimport glm.Vec4;\r\n\r\nclass ColourShiftProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(ColourShiftComponent.tid).include(MeshComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(event:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar c:ColourShiftComponent = cast entity.get(ColourShiftComponent.tid);\r\n\t\t\tvar m:MeshComponent = cast entity.get(MeshComponent.tid);\r\n\r\n\t\t\tc.colourMain.saturation = c.easing(c.t, c.startSaturation, 0 - c.startSaturation, c.fadeTime);\r\n\t\t\tc.colourSecond.saturation = c.easing(c.t, c.startSaturation, 0 - c.startSaturation, c.fadeTime);\r\n\t\t\tc.colourMain.brightness = c.easing(c.t, c.mainStartBrightness, 0 - c.mainStartBrightness, c.fadeTime);\r\n\t\t\tc.colourSecond.brightness = c.easing(c.t, c.secondStartBrightness, 0 - c.secondStartBrightness, c.fadeTime);\r\n\r\n\t\t\tvar topColour:RGB = c.colourMain.toRGB();\r\n\t\t\tvar botColour:RGB = c.colourSecond.toRGB();\r\n\r\n\t\t\tvar top:Vec4 = new Vec4(topColour.red, topColour.green, topColour.blue, 255) / 255;\r\n\t\t\tvar bot:Vec4 = new Vec4(botColour.red, botColour.green, botColour.blue, 255) / 255;\r\n\r\n\t\t\tm.mesh.colours[0].copy(bot);\r\n\t\t\tm.mesh.colours[1].copy(bot);\r\n\t\t\tm.mesh.colours[2].copy(top);\r\n\t\t\tm.mesh.colours[3].copy(top);\r\n\t\t\tm.mesh.colours[4].copy(top);\r\n\t\t\tm.mesh.colours[5].copy(bot);\r\n\t\t\tm.bufferDirty = true;\r\n\r\n\t\t\tif(!c.active) continue;\r\n\t\t\tc.t += event.dt;\r\n\t\t\tif(c.t >= c.fadeTime) {\r\n\t\t\t\tc.t = c.fadeTime;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package minigames.captainknowitall;\r\n\r\nimport tusk.PromiseComponent;\r\n\r\nclass PlayerAnswerComponent extends PromiseComponent {\r\n\tpublic var player:Int;\r\n\tpublic var answer:Int;\r\n\tpublic var timer:PlayerTimerComponent;\r\n\r\n\tpublic var aiAnswerTimer:Float = tusk.math.Random.float(0.1, 1);\r\n\r\n\tpublic function new(player:Int, timer:PlayerTimerComponent) {\r\n\t\tthis.player = player;\r\n\t\tthis.answer = -1;\r\n\t\tthis.timer = timer;\r\n\t\tsuper();\r\n\t}\r\n}\r\n","package minigames.captainknowitall;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.Entity;\r\nimport tusk.events.UpdateEvent;\r\nimport tusk.lib.comp.TextComponent;\r\nimport tusk.Tusk;\r\n\r\nclass PlayerAnswerProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(PlayerAnswerComponent.tid).include(TextComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(event:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar p:PlayerAnswerComponent = cast entity.get(PlayerAnswerComponent.tid);\r\n\t\t\tvar t:TextComponent = cast entity.get(TextComponent.tid);\r\n\r\n\t\t\t// if the timer isn't active or they've run out of time, they can't answer!\r\n\t\t\tif(p.timer.active && p.timer.t > 0) {\r\n\t\t\t\tif(GameTracker.player[p.player].isCPU) {\r\n\t\t\t\t\t// TODO\r\n\t\t\t\t\tp.aiAnswerTimer -= event.dt;\r\n\t\t\t\t\tif(p.aiAnswerTimer <= 0) {\r\n\t\t\t\t\t\t// answer the question!\r\n\t\t\t\t\t\tvar dice:Float = tusk.math.Random.float(0, 1);\r\n\t\t\t\t\t\tif(dice >= 0.15) {\r\n\t\t\t\t\t\t\t// answer correctly\r\n\t\t\t\t\t\t\tLog.info('AI answering correctly');\r\n\t\t\t\t\t\t\tp.answer = CaptainKnowItAll.aIsCorrect ? 0 : 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// answer incorrectly\r\n\t\t\t\t\t\t\tLog.info('AI answering incorrectly');\r\n\t\t\t\t\t\t\tp.answer = CaptainKnowItAll.aIsCorrect ? 1 : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tp.timer.active = false;\r\n\t\t\t\t\t\tp.finish();\r\n\r\n\t\t\t\t\t\t// reset the timer\r\n\t\t\t\t\t\tp.aiAnswerTimer = tusk.math.Random.float(0.05, 0.75);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(Tusk.instance.app.input.keydown(GameTracker.player[p.player].btnA)) {\r\n\t\t\t\t\t\tp.timer.active = false;\r\n\t\t\t\t\t\tp.answer = 0;\r\n\t\t\t\t\t\tp.finish();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(Tusk.instance.app.input.keydown(GameTracker.player[p.player].btnB)) {\r\n\t\t\t\t\t\tp.timer.active = false;\r\n\t\t\t\t\t\tp.answer = 1;\r\n\t\t\t\t\t\tp.finish();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(p.timer.t <= 0 && !p.done.isResolved()) {\r\n\t\t\t\tp.finish();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package minigames.captainknowitall;\r\n\r\nimport tusk.Component;\r\n\r\nclass PlayerScoreComponent extends Component {\r\n\tpublic var player:Int;\r\n\tpublic var score:Int;\r\n\r\n\tpublic function new(player:Int) {\r\n\t\tthis.player = player;\r\n\t\tscore = 0;\r\n\t\tsuper();\r\n\t}\r\n}\r\n","package minigames.captainknowitall;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.Entity;\r\nimport tusk.events.UpdateEvent;\r\nimport tusk.lib.comp.TextComponent;\r\nimport tusk.Tusk;\r\n\r\nclass PlayerScoreProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(PlayerScoreComponent.tid).include(TextComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(event:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar p:PlayerScoreComponent = cast entity.get(PlayerScoreComponent.tid);\r\n\t\t\tvar t:TextComponent = cast entity.get(TextComponent.tid);\r\n\r\n\t\t\tt.text = '${GameTracker.player[p.player].name}: ${p.score}';\r\n\t\t}\r\n\t}\r\n}","package minigames.captainknowitall;\r\n\r\nimport tusk.Component;\r\n\r\nclass PlayerTimerComponent extends Component {\r\n\tpublic var t:Float;\r\n\tpublic var active:Bool = false;\r\n\r\n\tpublic function new(t:Float) {\r\n\t\tthis.t = t;\r\n\t\tsuper();\r\n\t}\r\n}\r\n","package minigames.captainknowitall;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.Entity;\r\nimport tusk.events.UpdateEvent;\r\nimport tusk.lib.comp.TextComponent;\r\nimport tusk.Tusk;\r\n\r\nclass PlayerTimerProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(PlayerTimerComponent.tid).include(TextComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(event:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar p:PlayerTimerComponent = cast entity.get(PlayerTimerComponent.tid);\r\n\t\t\tvar t:TextComponent = cast entity.get(TextComponent.tid);\r\n\r\n\t\t\tif(p.active && p.t > 0) {\r\n\t\t\t\tp.t -= event.dt;\r\n\t\t\t\tif(p.t < 0) p.t = 0;\r\n\t\t\t}\r\n\r\n\t\t\tt.text = Util.floatToStringPrecision(p.t, 3);\r\n\t\t}\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.Component;\r\nimport tusk.resources.Mesh;\r\n\r\nclass AnimatedSledComponent extends Component {\r\n\tpublic var frameTime:Float;\r\n\tpublic var t:Float = 0;\r\n\tpublic var frame:Int;\r\n\tpublic var frames:Int;\r\n\tpublic var mesh:Mesh;\r\n\r\n\tpublic var uvxDelta:Float;\r\n\r\n\tpublic function new(mesh:Mesh, frames:Int, frameRate:Float) {\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.t = 0;\r\n\t\tthis.frame = tusk.math.Random.int(0, frames - 1);\r\n\t\tthis.frames = frames;\r\n\t\tthis.uvxDelta = 1.0 / frames;\r\n\t\tthis.frameTime = 1.0 / frameRate;\r\n\t\tsuper();\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.Entity;\r\nimport tusk.events.UpdateEvent;\r\nimport tusk.lib.comp.MeshComponent;\r\nimport tusk.Tusk;\r\n\r\nclass AnimatedSledProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(AnimatedSledComponent.tid).include(MeshComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(event:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar a:AnimatedSledComponent = cast entity.get(AnimatedSledComponent.tid);\r\n\t\t\tvar m:MeshComponent = cast entity.get(MeshComponent.tid);\r\n\r\n\t\t\ta.t += event.dt;\r\n\t\t\tif(a.t >= a.frameTime) {\r\n\t\t\t\ta.t = 0;\r\n\t\t\t\ta.frame++;\r\n\t\t\t\tif(a.frame >= a.frames) {\r\n\t\t\t\t\ta.frame = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tm.mesh.uvs[0].x = a.frame * a.uvxDelta;\r\n\t\t\t\tm.mesh.uvs[1].x = (a.frame + 1) * a.uvxDelta;\r\n\t\t\t\tm.mesh.uvs[2].x = (a.frame + 1) * a.uvxDelta;\r\n\t\t\t\tm.mesh.uvs[3].x = (a.frame + 1) * a.uvxDelta;\r\n\t\t\t\tm.mesh.uvs[4].x = a.frame * a.uvxDelta;\r\n\t\t\t\tm.mesh.uvs[5].x = a.frame * a.uvxDelta;\r\n\r\n\t\t\t\tm.bufferDirty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.PromiseComponent;\r\n\r\nclass CollisionComponent extends PromiseComponent {\r\n\tpublic var radius:Float;\r\n\tpublic var layer:Int;\r\n\tpublic function new(radius:Float, layer:Int=1) {\r\n\t\tthis.radius = radius;\r\n\t\tthis.layer = layer;\r\n\t\tsuper();\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.Entity;\r\nimport tusk.events.UpdateEvent;\r\nimport tusk.lib.comp.TransformComponent;\r\nimport tusk.Tusk;\r\n\r\nimport glm.Vec2;\r\n\r\nclass CollisionProcessor extends Processor {\r\n\tprivate static var scrollSpeed:Float = 512;\r\n\tinline private static var scrollAcceleration:Float = 2;\r\n\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(CollisionComponent.tid).include(TransformComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(event:UpdateEvent):Void {\r\n\t\tvar testVec:Vec2 = new Vec2();\r\n\t\tfor(entityA in entities) {\r\n\t\t\tvar sa:CollisionComponent = cast entityA.get(CollisionComponent.tid);\r\n\t\t\t// ignore things that have already resolved\r\n\t\t\tif(sa.done.isResolved()) continue;\r\n\t\t\tfor(entityB in entities) {\r\n\t\t\t\t// don't intersect with ourself.\r\n\t\t\t\tif(entityA == entityB) continue;\r\n\r\n\t\t\t\tvar sb:CollisionComponent = cast entityB.get(CollisionComponent.tid);\r\n\t\t\t\t// ignore things that have already resolved\r\n\t\t\t\tif(sb.done.isResolved()) continue;\r\n\r\n\t\t\t\t// ignore things that are on the same layer\r\n\t\t\t\tif(sa.layer == sb.layer) continue;\r\n\r\n\t\t\t\t// grab the transforms to see if they're close\r\n\t\t\t\tvar ta:TransformComponent = cast entityA.get(TransformComponent.tid);\r\n\t\t\t\tvar tb:TransformComponent = cast entityB.get(TransformComponent.tid);\r\n\r\n\t\t\t\t// do the actual check\r\n\t\t\t\ttestVec.x = ta.position.x - tb.position.x;\r\n\t\t\t\ttestVec.y = ta.position.y - tb.position.y;\r\n\t\t\t\tvar sqrLength:Float = testVec.sqrLength();\r\n\t\t\t\tvar intersecting:Bool = ((sa.radius-sb.radius)*(sa.radius-sb.radius) <= sqrLength) \r\n\t\t\t\t\t\t\t\t\t\t&& (sqrLength <= (sa.radius+sb.radius)*(sa.radius+sb.radius));\r\n\t\t\t\tif(intersecting) {\r\n\t\t\t\t\tsa.finish();\r\n\t\t\t\t\tsb.finish();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.Component;\r\n\r\nclass MovementComponent extends Component {\r\n\tpublic var player:Int;\r\n\tpublic var velocity:Float;\r\n\r\n\tpublic function new(player:Int) {\r\n\t\tthis.player = player;\r\n\t\tthis.velocity = 0;\r\n\t\tsuper();\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.Entity;\r\nimport tusk.events.UpdateEvent;\r\nimport tusk.lib.comp.TransformComponent;\r\nimport tusk.Tusk;\r\n\r\nimport glm.Vec2;\r\n\r\nclass MovementProcessor extends Processor {\r\n\tinline private static var cpuAcceleration:Float = 1024;\r\n\tinline private static var acceleration:Float = 1536;\r\n\tinline private static var topSpeed:Float = 384;\r\n\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(MovementComponent.tid).include(TransformComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(event:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar t:TransformComponent = cast entity.get(TransformComponent.tid);\r\n\t\t\tvar m:MovementComponent = cast entity.get(MovementComponent.tid);\r\n\r\n\t\t\tvar axis:Float = 0;\r\n\t\t\tif(GameTracker.player[m.player].isCPU) {\r\n\t\t\t\t// get a weighted sum of all obstacle x-positions\r\n\t\t\t\tvar highestY:Float = 32;\r\n\t\t\t\tfor(ot in SledTillYoureDead.obstacles) {\r\n\t\t\t\t\t// skip one's we've already passed\r\n\t\t\t\t\tif(ot.position.y >= t.position.y) continue;\r\n\t\t\t\t\r\n\t\t\t\t\t// see if there is an obstacle directly in our path\r\n\t\t\t\t\tvar delta:Float = t.position.x - ot.position.x;\r\n\t\t\t\t\tif(ot.position.y > highestY && Math.abs(delta) < 64) {\r\n\t\t\t\t\t\taxis = delta > 0 ? 1 : -1;\r\n\t\t\t\t\t\thighestY = ot.position.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// get the desired movement\r\n\t\t\t\tif(Tusk.instance.app.input.keydown(GameTracker.player[m.player].btnA)) axis -= 1.0;\r\n\t\t\t\tif(Tusk.instance.app.input.keydown(GameTracker.player[m.player].btnB)) axis += 1.0;\r\n\t\t\t}\r\n\r\n\t\t\tt.lastPosition.copy(t.position);\r\n\t\t\tif(axis != 0) m.velocity += (GameTracker.player[m.player].isCPU ? cpuAcceleration : acceleration) * event.dt;\r\n\t\t\telse m.velocity = 0;\r\n\t\t\tm.velocity = tusk.math.MathTools.clamp(m.velocity, -topSpeed, topSpeed);\r\n\t\t\tt.position.x += m.velocity * event.dt * axis;\r\n\t\t\tt.position.x = tusk.math.MathTools.clamp(t.position.x, -380, 380);\r\n\t\t}\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.Component;\r\n\r\nclass ScrollComponent extends Component {\r\n\tpublic var clipY:Float;\r\n\tpublic var repeat:Bool;\r\n\tpublic var resetY:Float;\r\n\r\n\tpublic function new(clipY:Float, ?repeat:Bool, ?resetY:Float) {\r\n\t\tthis.clipY = clipY;\r\n\t\tthis.repeat = repeat == null ? false : repeat;\r\n\t\tthis.resetY = resetY == null ? 0 : resetY;\r\n\t\tsuper();\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.Entity;\r\nimport tusk.events.UpdateEvent;\r\nimport tusk.lib.comp.TransformComponent;\r\nimport tusk.Tusk;\r\n\r\nclass ScrollProcessor extends Processor {\r\n\tprivate static var scrollSpeed:Float = 256;\r\n\tinline private static var scrollAcceleration:Float = 16;\r\n\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(ScrollComponent.tid).include(TransformComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(event:UpdateEvent):Void {\r\n\t\tscrollSpeed += scrollAcceleration * event.dt;\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar t:TransformComponent = cast entity.get(TransformComponent.tid);\r\n\t\t\tvar s:ScrollComponent = cast entity.get(ScrollComponent.tid);\r\n\r\n\t\t\tt.lastPosition.copy(t.position);\r\n\t\t\tt.position.y += scrollSpeed * event.dt;\r\n\t\t\t\r\n\t\t\tif(t.position.y >= s.clipY) {\r\n\t\t\t\tif(s.repeat) {\r\n\t\t\t\t\tt.position.y -= s.resetY;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tTusk.removeEntity(entity);\r\n\t\t\t\t\tSledTillYoureDead.obstacles.remove(t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.Component;\r\n\r\nclass SpawnComponent extends Component {\r\n\tpublic var spawn:Void->Void;\r\n\tpublic var spawnAccumulator:Float = 0;\r\n\r\n\tpublic function new(spawn:Void->Void) {\r\n\t\tthis.spawn = spawn;\r\n\t\tsuper();\r\n\t}\r\n}","package minigames.sledtillyouredead;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.Entity;\r\nimport tusk.events.UpdateEvent;\r\nimport tusk.Tusk;\r\n\r\nclass SpawnProcessor extends Processor {\r\n\tprivate inline static var spawnAcceleration:Float = 0.5;\r\n\tprivate static var spawnRate:Float = 0;\r\n\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(SpawnComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(event:UpdateEvent):Void {\r\n\t\tspawnRate += spawnAcceleration * event.dt;\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar s:SpawnComponent = cast entity.get(SpawnComponent.tid);\r\n\r\n\t\t\tvar obstaclesToSpawn:Int = Std.int(spawnRate * event.dt);\r\n\t\t\tif(s.spawnAccumulator >= 1.0) {\r\n\t\t\t\tobstaclesToSpawn += 1;\r\n\t\t\t\ts.spawnAccumulator -= 1.0;\r\n\t\t\t}\r\n\t\t\ts.spawnAccumulator += (spawnRate * event.dt) - obstaclesToSpawn;\r\n\r\n\t\t\tfor(i in 0...obstaclesToSpawn) {\r\n\t\t\t\ts.spawn();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","/**\n  This is a primitive asynchronous class, used as a base class for Promise and\n  Signal.\n **/\n\n\npackage promhx.base;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Context;\n#end\nimport promhx.base.EventLoop;\nimport promhx.Thenable;\n\ntypedef AsyncLink<T> = {\n    async : AsyncBase<Dynamic>,\n    linkf : T->Void\n}\n\n\nclass AsyncBase<T>{\n#if debug\n    // add ids to the async instances so they are easier to track\n    static var id_ctr  = 0;\n    var id          : Int;\n#end\n    var _val        : T;\n    var _resolved   : Bool;\n    var _fulfilled  : Bool;\n    var _pending    : Bool;\n    var _update     : Array<AsyncLink<T>>;\n    var _error      : Array<Dynamic->Void>;\n    var _errored    : Bool;\n    var _errorMap   : Dynamic->T;\n    var _errorVal   : Dynamic;\n    var _errorPending : Bool;\n\n    public function new(?d:Deferred<T>) {\n#if debug id = id_ctr +=1; #end\n        _resolved   = false;\n        _pending = false;\n        _errorPending = false;\n        _fulfilled  = false;\n        _update     = [];\n        _error      = [];\n        _errored    = false;\n\n        if (d != null){\n            link(d,this, function(x) return x);\n        }\n\n    }\n\n    /**\n      Catch error, effectively halting the current update chain.\n      This will prevent downstream async objects from receiving\n      the error message.\n     **/\n    public function catchError(f : Dynamic->Void) {\n        _error.push(f);\n        return this;\n    }\n\n    /**\n      Map errors back to the expected type, and continue as normal.\n     **/\n    public function errorThen( f : Dynamic -> T){\n        _errorMap = f;\n        return this;\n    }\n\n    /**\n      Utility function to determine if a Promise value has been resolved.\n     **/\n    public inline function isResolved() : Bool\n        return _resolved;\n\n    /**\n      Utility function to determine if a Promise value is in an error state.\n     **/\n    public inline function isErrored() : Bool\n        return _errored;\n\n    /**\n      Utility function to determine if a Promise has handled the error.\n     **/\n    public inline function isErrorHandled() : Bool\n        return _error.length > 0;\n\n    /**\n      Utility function to determine if a Promise error is pending.\n     **/\n    public inline function isErrorPending() : Bool\n        return _errorPending;\n\n    /**\n      Utility function to determine if a Promise value has been rejected.\n     **/\n    public inline function isFulfilled(): Bool\n        return _fulfilled;\n\n    /**\n      Utility function to determine if a Promise value is pending operations\n      on the next loop.\n     **/\n    public inline function isPending() : Bool\n        return _pending;\n\n\n    function handleResolve(val:T) : Void {\n        _resolve(val);\n    }\n    /**\n      Resolves the given value for processing on any waiting functions.\n     **/\n    function _resolve(val : T) : Void {\n\n        // this async is pending an update on the next loop, move the\n        // resolve to the loop after that.\n        if (_pending){\n            EventLoop.enqueue(_resolve.bind(val));\n        } else {\n\n            // point of no return, this async has now been resolved at least once.\n            _resolved = true;\n\n            // we are now in the act of fulfilling the async... which\n            // involves waiting for the next enqueued loop\n            _pending = true;\n\n            // the loop handler, which may not even be used\n            EventLoop.enqueue(function(){\n                _val = val; // save the value\n                for (up in _update){\n#if PromhxExposeErrors\n                    up.linkf(val);\n#else\n                    try up.linkf(val)\n                catch (e:Dynamic) up.async.handleError(e);\n#end\n                }\n                _fulfilled = true; // we're in a fulfilled state\n                _pending = false; // we're done fulfilling for this resolve\n            });\n        }\n\n    }\n\n    /**\n      Handle errors, can be overridden\n     **/\n    function handleError(error : Dynamic) : Void {\n        _handleError(error);\n    }\n\n    function _handleError(error : Dynamic) : Void {\n        var update_errors = function(e:Dynamic){\n            if (_error.length > 0) for (ef in _error) ef(e);\n            else if (_update.length > 0) for (up in _update) up.async.handleError(e);\n            else {\n#if (js && nodejs)\n                // Node sometimes doesn't produce helpful stack information on thrown errors.\n                trace('Call Stack: ' + haxe.CallStack.toString(haxe.CallStack.callStack()));\n#end\n                throw e;\n            }\n            this._errorPending = false;\n        }\n        if (!_errorPending){\n            _errorPending = true;\n            _errored = true;\n            _errorVal = error;\n\n            EventLoop.enqueue(function(){\n                if (_errorMap != null){\n#if PromhxExposeErrors\n                    this._resolve(_errorMap(error));\n                    _resolve(_errorMap(error));\n#else\n                    try this._resolve(_errorMap(error))\n                        catch (e : Dynamic) update_errors(e);\n#end\n                } else {\n                    update_errors(error);\n                }\n            });\n        }\n    }\n\n    /**\n      This function returns a new AsyncBase.  When this instance resolves,\n      it will resolve the new AsyncBase with the function callback argument.\n     **/\n    public function then<A>(f : T->A) : AsyncBase<A> {\n        var ret = new AsyncBase<A>();\n        link(this, ret, f);\n        return ret;\n    }\n\n    /**\n      Remove an Async that is updated from this Async.  This action is\n      performed on the next event loop.\n     **/\n    public function unlink( to : AsyncBase<Dynamic>) {\n        EventLoop.enqueue(function(){\n            _update =  _update.filter(function(x) return x.async != to);\n        });\n    }\n\n    /**\n      Determine if an Async is updated from this Async.\n     **/\n    public function isLinked( to : AsyncBase<Dynamic>) : Bool {\n        var updated = false;\n        for (u in _update) if (u.async == to) return true;\n        return updated;\n    }\n\n\n    /**\n      This is the base \"link\" method for wiring up the \"current\" async to\n      the \"next\" one via the transform defined by the f argument.\n     **/\n    inline public static function link<A,B>\n        (current : AsyncBase<A>, next: AsyncBase<B>, f : A->B) : Void\n    {\n        // the function wrapper for the callback, which will resolve the return\n        // if current is not resolved, or will resolve next loop, push to\n        // update queues.\n        current._update.push({\n            async : next,\n            linkf : function(x){\n                next.handleResolve(f(x));\n            }\n        });\n        immediateLinkUpdate(current, next, f);\n    }\n\n    static function immediateLinkUpdate<A,B>\n        (current : AsyncBase<A>, next : AsyncBase<B>, f : A->B) : Void\n    {\n        if (current.isErrored()  // is there an error?\n                && !current.isErrorPending()  // if the error is pending, we can rely on current to update this async on the next loop.\n                && !current.isErrorHandled() ) // if the error is handled by current, we'll ignore it.\n                    next.handleError(current._errorVal);\n\n        // then the value\n        if (current.isResolved() && !current.isPending()){\n            // we can go ahead and resolve this.\n#if PromhxExposeErrors\n            next.handleResolve(f(current._val));\n#else\n            try next.handleResolve(f(current._val))\n            catch (e:Dynamic) next.handleError(e);\n#end\n        }\n\n    }\n\n    inline public static function linkAll<T>\n        (all : Iterable<AsyncBase<T>>, next: AsyncBase<Array<T>>) : Void\n    {\n        // a helper callback function.  This will be called for each Stream in\n        // the iterable argument.  The \"arr\" argument will be all of the Streams\n        // *except* the one currently resolving.  If there's only one Stream\n        // in the iterable, it will always resolve.\n        var cthen = function(arr:Array<AsyncBase<T>>, current:AsyncBase<T>,  v){\n            if (arr.length == 0 || AsyncBase.allFulfilled(arr)){\n                var vals = [for (a in all) a == current ? v : a._val];\n                next.handleResolve(vals);\n            }\n            return null;\n        };\n        for (a in all){\n            a._update.push({\n                async : next,\n                linkf: cthen.bind([for (a2 in all) if (a2 != a) a2], a, _)\n            });\n        }\n\n        if (AsyncBase.allFulfilled(all)) {\n            next.handleResolve([for (a in all) a._val]);\n        }\n    }\n\n    /**\n      Similar to the link function, except the [f] function must return an\n      AsyncBase instance.\n     **/\n    inline static public function pipeLink<A,B>\n        ( current : AsyncBase<A>, ret : AsyncBase<B>, f : A->AsyncBase<B> ) : Void\n    {\n        var linked = false;\n        var linkf = function(x){ // updates go to pipe function.\n                if (!linked){ // but only once\n                    linked = true; // the piped async doesn't actually respond to updates from current\n                    var pipe_ret = f(x); // it just needs to be created\n                    pipe_ret._update.push({  // and to be linked to ret\n                        async : ret, // errors go to ret\n                        linkf : ret.handleResolve // updates go directly to ret\n                    });\n                    immediateLinkUpdate(pipe_ret, ret, function(x) return x );\n                }\n            }\n\n        current._update.push({\n            async : ret, // errors go to ret\n            linkf : linkf\n        });\n\n        if (current.isResolved() && !current.isPending()){\n#if PromhxExposeErrors\n            linkf(current._val);\n#else\n            try linkf(current._val)\n            catch (e:Dynamic) ret.handleError(e);\n#end\n        }\n    }\n\n    /**\n      Utility function to determine if all Promise values are set.\n     **/\n    public static function allResolved\n        (as : Iterable<AsyncBase<Dynamic>>) : Bool\n    {\n        for (a in as) {\n            if (!a.isResolved()) return false;\n        }\n        return true;\n    }\n\n    /**\n      Utility function to determine if all Promise values are resolved and\n      are currently fulfilled (not in the process of fulfilling).\n     **/\n    static function allFulfilled\n        (as : Iterable<AsyncBase<Dynamic>>) : Bool\n    {\n        for (a in as) {\n            if (!a.isFulfilled()) return false;\n        }\n        return true;\n    }\n\n}\n","package promhx;\nimport promhx.base.AsyncBase;\n\n@:expose\nclass Deferred<T> extends AsyncBase<T> {\n\n    public function new() super();\n\n    /**\n      The public write interface\n     **/\n    public function resolve(val:T) handleResolve(val);\n\n    inline public function throwError(e:Dynamic) handleError(e);\n\n    /**\n      Returns a new promise based on the current deferred instance\n     **/\n    public function promise(){\n        return new Promise(this);\n    }\n\n    /**\n      Returns a new stream based on the current deferred instance\n     **/\n    public function stream(){\n        return new Stream(this);\n    }\n\n    /**\n      Returns a stream based on the current deferred instance\n     **/\n    public function publicStream(){\n        return new PublicStream(this);\n    }\n}\n","\npackage promhx;\n\n@:expose\nclass PublicStream<T> extends Stream<T> {\n    public function new(?def : Deferred<T>){\n        super(def);\n    }\n    inline public function resolve(val:T) this.handleResolve(val);\n    inline public function throwError(e:Dynamic) handleError(e);\n    inline public function update(val:T) this.handleResolve(val);\n    inline public static function publicstream<T>(val:T){\n        var ps = new PublicStream();\n        ps.resolve(val);\n        return ps;\n    }\n}\n","package promhx.base;\n\nprivate typedef Queue = #if java java.vm.AtomicList #else List #end <Void->Void>;\n\nclass EventLoop {\n    static var queue : Queue = new Queue();\n\n    // public static var nextLoop(default, set) : (Void->Void)-> Void;\n    public static var nextLoop : (Void->Void)-> Void;\n\n#if (js && !nodejs && !noEmbedJs && !noEmbedSetImmediate)\n    static function __init__() untyped {\n#if !nodejs\n        // we need to use global as an alternate since setImmediate expects this == window\n        var global = window;\n#end\n        haxe.macro.Compiler.includeFile(\"lib/setImmediate/setImmediate.js\");\n    }\n#end\n\n    public static inline function enqueue(eqf:Void->Void)  {\n        queue.add(eqf);\n        continueOnNextLoop();\n    }\n    static function set_nextLoop(f : (Void->Void)->Void) : (Void->Void)->Void{\n        if (nextLoop != null) throw \"nextLoop has already been set\";\n        else nextLoop = f;\n        return nextLoop;\n    }\n\n    /**\n      Retrieve the current length of the queue.\n     **/\n    public static inline function queueEmpty() {\n        return #if java queue.peekLast() == null #else queue.isEmpty() #end;\n    }\n\n    /**\n      Attempt to finish the remaining loops in the queue.  Returns true\n      if all loops are finished.  If [max_iterations] pass, then exit and\n      return false.\n     **/\n    public static function finish(max_iterations = 1000){\n        var fn = null;\n        while (max_iterations-- > 0 && (fn = queue.pop()) != null){\n            fn();\n        }\n        return queueEmpty();\n    }\n\n    /**\n      Clear the existing event loop queue.\n     **/\n    public static function clear(){\n        queue = new Queue();\n    }\n\n    static function f(){\n        var fn = queue.pop();\n        if (fn != null) fn();\n        if (!queueEmpty()) continueOnNextLoop();\n    }\n\n    static function continueOnNextLoop(){\n        if (nextLoop != null) nextLoop(f);\n        else {\n\n#if flash\n            haxe.Timer.delay(f,0);\n#elseif (js && (noEmbedJs || noEmbedSetImmediate) && !nodejs)\n            // fallback to setTimeout\n            untyped __js__(\"(typeof setImmediate === 'function' ? setImmediate : setTimeout)\")(f);\n#elseif js\n            // use polyfill or native node\n            untyped __js__(\"setImmediate\")(f);\n#else\n            f();\n#end\n        }\n    }\n}\n","package snow;\r\n\r\nimport snow.system.input.Input;\r\nimport snow.types.Types;\r\n\r\n    //Note all times in snow are in seconds.\r\n\r\n/** The default type of snow application, with variable delta, update limit, render limit, timescale and more. \r\n    See the {App Guide} for complete details. */\r\nclass App {\r\n\r\n//Access to the snow API\r\n\r\n        /** use this to access the api features. *i.e* `app.assets.text(_id)` */\r\n    public var app : Snow;\r\n\r\n//Configurable values\r\n\r\n        /** the scale of time */\r\n    public var timescale : Float = 1;\r\n        /** if this is non zero this will be passed in */\r\n    public var fixed_delta : Float = 0;\r\n        /** if this is non zero, rendering will be forced to this rate */\r\n    public var render_rate : Float = -1;\r\n        /** if this is non zero, updates will be forced to this rate */\r\n    public var update_rate : Float = 0;\r\n        /** the maximum frame time */\r\n    public var max_frame_time : Float = 0.25;\r\n\r\n//Timing information\r\n\r\n        /** the time the last frame took to run */\r\n    public var delta_time : Float = 1/60;\r\n        /** the simulated time the last frame took to run, relative to scale etc */\r\n    public var delta_sim : Float = 1/60;\r\n        /** the start time of the last frame */\r\n    public var last_frame_start : Float = 0.0;\r\n        /** the current simulation time */\r\n    public var current_time : Float = 0;\r\n        /** the start time of this frame */\r\n    public var cur_frame_start : Float = 0.0;\r\n        /** the alpha time for a render between frame updates */\r\n    public var alpha : Float = 1.0;\r\n\r\n//Internal values\r\n\r\n        /** for update_rate, the time when the next tick should occur around */\r\n    var next_tick : Float = 0;\r\n        /** for update_rate, the time when the next tick should occur around */\r\n    var next_render : Float = 0;\r\n\r\n//override these in your game class\r\n\r\n        /** The default constructor of an App is empty, so you can override it if you want, but take note that this happens way before snow is ready for use. Use [ready](#ready) for entry point. */\r\n    public function new() {}\r\n        /** Called by snow to request config changes, override this to change the defaults.\r\n            This happens before ready, so the values are available when ready is called. */\r\n    public function config( config:AppConfig ) : AppConfig  { return config; }\r\n        /** Your entry point. Called for you when you can initialize your application */\r\n    public function ready() {}\r\n        /** Your update loop. Called every frame for you. The dt value depends on the timing configuration (see the {App Guide}) */\r\n    public function update(dt:Float) {}\r\n        /** Your exit point. Called for you when you should shut down your application */\r\n    public function ondestroy() {}\r\n        /** Low level event handler from snow core. Often handled by the subsystems so check there first. */\r\n    public function onevent( event:SystemEvent ) {}\r\n\r\n        /** Called each frame *before* everything, the beginning of the frame. Use with understanding. */\r\n    public function ontickstart() {}\r\n        /** Called each frame *after* everything, at the end of the frame. Use with understanding. */\r\n    public function ontickend() {}\r\n\r\n        /** Called for you when a key is pressed down */\r\n    public function onkeydown( keycode:Int, scancode:Int, repeat:Bool, mod:ModState, timestamp:Float, window_id:Int ) {}\r\n        /** Called for you when a key is released */\r\n    public function onkeyup( keycode:Int, scancode:Int, repeat:Bool, mod:ModState, timestamp:Float, window_id:Int ) {}\r\n        /** Called for you when text input is happening. Use this for textfields, as it handles the complexity of unicode etc. */\r\n    public function ontextinput( text:String, start:Int, length:Int, type:TextEventType, timestamp:Float, window_id:Int ) {}\r\n\r\n        /** Called for you when a mouse button is pressed */\r\n    public function onmousedown( x:Int, y:Int, button:Int, timestamp:Float, window_id:Int ) {}\r\n        /** Called for you when a mouse button is released */\r\n    public function onmouseup( x:Int, y:Int, button:Int, timestamp:Float, window_id:Int ) {}\r\n        /** Called for you when the mouse wheel moves */\r\n    public function onmousewheel( x:Int, y:Int, timestamp:Float, window_id:Int ) {}\r\n        /** Called for you when the mouse moves */\r\n    public function onmousemove( x:Int, y:Int, xrel:Int, yrel:Int, timestamp:Float, window_id:Int ) {}\r\n\r\n        /** Called for you when a touch is released, use the `touch_id` to track which */\r\n    public function ontouchdown( x:Float, y:Float, touch_id:Int, timestamp:Float ) {}\r\n        /** Called for you when a touch is first pressed, use the `touch_id` to track which */\r\n    public function ontouchup( x:Float, y:Float, touch_id:Int, timestamp:Float ) {}\r\n        /** Called for you when a touch is moved, use the `touch_id` to track which */\r\n    public function ontouchmove( x:Float, y:Float, dx:Float, dy:Float, touch_id:Int, timestamp:Float ) {}\r\n\r\n        /** Called for you when a connected gamepad axis moves, use `which` to determine gamepad id */\r\n    public function ongamepadaxis( gamepad:Int, axis:Int, value:Float, timestamp:Float ) {}\r\n        /** Called for you when a connected gamepad button is pressed, use `which` to determine gamepad id */\r\n    public function ongamepaddown( gamepad:Int, button:Int, value:Float, timestamp:Float ) {}\r\n        /** Called for you when a connected gamepad button is released, use `which` to determine gamepad id */\r\n    public function ongamepadup( gamepad:Int, button:Int, value:Float, timestamp:Float ) {}\r\n        /** Called for you when a gamepad is connected or disconnected, use `which` to determine gamepad id. \r\n            `id` is the string name identifier for the controller, specified from the system. */\r\n    public function ongamepaddevice( gamepad:Int, id:String, type:GamepadDeviceEventType, timestamp:Float ) {}\r\n\r\n\r\n\r\n//No need to interact with these, unless you want pre-ready init, just call super.on_internal_init() etc\r\n//to maintain expected App behavior. You can override behavior in the base class, like AppFixedTimestep\r\n\r\n        //internal facing api\r\n    @:allow(snow.Snow)\r\n    function on_internal_init() {\r\n\r\n        cur_frame_start = app.time;\r\n        last_frame_start = cur_frame_start;\r\n        current_time = 0;\r\n        delta_time = 0.016;\r\n\r\n    } //on_internal_init\r\n\r\n    @:allow(snow.Snow)\r\n    function on_internal_update() {\r\n\r\n        if(update_rate != 0) {\r\n\r\n            if(app.time < next_tick) {\r\n                return;\r\n            }\r\n\r\n            next_tick = app.time + update_rate;\r\n\r\n        } //update_rate\r\n\r\n            //the start of this frame is now\r\n        cur_frame_start = app.time;\r\n            //delta is time since the last frame start\r\n        delta_time = (cur_frame_start - last_frame_start);\r\n            //last frame start is updated to now\r\n        last_frame_start = cur_frame_start;\r\n\r\n            //clamp delta to max frame time, preventing large deltas\r\n        if(delta_time > max_frame_time) {\r\n            delta_time = max_frame_time;\r\n        }\r\n\r\n            //which delta we are going to use, fixed or variable\r\n        var used_delta = (fixed_delta == 0) ? delta_time : fixed_delta;\r\n            //timescale the delta to the given scale\r\n        used_delta *= timescale;\r\n            //update the simulated delta value\r\n        delta_sim = used_delta;\r\n\r\n            //update the internal \"time\" counter\r\n        current_time += used_delta;\r\n            //do the internal systems update\r\n        app.do_internal_update( used_delta );\r\n\r\n    } //on_internal_update\r\n\r\n    @:allow(snow.Snow)\r\n    function on_internal_render() {\r\n\r\n            //and finally call render, if it's time\r\n        if(render_rate != 0) {\r\n            if(render_rate < 0 || (next_render < app.time)) {\r\n                app.render();\r\n                next_render += render_rate;\r\n            }\r\n        }\r\n\r\n    } //on_internal_render\r\n\r\n} //App\r\n\r\n\r\n\r\n/** Read the {App Guide} for full info, and for even more information see : http://gafferongames.com/game-physics/fix-your-timestep/\r\n    this stores and calculates a fixed game update loop, and rendering interpolation is required\r\n    for smooth updates between frames. */\r\nclass AppFixedTimestep extends App {\r\n\r\n        /** fixed simulation update speed */\r\n    public var frame_time : Float = 0.0167;\r\n        /** the overflow of the updates. This is used internally, for you, to calculate the alpha time for rendering interpolation as follows `alpha = overflow / frame_time;` */\r\n    public var overflow : Float = 0.0;\r\n\r\n    @:allow(snow.Snow)\r\n    override function on_internal_init() {\r\n\r\n        super.on_internal_init();\r\n\r\n        frame_time = 1.0/60.0;\r\n        last_frame_start = app.time;\r\n\r\n    } //on_internal_init\r\n\r\n        //no super.on_internal_update because this entirely controls\r\n        //the update loop for the application itself\r\n    @:allow(snow.Snow)\r\n    override function on_internal_update() {\r\n\r\n        cur_frame_start = app.time;\r\n        delta_time = (cur_frame_start - last_frame_start);\r\n        delta_sim = delta_time * timescale;\r\n\r\n        if(delta_sim > max_frame_time) {\r\n            delta_sim = max_frame_time;\r\n        }\r\n\r\n        last_frame_start = cur_frame_start;\r\n\r\n        overflow += delta_sim;\r\n\r\n        while(overflow >= frame_time) {\r\n\r\n            app.do_internal_update(frame_time * timescale);\r\n\r\n            current_time += frame_time * timescale;\r\n\r\n            overflow -= frame_time * timescale;\r\n\r\n        } //overflow >= frame_time\r\n\r\n            //work this out before a render\r\n        alpha = overflow / frame_time;\r\n\r\n    } //on_internal_update\r\n\r\n} //AppFixedTimestep\r\n","package snow;\r\n\r\nimport snow.App;\r\nimport snow.types.Types;\r\n\r\nimport snow.api.Debug.*;\r\nimport snow.api.Timer;\r\nimport snow.api.Promise;\r\nimport snow.api.buffers.Uint8Array;\r\n\r\nimport snow.system.audio.Audio;\r\nimport snow.system.assets.Assets;\r\nimport snow.system.io.IO;\r\nimport snow.system.input.Input;\r\nimport snow.system.window.Window;\r\nimport snow.system.window.Windowing;\r\n\r\n\r\nclass Snow {\r\n\r\n//Property accessors\r\n\r\n        /** The current timestamp */\r\n    public var time (get,never) : Float;\r\n        /** Generate a unique ID to use */\r\n    public var uniqueid (get,never) : String;\r\n\r\n//Static convenience\r\n\r\n    public static var timestamp (get, never) : Float;\r\n\r\n//State management\r\n\r\n        /** The host application */\r\n    public var host : App;\r\n        /** The application configuration specifics (like window, runtime, and asset lists) */\r\n    public var config : snow.types.Types.AppConfig;\r\n        /** The configuration for snow itself, set via build project flags */\r\n    public var snow_config : SnowConfig;\r\n        /** Whether or not we are frozen, ignoring events i.e backgrounded/paused */\r\n    public var freeze (default,set) : Bool = false;\r\n\r\n//Sub systems\r\n\r\n        /** The io system */\r\n    public var io : IO;\r\n        /** The input system */\r\n    public var input : Input;\r\n        /** The asset system */\r\n    public var assets : Assets;\r\n        /** The audio system */\r\n    public var audio : Audio;\r\n        /** The window manager */\r\n    public var windowing : Windowing;\r\n        /** The platform identifier, a string,\r\n            but uses `snow.types.Types.Platform` abstract enum internally */\r\n    public var platform : String = 'unknown';\r\n        /** The os identifier, a string,\r\n            but uses `snow.types.Types.OS` abstract enum internally */\r\n    public var os : String = 'unknown';\r\n        /** A debug flag for convenience, true if the app was built with the haxe -debug flag or define */\r\n    public var debug : Bool = #if debug true #else false #end;\r\n\r\n        /** Set if shut down has commenced */\r\n    public var shutting_down : Bool = false;\r\n        /** Set if shut dow has completed  */\r\n    public var has_shutdown : Bool = false;\r\n        /** If the config specifies a default window, this is it */\r\n    public var window : Window;\r\n\r\n//Internal values\r\n\r\n        //if already passed the ready state\r\n    var was_ready : Bool = false;\r\n        //if ready has completed, so systems can begin safely\r\n    var is_ready : Bool = false;\r\n        //the core platform instance to bind us\r\n    @:noCompletion public static var core : Core;\r\n        //the list of functions to run next loop\r\n    static var next_queue : Array<Void->Void>;\r\n        //the list of functions to run at the end of the current loop\r\n    static var defer_queue : Array<Void->Void>;\r\n\r\n    @:noCompletion\r\n    public function new() {\r\n\r\n        if(snow.api.Debug.get_level() > 1) {\r\n            log('log / level to ${snow.api.Debug.get_level()}' );\r\n            log('log / filter : ${snow.api.Debug.get_filter()}');\r\n            log('log / exclude : ${snow.api.Debug.get_exclude()}');\r\n        }\r\n\r\n        #if ios      platform = Platform.platform_ios;       #end\r\n        #if mac      platform = Platform.platform_mac;       #end\r\n        #if web      platform = Platform.platform_web;       #end\r\n        #if linux    platform = Platform.platform_linux;     #end\r\n        #if android  platform = Platform.platform_android;   #end\r\n        #if windows  platform = Platform.platform_windows;   #end\r\n\r\n            //We create the core as a concrete platform version of the core\r\n        core = new Core( this );\r\n        next_queue = [];\r\n        defer_queue = [];\r\n\r\n    } //new\r\n\r\n//Public API\r\n\r\n        /** Shutdown the engine and quit */\r\n    public function shutdown() {\r\n\r\n        shutting_down = true;\r\n\r\n        host.ondestroy();\r\n        io.destroy();\r\n        audio.destroy();\r\n        input.destroy();\r\n        windowing.destroy();\r\n\r\n        core.shutdown();\r\n\r\n        has_shutdown = true;\r\n\r\n    } //shutdown\r\n\r\n        /** Called for you by snow, unless configured otherwise.\r\n            Only call this manually if your render_rate is 0! */\r\n    public inline function render() {\r\n\r\n        windowing.update();\r\n\r\n    } //render\r\n\r\n    public inline function dispatch_system_event( _event:SystemEvent ) {\r\n\r\n        on_event(_event);\r\n\r\n    } //dispatch_system_event\r\n\r\n//Public static API\r\n\r\n        /** Call a function at the start of the next frame,\r\n            useful for async calls in a sync context, allowing the sync function to return safely before the onload is fired. */\r\n    inline\r\n    public static function next( func: Void->Void ) {\r\n\r\n        if(func != null) next_queue.push(func);\r\n\r\n    } //next\r\n\r\n        /** Call a function at the end of the current frame */\r\n    inline\r\n    public static function defer( func: Void->Void ) {\r\n\r\n        if(func != null) defer_queue.push(func);\r\n\r\n    } //defer\r\n\r\n//Internal API\r\n\r\n    @:noCompletion\r\n    public function init( _snow_config:SnowConfig, _host : App ) {\r\n\r\n        snow_config = _snow_config;\r\n\r\n        if(snow_config.app_package == null) {\r\n            snow_config.app_package = 'org.snowkit.snow';\r\n        }\r\n\r\n        if(snow_config.config_path == null) {\r\n            snow_config.config_path = '';\r\n        }\r\n\r\n        config = default_config();\r\n        host = _host;\r\n        host.app = this;\r\n\r\n        core.init( on_event );\r\n\r\n    } //init\r\n\r\n    function on_snow_init() {\r\n\r\n        _debug('init / initializing');\r\n        _debug('init / pre ready, init host');\r\n\r\n            //any app pre ready init can be handled in here\r\n        host.on_internal_init();\r\n\r\n    } //on_snow_init\r\n\r\n    function on_snow_ready() {\r\n\r\n        if(was_ready) {\r\n            throw Error.error('firing ready event more than once is invalid usage');\r\n        }\r\n\r\n        _debug('init / setting up additional systems...');\r\n\r\n                //create the sub systems\r\n            io = new IO( this );\r\n            input = new Input( this );\r\n            audio = new Audio( this );\r\n            assets = new Assets( this );\r\n            windowing = new Windowing( this );\r\n\r\n        _debug('modules /');\r\n        _debug('  Assets - '    + typename(assets.module));\r\n        _debug('  Audio - '     + typename(audio.module));\r\n        _debug('  Input - '     + typename(input.module));\r\n        _debug('  IO - '        + typename(io.module));\r\n        _debug('  Windowing - ' + typename(windowing.module));\r\n\r\n            //disllow re-entry\r\n        was_ready = true;\r\n\r\n        setup_app_path();\r\n\r\n        _debug('init / setup default assets : ok');\r\n\r\n        setup_configs().then(function(_){\r\n\r\n            _debug('init / setup default configs : ok');\r\n\r\n            setup_default_window();\r\n\r\n            next(on_ready);\r\n\r\n        }).error(function(e) {\r\n\r\n            throw Error.init('snow / cannot recover from error: $e');\r\n\r\n        });\r\n\r\n            //make sure the initial promises happen\r\n        snow.api.Promise.Promises.step();\r\n\r\n            //make sure all events pushed into\r\n            //the queues are flushed\r\n        while(next_queue.length > 0) {\r\n            cycle_next_queue();\r\n        }\r\n\r\n        while(defer_queue.length > 0) {\r\n            cycle_defer_queue();\r\n        }\r\n\r\n    } //on_snow_ready\r\n\r\n    @:allow(snow.App)\r\n    function do_internal_update( dt:Float ) {\r\n\r\n        io.update();\r\n        input.update();\r\n        audio.update();\r\n        host.update( dt );\r\n\r\n    } //do_internal_update\r\n\r\n        //once start up is done, this is called\r\n    function on_ready() {\r\n\r\n        _debug('init / calling host ready');\r\n        is_ready = true;\r\n        host.ready();\r\n\r\n    } //on_ready\r\n\r\n    function on_snow_update() {\r\n\r\n        if(freeze) return;\r\n\r\n            //first update timers\r\n        Timer.update();\r\n\r\n            //handle promise executions\r\n        snow.api.Promise.Promises.step();\r\n\r\n            //handle the events\r\n        cycle_next_queue();\r\n\r\n            //game updates aren't allowed till we are flagged\r\n        if(!is_ready) return;\r\n\r\n            //handle any internal pre updates\r\n        host.ontickstart();\r\n\r\n            //handle any internal updates\r\n        host.on_internal_update();\r\n\r\n            //handle any internal render updates\r\n        host.on_internal_render();\r\n\r\n            //let the system have some time\r\n        #if snow_native\r\n            Sys.sleep(0);\r\n        #end\r\n\r\n            //handle any internal post updates\r\n        host.ontickend();\r\n\r\n        cycle_defer_queue();\r\n\r\n    } //on_snow_update\r\n\r\n    function on_event( _event:SystemEvent ) {\r\n\r\n        if( _event.type != SystemEventType.update &&\r\n            _event.type != SystemEventType.unknown &&\r\n            _event.type != SystemEventType.window &&\r\n            _event.type != SystemEventType.input\r\n\r\n        ) {\r\n            _debug( 'event / system event / ${_event.type} / $_event');\r\n        }\r\n\r\n        if( _event.type != SystemEventType.update ) {\r\n            _verboser( 'event / system event / $_event');\r\n        }\r\n\r\n            //all systems should get these basically...\r\n            //cos of app lifecycles etc being here.\r\n        if(is_ready) {\r\n            io.on_event( _event );\r\n            audio.on_event( _event );\r\n            windowing.on_event( _event );\r\n            input.on_event( _event );\r\n        }\r\n\r\n        host.onevent( _event );\r\n\r\n        switch(_event.type) {\r\n\r\n            case SystemEventType.init: {\r\n                on_snow_init();\r\n            } //init\r\n\r\n            case SystemEventType.ready: {\r\n                on_snow_ready();\r\n            } //ready\r\n\r\n            case SystemEventType.update: {\r\n                on_snow_update();\r\n            } //update\r\n\r\n            case SystemEventType.quit, SystemEventType.app_terminating: {\r\n                shutdown();\r\n            } //quit\r\n\r\n            case SystemEventType.shutdown: {\r\n                log('Goodbye.');\r\n            } //shutdown\r\n\r\n            default: {\r\n\r\n            } //default\r\n\r\n        } //switch _event.type\r\n\r\n    } //on_event\r\n\r\n    inline function cycle_next_queue() {\r\n\r\n        var count = next_queue.length;\r\n        var i = 0;\r\n        while(i < count) {\r\n            (next_queue.shift())();\r\n            ++i;\r\n        }\r\n\r\n    } //cycle_next_queue\r\n\r\n    inline function cycle_defer_queue() {\r\n\r\n        var count = defer_queue.length;\r\n        var i = 0;\r\n        while(i < count) {\r\n            (defer_queue.shift())();\r\n            ++i;\r\n        }\r\n\r\n    } //cycle_next_queue\r\n\r\n//Setup specifics\r\n\r\n        //ensure that we are in the correct location for asset loading\r\n    function setup_app_path() {\r\n\r\n        #if snow_native\r\n\r\n            var app_path = io.module.app_path();\r\n            var pref_path = io.module.app_path_prefs();\r\n\r\n            Sys.setCwd( app_path );\r\n\r\n            _debug('init / setting up app path $app_path');\r\n            _debug('init / setting up pref path: $pref_path');\r\n\r\n        #end //snow_native\r\n\r\n    } //setup_app_path\r\n\r\n    function setup_configs() {\r\n\r\n            //blank config path means don't try to load config.json\r\n        if(snow_config.config_path == '') {\r\n            setup_host_config();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return new Promise(function(resolve, reject) {\r\n\r\n            _debug('config / fetching runtime config');\r\n\r\n            default_runtime_config().then(function(_runtime_conf:Dynamic) {\r\n\r\n                config.runtime = _runtime_conf;\r\n\r\n            }).error(function(error){\r\n\r\n                throw Error.init('config / failed / default runtime config failed to parse as JSON. cannot recover. $error');\r\n\r\n            }).then(function(){\r\n\r\n                setup_host_config();\r\n                resolve();\r\n\r\n            });\r\n\r\n        }); //promise\r\n\r\n    } //setup_configs\r\n\r\n    function setup_host_config() {\r\n\r\n        _debug('config / fetching user config');\r\n\r\n        config = host.config( config );\r\n\r\n    } //setup_host_config\r\n\r\n    function setup_default_window() {\r\n\r\n        _debug('windowing / creating default window');\r\n\r\n            //force fullscreen on mobile to get better\r\n            //behavior from the window for now.\r\n            //borderless will control the status bar\r\n        #if mobile\r\n            config.window.fullscreen = true;\r\n        #end //mobile\r\n\r\n            //now if they requested a window, let's open one\r\n        if(config.has_window == true) {\r\n\r\n            _debug('windowing / has window, so creating with ${config.window}');\r\n\r\n            window = windowing.create( config.window );\r\n\r\n                //failed to create?\r\n            if(window.handle == null) {\r\n                throw Error.windowing('requested default window cannot be created. cannot continue');\r\n            }\r\n\r\n        } else { //has_window\r\n\r\n            _debug('windowing / not! creating default window, has_window was ${config.has_window}');\r\n\r\n        }\r\n\r\n    } //create_default_window\r\n\r\n//Default handlers\r\n\r\n    function default_config() : AppConfig {\r\n        return {\r\n            has_window : true,\r\n            runtime : {},\r\n            window : default_window_config(),\r\n            render : default_render_config(),\r\n            web : {\r\n                no_context_menu : true,\r\n                prevent_default_keys : [\r\n                    Key.left, Key.right, Key.up, Key.down,\r\n                    Key.backspace, Key.tab, Key.delete\r\n                ],\r\n                prevent_default_mouse_wheel : true,\r\n                true_fullscreen : false\r\n            },\r\n            native : {\r\n                audio_buffer_length : 176400,\r\n                audio_buffer_count : 4\r\n            }\r\n        }\r\n    }\r\n\r\n        /** handles the default method of parsing a runtime config json,\r\n            To change this behavior override `get_runtime_config`. This is called by default in get_runtime_config. */\r\n    function default_runtime_config() : Promise {\r\n\r\n        _debug('config / setting up default runtime config');\r\n\r\n            //for the default config, we only reject if there is a json parse error\r\n        return new Promise(function(resolve, reject) {\r\n\r\n            var load = io.data_flow( assets.path(snow_config.config_path), AssetJSON.processor);\r\n\r\n                load.then(resolve).error(function(error:Error) {\r\n                    switch(error) {\r\n                        case Error.parse(val):\r\n                            reject(error);\r\n                        case _:\r\n                            _debug('config / default config rejected / $error');\r\n                            resolve();\r\n                    }\r\n                });\r\n\r\n        }); //promise\r\n\r\n    } //default_runtime_config\r\n\r\n        /** Returns a default configured render config */\r\n    function default_render_config() : RenderConfig {\r\n\r\n        _debug('config / fetching default render config');\r\n\r\n        return {\r\n            depth : false,\r\n            stencil : false,\r\n            antialiasing : 0,\r\n            red_bits : 8,\r\n            green_bits : 8,\r\n            blue_bits : 8,\r\n            alpha_bits : 8,\r\n            depth_bits : 0,\r\n            stencil_bits : 0,\r\n            opengl : {\r\n                minor:0, major:0,\r\n                profile:OpenGLProfile.compatibility\r\n            }\r\n        };\r\n\r\n    } //default_render_config\r\n\r\n        /** Returns a default configured window config */\r\n    function default_window_config() : WindowConfig {\r\n\r\n        _debug('config / fetching default window config');\r\n\r\n        var conf =  {\r\n            fullscreen_desktop  : true,\r\n            fullscreen          : false,\r\n            borderless          : false,\r\n            resizable           : true,\r\n            x                   : 0x1FFF0000,\r\n            y                   : 0x1FFF0000,\r\n            width               : 960,\r\n            height              : 640,\r\n            title               : 'snow app'\r\n        };\r\n\r\n            #if mobile\r\n                conf.fullscreen = true;\r\n                conf.borderless = true;\r\n            #end //mobile\r\n\r\n        return conf;\r\n\r\n    } //default_window_config\r\n\r\n//Properties\r\n\r\n    function set_freeze( _freeze:Bool ) {\r\n\r\n        freeze = _freeze;\r\n\r\n        if(_freeze) {\r\n            audio.suspend();\r\n        } else {\r\n            audio.resume();\r\n        }\r\n\r\n        return freeze;\r\n\r\n    } //set_freeze\r\n\r\n    inline function get_time() : Float return core.timestamp();\r\n    inline function get_uniqueid() : String return make_uniqueid();\r\n    static inline function get_timestamp() return core.timestamp();\r\n\r\n//Helpers\r\n\r\n\r\n        // http://www.anotherchris.net/csharp/friendly-unique-id-generation-part-2/#base62\r\n    function make_uniqueid(?val:Int) : String {\r\n\r\n        if(val == null) {\r\n            #if neko val = Std.random(0x3FFFFFFF);\r\n            #else val = Std.random(0x7fffffff);\r\n            #end\r\n        }\r\n\r\n        inline function to_char(value:Int) {\r\n            if (value > 9) {\r\n                var ascii = (65 + (value - 10));\r\n                if (ascii > 90) ascii += 6;\r\n                return String.fromCharCode(ascii);\r\n            } else return Std.string(value).charAt(0);\r\n        } //to_char\r\n\r\n        var r = Std.int(val % 62);\r\n        var q = Std.int(val / 62);\r\n\r\n        if (q > 0) return make_uniqueid(q) + to_char(r);\r\n\r\n        return Std.string(to_char(r));\r\n\r\n    } //make_uniqueid\r\n\r\n    inline function typename(t:Dynamic) {\r\n        return Type.getClassName(Type.getClass(t));\r\n    }\r\n\r\n} //Snow\r\n\r\n\r\n\r\n#if snow_web\r\n    private typedef Core = snow.core.web.Core;\r\n#else\r\n    private typedef Core = snow.core.native.Core;\r\n#end","package snow.api;\r\n\r\nimport haxe.io.Path;\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\n\r\nprivate enum LogError {\r\n    RequireString(detail:String);\r\n}\r\n\r\nclass Debug {\r\n\r\n        //default to `log`\r\n    static var _level : Int = 1;\r\n    static var _filter : Array<String>;\r\n    static var _exclude : Array<String>;\r\n    static var _log_width : Int = 16;\r\n\r\n    macro public static function get_level() : haxe.macro.Expr {\r\n        return macro $v{ ${snow.api.Debug._level} };\r\n    }\r\n    macro public static function get_filter() : haxe.macro.Expr {\r\n        return macro $v{ ${snow.api.Debug._filter} };\r\n    }\r\n    macro public static function get_exclude() : haxe.macro.Expr {\r\n        return macro $v{ ${snow.api.Debug._exclude} };\r\n    }\r\n\r\n    macro static function level( __level:Int ) : haxe.macro.Expr {\r\n\r\n        _level = __level;\r\n\r\n        return macro null;\r\n\r\n    } //level\r\n\r\n    macro static function filter( __filter:String ) : haxe.macro.Expr {\r\n\r\n        _filter = __filter.split(',');\r\n\r\n        var _index = 0;\r\n        for(_f in _filter) {\r\n            _filter[_index] = StringTools.trim(_f);\r\n            _index++;\r\n        }\r\n\r\n        return macro null;\r\n\r\n    } //filter\r\n\r\n    macro static function exclude( __exclude:String ) : haxe.macro.Expr {\r\n\r\n        _exclude = __exclude.split(',');\r\n\r\n        var _index = 0;\r\n        for(_e in _exclude) {\r\n            _exclude[_index] = StringTools.trim(_e);\r\n            _index++;\r\n        }\r\n\r\n        return macro null;\r\n\r\n    } //exclude\r\n\r\n    macro static function width( _width:Int ) : haxe.macro.Expr {\r\n\r\n        _log_width = _width;\r\n\r\n        return macro null;\r\n\r\n    } //width\r\n\r\n        //This macro uses the defined log level value to reject code that\r\n        //shouldn't even exist at runtime , like low level debug information\r\n        //and logging by injecting or not injecting code\r\n    macro public static function log( value:Dynamic ) : Expr {\r\n\r\n        var _file = Path.withoutDirectory(_get_log_file());\r\n        var _context = Path.withoutExtension(_file).toLowerCase();\r\n        var _spaces = _get_spacing(_file);\r\n\r\n        for(meta in Context.getLocalClass().get().meta.get()) {\r\n            if(meta.name == ':log_as') {\r\n                var _str = switch(meta.params[0].expr) {\r\n                    case EConst(CString(str)): _context = str;\r\n                    default: throw LogError.RequireString('log_as meta requires a string constant like \"name\"');\r\n                }\r\n            }\r\n        } //for each meta\r\n\r\n        var _log = (_level > 0);\r\n\r\n            if(_filter != null && (_filter.indexOf(_context) == -1)) {\r\n                _log = false;\r\n            }\r\n\r\n            if(_exclude != null && (_exclude.indexOf(_context) != -1)) {\r\n                _log = false;\r\n            }\r\n\r\n        if(_log) {\r\n            return macro @:pos(Context.currentPos()) trace('${_spaces}i / $_context / ' + $value);\r\n        }\r\n\r\n        return macro null;\r\n\r\n    } //log\r\n\r\n    macro public static function _debug( value:Dynamic ) : Expr {\r\n\r\n        var _file = Path.withoutDirectory(_get_log_file());\r\n        var _context = Path.withoutExtension(_file).toLowerCase();\r\n        var _spaces = _get_spacing(_file);\r\n\r\n        for(meta in Context.getLocalClass().get().meta.get()) {\r\n            if(meta.name == ':log_as') {\r\n                var _str = switch(meta.params[0].expr) {\r\n                    case EConst(CString(str)): _context = str;\r\n                    default: throw LogError.RequireString('log_as meta requires a string constant like \"name\"');\r\n                }\r\n            }\r\n        } //for each meta\r\n\r\n        var _log = (_level > 1);\r\n\r\n            if(_filter != null && (_filter.indexOf(_context) == -1)) {\r\n                _log = false;\r\n            }\r\n\r\n            if(_exclude != null && (_exclude.indexOf(_context) != -1)) {\r\n                _log = false;\r\n            }\r\n\r\n        if(_log) {\r\n            return macro @:pos(Context.currentPos()) trace('${_spaces}d / $_context / ' + $value);\r\n        }\r\n\r\n        return macro null;\r\n\r\n    } //_debug\r\n\r\n    macro public static function _verbose( value:Dynamic ) : Expr {\r\n\r\n        var _file = Path.withoutDirectory(_get_log_file());\r\n        var _context = Path.withoutExtension(_file).toLowerCase();\r\n        var _spaces = _get_spacing(_file);\r\n\r\n        for(meta in Context.getLocalClass().get().meta.get()) {\r\n            if(meta.name == ':log_as') {\r\n                var _str = switch(meta.params[0].expr) {\r\n                    case EConst(CString(str)): _context = str;\r\n                    default: throw LogError.RequireString('log_as meta requires a string constant like \"name\"');\r\n                }\r\n            }\r\n        } //for each meta\r\n\r\n        var _log = (_level > 2);\r\n\r\n            if(_filter != null && (_filter.indexOf(_context) == -1)) {\r\n                _log = false;\r\n            }\r\n\r\n            if(_exclude != null && (_exclude.indexOf(_context) != -1)) {\r\n                _log = false;\r\n            }\r\n\r\n        if(_log) {\r\n            return macro @:pos(Context.currentPos()) trace('${_spaces}v / $_context / ' + $value);\r\n        }\r\n\r\n        return macro null;\r\n\r\n    } //_verbose\r\n\r\n    macro public static function _verboser( value:Dynamic ) : Expr {\r\n\r\n        var _file = Path.withoutDirectory(_get_log_file());\r\n        var _context = Path.withoutExtension(_file).toLowerCase();\r\n        var _spaces = _get_spacing(_file);\r\n\r\n        for(meta in Context.getLocalClass().get().meta.get()) {\r\n            if(meta.name == ':log_as') {\r\n                var _str = switch(meta.params[0].expr) {\r\n                    case EConst(CString(str)): _context = str;\r\n                    default: throw LogError.RequireString('log_as meta requires a string constant like \"name\"');\r\n                }\r\n            }\r\n        } //for each meta\r\n\r\n        var _log = (_level > 3);\r\n\r\n            if(_filter != null && (_filter.indexOf(_context) == -1)) {\r\n                _log = false;\r\n            }\r\n\r\n            if(_exclude != null && (_exclude.indexOf(_context) != -1)) {\r\n                _log = false;\r\n            }\r\n\r\n        if(_log) {\r\n            return macro @:pos(Context.currentPos()) trace('${_spaces}V / $_context / ' + $value);\r\n        }\r\n\r\n        return macro null;\r\n\r\n    } //_verboser\r\n\r\n    macro public static function assert(expr:Expr, ?reason:String='') {\r\n        #if !snow_no_assertions\r\n            var str = haxe.macro.ExprTools.toString(expr);\r\n                if(reason != '') str += ' ($reason)';\r\n            return macro @:pos(Context.currentPos()) {\r\n                if(!$expr) throw snow.api.Debug.DebugError.assertion('$str');\r\n            }\r\n        #end\r\n        return macro null;\r\n    } //assert\r\n\r\n\r\n    macro public static function assertnull(value:Expr, ?reason:String='') {\r\n        #if !snow_no_assertions\r\n            var str = haxe.macro.ExprTools.toString(value);\r\n            if(reason != '') reason = ' ($reason)';\r\n            return macro @:pos(Context.currentPos()) {\r\n                if($value == null) throw snow.api.Debug.DebugError.null_assertion('$str was null$reason');\r\n            }\r\n        #end\r\n        return macro null;\r\n    } //assert\r\n\r\n    macro public static function def(value:Expr, def:Expr):Expr {\r\n        return macro @:pos(Context.currentPos()) {\r\n            if($value == null) $value = $def;\r\n            $value;\r\n        }\r\n    }\r\n\r\n\r\n//Internal Helpers\r\n\r\n\r\n    static function _get_spacing(_file:String ) {\r\n\r\n        var _spaces = '';\r\n\r\n            //the magic number here is File.hx[:1234] for the trace listener log spacing\r\n        var _trace_length = _file.length + 4;\r\n        var _diff : Int = _log_width - _trace_length;\r\n        if(_diff > 0) {\r\n            for(i in 0 ... _diff) {\r\n                _spaces += ' ';\r\n            }\r\n        }\r\n\r\n        return _spaces;\r\n\r\n    } //_get_spacing\r\n\r\n    macro static function _get_log_file() {\r\n        return macro Context.getPosInfos(Context.currentPos()).file;\r\n    } //get_log_context\r\n\r\n} // Debug\r\n\r\nenum DebugError {\r\n    assertion(expr:String);\r\n    null_assertion(expr:String);\r\n}\r\n","package snow.api;\r\n\r\n/**\r\nThe Promise interface represents a proxy for a value not necessarily\r\nknown when the promise is created. It allows you to associate handlers\r\nto an asynchronous action's eventual success or failure. This lets asynchronous\r\nmethods return values like synchronous methods: instead of the final value,\r\nthe asynchronous method returns a promise of having a value at some point in the future.\r\n\r\nA pending promise can become either fulfilled with a value, or\r\nrejected with a reason. When either of these happens, the associated\r\nhandlers queued up by a promise's then method are called. (If the promise\r\nhas already been fulfilled or rejected when a corresponding handler is attached,\r\nthe handler will be called, so there is no race condition between an asynchronous\r\noperation completing and its handlers being attached.)\r\n\r\nAs the Promise.prototype.then and Promise.prototype.error methods return promises,\r\nthey can be chained—an operation called composition.\r\n\r\nDocumentation provided mostly by MDN\r\nlicensed under CC-BY-SA 2.5. by Mozilla Contributors.\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n*/\r\n@:allow(snow.api.Promises)\r\nclass Promise {\r\n\r\n        /** The state this promise is in. */\r\n    var state : PromiseState;\r\n        /** internal: The result of this promise */\r\n    var result : Dynamic;\r\n        /** internal: The reactions lists */\r\n    var reject_reactions: Array<Dynamic>;\r\n    var fulfill_reactions: Array<Dynamic>;\r\n    var settle_reactions: Array<Dynamic>;\r\n\r\n        /** internal: If the promise was handled by a reject reaction */\r\n    var was_caught: Bool = false;\r\n\r\n        /** Creates a new promise by providing a function with two callback arguments.\r\n            Inside this function, invoking these callbacks controls the promise state.\r\n\r\n            For example, if fetching a value async, and the operation fails, you would\r\n            invoke the second callback with the reason/error. If the operation succeeded,\r\n            you would invoke the first.\r\n\r\n            `new Promise(function(resolve, reject) {\r\n                var success = ... get value ...\r\n                if(success) {\r\n                    resolve(value);\r\n                } else {\r\n                    reject(Error(...));\r\n                }\r\n            });` */\r\n    public function new<T>( func:T ) {\r\n\r\n        state = pending;\r\n\r\n        reject_reactions = [];\r\n        fulfill_reactions = [];\r\n        settle_reactions = [];\r\n\r\n        Promises.queue(function() {\r\n\r\n            #if hxpromise_catch_and_reject_on_promise_body\r\n                try {\r\n                    untyped func(onfulfill, onreject);\r\n                } catch(err:Dynamic) {\r\n                    onexception(err);\r\n                }\r\n            #else\r\n                untyped func(onfulfill, onreject);\r\n            #end //hxpromise_catch_and_reject_on_promise_body\r\n\r\n            Promises.defer(Promises.next);\r\n        });\r\n\r\n    } //new\r\n\r\n        /** The then function returns a Promise. It takes two arguments,\r\n            both are callback functions for the success and failure cases of the Promise. */\r\n    public function then<T,T1>( on_fulfilled:T, ?on_rejected:T ) : Promise {\r\n\r\n        switch(state) {\r\n\r\n            case pending: {\r\n                add_fulfill(on_fulfilled);\r\n                add_reject(on_rejected);\r\n                return new_linked_promise();\r\n            }\r\n\r\n            case fulfilled: {\r\n                Promises.defer(on_fulfilled, result);\r\n                return Promise.resolve(result);\r\n            }\r\n\r\n            case rejected: {\r\n                Promises.defer(on_rejected, result);\r\n                return Promise.reject(result);\r\n            }\r\n\r\n        } //switch\r\n\r\n    } //then\r\n\r\n        /** The error function returns a Promise and deals with rejected cases only.\r\n            It behaves the same as calling then(null, on_rejected).*/\r\n    public function error<T>( on_rejected:T ) : Promise {\r\n\r\n        switch(state) {\r\n\r\n            case pending: {\r\n                add_reject(on_rejected);\r\n                return new_linked_resolve_empty();\r\n            }\r\n\r\n            case fulfilled: {\r\n                return Promise.resolve(result);\r\n            }\r\n\r\n            case rejected: {\r\n                Promises.defer(on_rejected, result);\r\n                return Promise.reject(result);\r\n            }\r\n\r\n        } //switch\r\n\r\n    } //error\r\n\r\n        /** The Promise.all(iterable) function returns a promise that\r\n            resolves when all of the promises in the iterable argument\r\n            have resolved. The result is passed as an array of values\r\n            from all the promises.\r\n            If any of the passed in promises rejects, the all Promise\r\n            immediately rejects with the value of the promise that rejected,\r\n            discarding all the other promises whether or not they have resolved. */\r\n    public static function all( list:Array<Promise> ) {\r\n\r\n        #if debug\r\n            for(item in list) {\r\n                if(item == null) throw \"Promise.all handed an array with null items within it\";\r\n            }\r\n        #end\r\n\r\n        return new Promise(function(ok, no) {\r\n\r\n            var current = 0;\r\n            var total = list.length;\r\n            var fulfill_result = [];\r\n            var reject_result = null;\r\n            var all_state:PromiseState = pending;\r\n\r\n            var single_ok = function(index, val) {\r\n\r\n                if(all_state != pending) return;\r\n\r\n                current++;\r\n                fulfill_result[index] = val;\r\n\r\n                if(total == current) {\r\n                    all_state = fulfilled;\r\n                    ok(fulfill_result);\r\n                }\r\n\r\n            } //single_ok\r\n\r\n            var single_err = function(val) {\r\n\r\n                if(all_state != pending) return;\r\n\r\n                all_state = rejected;\r\n                reject_result = val;\r\n                no(reject_result);\r\n\r\n            } //single_err\r\n\r\n            var index = 0;\r\n            for(promise in list) {\r\n                promise.then(single_ok.bind(index,_)).error(single_err);\r\n                index++;\r\n            }\r\n\r\n        }); //promise\r\n\r\n    } //all\r\n\r\n        /** The Promise.race function returns a promise that\r\n            resolves or rejects as soon as one of the promises in the\r\n            list resolves or rejects, with the value or reason from that promise. */\r\n    public static function race( list:Array<Promise> ) {\r\n\r\n        return new Promise(function(ok,no) {\r\n\r\n            var settled = false;\r\n            var single_ok = function(val) {\r\n                if(settled) return;\r\n                settled = true;\r\n                ok(val);\r\n            }\r\n\r\n            var single_err = function(val) {\r\n                if(settled) return;\r\n                settled = true;\r\n                no(val);\r\n            }\r\n\r\n            for(promise in list) {\r\n                promise.then(single_ok).error(single_err);\r\n            }\r\n        });\r\n\r\n    } //race\r\n\r\n        /** The Promise.reject function returns a Promise object\r\n            that is rejected with the optional reason. */\r\n    public static function reject<T>( ?reason:T ) {\r\n\r\n        return new Promise(function(ok, no){\r\n            no(reason);\r\n        });\r\n\r\n    } //reject\r\n\r\n        /** The static Promise.resolve function returns a Promise object\r\n            that is resolved with the given value. */\r\n    public static function resolve<T>( ?val:T ) {\r\n\r\n        return new Promise(function(ok, no){\r\n            ok(val);\r\n        });\r\n\r\n    } //resolve\r\n\r\n//Debug\r\n\r\n    function toString() {\r\n        return 'Promise { state:${state_string()}, result:$result }';\r\n    }\r\n\r\n//Internal\r\n\r\n        /** internal: Add a settle reaction unless\r\n            this promise is already settled,\r\n            if it is the call is deferred but happens \"immediately\" */\r\n    function add_settle(f) {\r\n\r\n        if(state == pending) {\r\n            settle_reactions.push(f);\r\n        } else {\r\n            Promises.defer(f,result);\r\n        }\r\n\r\n    } //add_settle\r\n\r\n        /** internal: Return a new linked promise that\r\n            will wait on this, and settle it with this result */\r\n    function new_linked_promise() {\r\n\r\n        return new Promise(function(f, r) {\r\n            add_settle(function(_){\r\n                if(state == fulfilled){\r\n                    f(result);\r\n                } else {\r\n                    r(result);\r\n                }\r\n            });\r\n        }); //promise\r\n\r\n    } //\r\n\r\n\r\n        /** internal: Return a resolved promise that\r\n            will wait on this, and fulfill with this result */\r\n    function new_linked_resolve() {\r\n        return new Promise(function (f,r) {\r\n            add_settle(function(val) {\r\n                f(val);\r\n            });\r\n        });\r\n    } //\r\n\r\n        /** internal: Return a rejected promise that\r\n            will wait on this, and reject with this result */\r\n    function new_linked_reject() {\r\n        return new Promise(function (f,r) {\r\n            add_settle(function(val){\r\n                r(val);\r\n            });\r\n        });\r\n    } //\r\n\r\n        /** internal: Return an already resolved\r\n            promise that will wait on this one\r\n            but have no value fulfilled */\r\n    function new_linked_resolve_empty() {\r\n        return new Promise(function(f,r) {\r\n            add_settle(function(_){\r\n                f();\r\n            });\r\n        });\r\n    } //\r\n\r\n        /** internal: Return an already rejected\r\n            promise that will wait on this one\r\n            but have no value rejected */\r\n    function new_linked_reject_empty() {\r\n        return new Promise(function(f,r) {\r\n            add_settle(function(_){\r\n                r();\r\n            });\r\n        });\r\n    } //\r\n\r\n\r\n        /** internal: Add a fulfill reaction callback */\r\n    function add_fulfill<T>(f:T) {\r\n        if(f != null) {\r\n            fulfill_reactions.push(f);\r\n        }\r\n    } //\r\n\r\n        /** internal: Add a reject reaction callback */\r\n    function add_reject<T>(f:T) {\r\n        if(f != null) {\r\n            was_caught = true;\r\n            reject_reactions.push(f);\r\n        }\r\n    } //\r\n\r\n//State shifts\r\n\r\n        /** internal: Called if the promise is fulfilled. */\r\n    function onfulfill<T>( val:T ) {\r\n\r\n        // trace('resolve: to $val, with ${fulfill_reactions.length} reactions');\r\n\r\n        state = fulfilled;\r\n        result = val;\r\n\r\n        while(fulfill_reactions.length > 0) {\r\n            var fn = fulfill_reactions.shift();\r\n            fn(result);\r\n        }\r\n\r\n        onsettle();\r\n\r\n    } //onfulfill\r\n\r\n        /** internal: Called if the promise is rejected. */\r\n    function onreject<T>( reason:T ) {\r\n\r\n        // trace('reject: to $reason, with ${reject_reactions.length} reactions');\r\n\r\n        state = rejected;\r\n        result = reason;\r\n\r\n        while(reject_reactions.length > 0) {\r\n            var fn = reject_reactions.shift();\r\n            fn(result);\r\n        }\r\n\r\n        onsettle();\r\n\r\n    } //onreject\r\n\r\n        /** internal: Called when the promise is settled. */\r\n    function onsettle() {\r\n\r\n        while(settle_reactions.length > 0) {\r\n            var fn = settle_reactions.shift();\r\n            fn(result);\r\n        }\r\n\r\n    } //onsettle\r\n\r\n        /** internal: Handle exceptions in the promise callback.\r\n            This causes a rejection, and if no handlers are found will throw */\r\n    function onexception<T>( err:T ) {\r\n\r\n        #if !hxpromise_dont_throw_unhandled_rejection\r\n\r\n        add_settle(function(_){\r\n            if(!was_caught) {\r\n                if(state == rejected) {\r\n                    throw PromiseError.UnhandledPromiseRejection(this.toString());\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n\r\n        #end //hxpromise_throw_unhandled_rejection\r\n\r\n            //state can't transition\r\n            //and we shouldn't reject twice\r\n            //so we only reject if pending\r\n        if(state == pending) {\r\n            onreject(err);\r\n        }\r\n\r\n    } //onexception\r\n\r\n        /** internal: return a string for our state */\r\n    function state_string() {\r\n        return switch(state){\r\n            case pending:'pending';\r\n            case fulfilled:'fulfilled';\r\n            case rejected:'rejected';\r\n        }\r\n    }\r\n\r\n} //Promise\r\n\r\n\r\n/**\r\nPromises implementation. Use this to integrate the promises\r\ninto your code base. Call step at the end of a frame/microtask.\r\n*/\r\n@:allow(snow.api.Promise)\r\nclass Promises {\r\n\r\n    static var calls: Array<Dynamic> = [];\r\n    static var defers: Array<{f:Dynamic,a:Dynamic}> = [];\r\n\r\n        /** Call this once when you want to propagate promises */\r\n    public static function step() {\r\n\r\n        next();\r\n\r\n        while(defers.length > 0) {\r\n            var defer = defers.shift();\r\n                defer.f(defer.a);\r\n        }\r\n\r\n    } //\r\n\r\n        /** Handle the next job in the queue if any */\r\n    static function next() {\r\n        if(calls.length > 0) (calls.shift())();\r\n    } //\r\n\r\n        /** Defer a call with an argument to the next step */\r\n    static function defer<T,T1>(f:T, ?a:T1) {\r\n        if(f == null) return;\r\n        defers.push({f:f, a:a});\r\n    } //\r\n\r\n        /** Queue a job to be executed in order */\r\n    static function queue<T>(f:T) {\r\n        if(f == null) return;\r\n        calls.push(f);\r\n    } //\r\n\r\n} //Promises\r\n\r\n//Promise types\r\n\r\nenum PromiseError {\r\n    UnhandledPromiseRejection(err:Dynamic);\r\n}\r\n\r\n@:enum\r\nabstract PromiseState(Int) from Int to Int {\r\n        //initial state, not fulfilled or rejected\r\n    var pending = 0;\r\n        //successful operation\r\n    var fulfilled = 1;\r\n        //failed operation\r\n    var rejected = 2;\r\n\r\n} //\r\n","package snow.api;\r\n\r\nimport haxe.PosInfos;\r\nimport haxe.Log;\r\n\r\n@:allow(snow.Snow)\r\n    class Timer {\r\n\r\n        static var running_timers:Array<Timer> = [];\r\n\r\n        @:noCompletion public var time:Float;\r\n        @:noCompletion public var fire_at:Float;\r\n        @:noCompletion public var running:Bool;\r\n\r\n        public function new(_time:Float) {\r\n\r\n            time = _time;\r\n            running_timers.push( this );\r\n            fire_at = Snow.timestamp + time;\r\n            running = true;\r\n\r\n        } //new\r\n\r\n        public static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\r\n            var t0 = Snow.timestamp;\r\n            var r = f();\r\n            Log.trace((Snow.timestamp - t0) + \"s\", pos);\r\n            return r;\r\n        }\r\n\r\n        // Set this with \"run=...\"\r\n        dynamic public function run () { }\r\n\r\n        public function stop ():Void {\r\n\r\n            if (running) {\r\n                running = false;\r\n                running_timers.remove (this);\r\n            }\r\n\r\n        } //stop\r\n\r\n\r\n        static function update() {\r\n\r\n            var now = Snow.timestamp;\r\n\r\n            for (timer in running_timers) {\r\n                if(timer.running) {\r\n                    if(timer.fire_at < now) {\r\n                        timer.fire_at += timer.time;\r\n                        timer.run();\r\n                    } //now\r\n                }\r\n            } //all timers\r\n\r\n        } //update\r\n\r\n            //From std/haxe/Timer.hx\r\n        public static function delay( _time:Float, _f:Void -> Void ) {\r\n\r\n            var t = new Timer( _time );\r\n            t.run = function() {\r\n                t.stop();\r\n                _f();\r\n            };\r\n\r\n            return t;\r\n\r\n        } //delay\r\n\r\n    } //Timer\r\n\r\n","package snow.api.buffers;\r\n\r\n#if js\r\n\r\n    @:forward\r\n    @:arrayAccess\r\n    abstract Float32Array(js.html.Float32Array)\r\n        from js.html.Float32Array\r\n        to js.html.Float32Array {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n            if(elements != null) {\r\n                this = new js.html.Float32Array( elements );\r\n            } else if(array != null) {\r\n                this = new js.html.Float32Array( untyped array );\r\n            } else if(view != null) {\r\n                this = new js.html.Float32Array( untyped view );\r\n            } else if(buffer != null) {\r\n                if(len == null) {\r\n                    this = new js.html.Float32Array( buffer, byteoffset );\r\n                } else {\r\n                    this = new js.html.Float32Array( buffer, byteoffset, len );\r\n                }\r\n            } else {\r\n                this = null;\r\n            }\r\n        }\r\n\r\n        @:arrayAccess @:extern inline function __set(idx:Int, val:Float) : Void this[idx] = val;\r\n        @:arrayAccess @:extern inline function __get(idx:Int) : Float return this[idx];\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Float32Array {\r\n            if(byteOffset == null) return new js.html.Float32Array(cast bytes.getData());\r\n            if(len == null) return new js.html.Float32Array(cast bytes.getData(), byteOffset);\r\n            return new js.html.Float32Array(cast bytes.getData(), byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            #if (haxe_ver < 3.2)\r\n                return @:privateAccess new haxe.io.Bytes( this.byteLength, cast new js.html.Uint8Array(this.buffer) );\r\n            #else\r\n                return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\r\n            #end\r\n        }\r\n\r\n        inline function toString() return 'Float32Array [byteLength:${this.byteLength}, length:${this.length}]';\r\n\r\n    }\r\n\r\n#else\r\n\r\n    import snow.api.buffers.ArrayBufferView;\r\n    import snow.api.buffers.TypedArrayType;\r\n\r\n    @:forward\r\n    abstract Float32Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\r\n\r\n        public var length (get, never):Int;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n\r\n            if(elements != null) {\r\n                this = new ArrayBufferView( elements, Float32 );\r\n            } else if(array != null) {\r\n                this = new ArrayBufferView(0, Float32).initArray(array);\r\n            } else if(view != null) {\r\n                this = new ArrayBufferView(0, Float32).initTypedArray(view);\r\n            } else if(buffer != null) {\r\n                this = new ArrayBufferView(0, Float32).initBuffer(buffer, byteoffset, len);\r\n            } else {\r\n                throw \"Invalid constructor arguments for Float32Array\";\r\n            }\r\n        }\r\n\r\n    //Public API\r\n\r\n        public inline function subarray( begin:Int, end:Null<Int> = null) : Float32Array return this.subarray(begin, end);\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Float32Array {\r\n            return new Float32Array(bytes, byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            return this.buffer;\r\n        }\r\n\r\n    //Internal\r\n\r\n        inline function toString() return 'Float32Array [byteLength:${this.byteLength}, length:${this.length}]';\r\n\r\n        @:extern inline function get_length() return this.length;\r\n\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __get(idx:Int) : Float {\r\n            return ArrayBufferIO.getFloat32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT) );\r\n        }\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __set(idx:Int, val:Float) : Void {\r\n            ArrayBufferIO.setFloat32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\r\n        }\r\n\r\n    }\r\n\r\n#end //!js\r\n","package snow.api.buffers;\r\n\r\n#if js\r\n\r\n    @:forward\r\n    abstract Int32Array(js.html.Int32Array)\r\n        from js.html.Int32Array\r\n        to js.html.Int32Array {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n            if(elements != null) {\r\n                this = new js.html.Int32Array( elements );\r\n            } else if(array != null) {\r\n                this = new js.html.Int32Array( untyped array );\r\n            } else if(view != null) {\r\n                this = new js.html.Int32Array( untyped view );\r\n            } else if(buffer != null) {\r\n                if(len == null) {\r\n                    this = new js.html.Int32Array( buffer, byteoffset );\r\n                } else {\r\n                    this = new js.html.Int32Array( buffer, byteoffset, len );\r\n                }\r\n            } else {\r\n                this = null;\r\n            }\r\n        }\r\n\r\n        @:arrayAccess @:extern inline function __set(idx:Int, val:Int) : Void this[idx] = val;\r\n        @:arrayAccess @:extern inline function __get(idx:Int) : Int return this[idx];\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int32Array {\r\n            if(byteOffset == null) return new js.html.Int32Array(cast bytes.getData());\r\n            if(len == null) return new js.html.Int32Array(cast bytes.getData(), byteOffset);\r\n            return new js.html.Int32Array(cast bytes.getData(), byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            #if (haxe_ver < 3.2)\r\n                return @:privateAccess new haxe.io.Bytes( this.byteLength, cast new js.html.Uint8Array(this.buffer) );\r\n            #else\r\n                return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\r\n            #end\r\n        }\r\n\r\n        inline function toString() return 'Int32Array [byteLength:${this.byteLength}, length:${this.length}]';\r\n\r\n    }\r\n\r\n#else\r\n\r\n    import snow.api.buffers.ArrayBufferView;\r\n    import snow.api.buffers.TypedArrayType;\r\n\r\n    @:forward\r\n    abstract Int32Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\r\n\r\n        public var length (get, never):Int;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n\r\n            if(elements != null) {\r\n                this = new ArrayBufferView( elements, Int32 );\r\n            } else if(array != null) {\r\n                this = new ArrayBufferView(0, Int32).initArray(array);\r\n            } else if(view != null) {\r\n                this = new ArrayBufferView(0, Int32).initTypedArray(view);\r\n            } else if(buffer != null) {\r\n                this = new ArrayBufferView(0, Int32).initBuffer(buffer, byteoffset, len);\r\n            } else {\r\n                throw \"Invalid constructor arguments for Int32Array\";\r\n            }\r\n        }\r\n\r\n    //Public API\r\n\r\n        public inline function subarray( begin:Int, end:Null<Int> = null) : Int32Array return this.subarray(begin, end);\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int32Array {\r\n            return new Int32Array(bytes, byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            return this.buffer;\r\n        }\r\n\r\n    //Internal\r\n\r\n        inline function get_length() return this.length;\r\n\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __get(idx:Int) {\r\n            return ArrayBufferIO.getInt32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\r\n        }\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __set(idx:Int, val:Int) : Void {\r\n            ArrayBufferIO.setInt32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\r\n        }\r\n\r\n        inline function toString() return 'Int32Array [byteLength:${this.byteLength}, length:${this.length}]';\r\n\r\n    }\r\n\r\n#end //!js\r\n","package snow.api.buffers;\r\n\r\n#if js\r\n\r\n    @:forward\r\n    abstract Uint8Array(js.html.Uint8Array)\r\n        from js.html.Uint8Array\r\n        to js.html.Uint8Array {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 1;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n            if(elements != null) {\r\n                this = new js.html.Uint8Array( elements );\r\n            } else if(array != null) {\r\n                this = new js.html.Uint8Array( untyped array );\r\n            } else if(view != null) {\r\n                this = new js.html.Uint8Array( untyped view );\r\n            } else if(buffer != null) {\r\n                if(len == null) {\r\n                    this = new js.html.Uint8Array( buffer, byteoffset );\r\n                } else {\r\n                    this = new js.html.Uint8Array( buffer, byteoffset, len );\r\n                }\r\n            } else {\r\n                this = null;\r\n            }\r\n        }\r\n\r\n        @:arrayAccess @:extern inline function __set(idx:Int, val:UInt) : Void this[idx] = val;\r\n        @:arrayAccess @:extern inline function __get(idx:Int) : UInt return this[idx];\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int, ?len:Int ) : Uint8Array {\r\n            if(byteOffset == null) return new js.html.Uint8Array(cast bytes.getData());\r\n            if(len == null) return new js.html.Uint8Array(cast bytes.getData(), byteOffset);\r\n            return new js.html.Uint8Array(cast bytes.getData(), byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            #if (haxe_ver < 3.2)\r\n                return @:privateAccess new haxe.io.Bytes( this.byteLength, cast new js.html.Uint8Array(this.buffer) );\r\n            #else\r\n                return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\r\n            #end\r\n        }\r\n\r\n        inline function toString() return 'Uint8Array [byteLength:${this.byteLength}, length:${this.length}]';\r\n\r\n    }\r\n\r\n#else\r\n\r\n    import snow.api.buffers.ArrayBufferView;\r\n    import snow.api.buffers.TypedArrayType;\r\n\r\n    @:forward\r\n    abstract Uint8Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 1;\r\n\r\n        public var length (get, never):Int;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n\r\n            if(elements != null) {\r\n                this = new ArrayBufferView( elements, Uint8 );\r\n            } else if(array != null) {\r\n                this = new ArrayBufferView(0, Uint8).initArray(array);\r\n            } else if(view != null) {\r\n                this = new ArrayBufferView(0, Uint8).initTypedArray(view);\r\n            } else if(buffer != null) {\r\n                this = new ArrayBufferView(0, Uint8).initBuffer(buffer, byteoffset, len);\r\n            } else {\r\n                throw \"Invalid constructor arguments for Uint8Array\";\r\n            }\r\n        }\r\n\r\n    //Public API\r\n\r\n        public inline function subarray( begin:Int, end:Null<Int> = null) : Uint8Array return this.subarray(begin, end);\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Uint8Array {\r\n            return new Uint8Array(bytes, byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            return this.buffer;\r\n        }\r\n\r\n    //Internal\r\n\r\n        inline function toString() return 'Uint8Array [byteLength:${this.byteLength}, length:${this.length}]';\r\n\r\n        inline function get_length() return this.length;\r\n\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __get(idx:Int) {\r\n            return ArrayBufferIO.getUint8(this.buffer, this.byteOffset+idx);\r\n        }\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __set(idx:Int, val:UInt) : Void {\r\n            ArrayBufferIO.setUint8(this.buffer, this.byteOffset+idx, val);\r\n        }\r\n\r\n    }\r\n\r\n#end //!js\r\n","package snow.core.web;\r\n\r\n#if snow_web\r\n\r\nimport snow.types.Types;\r\nimport snow.api.Debug.*;\r\n\r\n\r\n/** Implemented in the platform specific concrete versions of this class */\r\n@:allow(snow.Snow)\r\n@:noCompletion\r\nclass Core {\r\n\r\n    var app:snow.Snow;\r\n    var start_timestamp : Float = 0.0;\r\n\r\n    function new( _app:Snow ) {\r\n\r\n        app = _app;\r\n        start_timestamp = timestamp();\r\n\r\n        guess_os();\r\n\r\n    } //new\r\n\r\n        /** Called by the snow internals to intiialize the core and subsystems of the framework, with the event handler passed in for where to deliver system events */\r\n    function init( _event_handler : SystemEvent->Void ) : Void {\r\n\r\n            //When we are done in here, start the main init procedure\r\n        app.dispatch_system_event({ type:SystemEventType.init });\r\n\r\n            //After it's had time to init, we fire the ready state\r\n        app.dispatch_system_event({ type:SystemEventType.ready });\r\n\r\n\r\n            //Then if requested, start the main loop\r\n        if(app.snow_config.has_loop) {\r\n            request_update();\r\n        }\r\n\r\n    } //init\r\n\r\n        /** Called to explicitly shutdown the framework cleanly. Called by `quit` and `app_terminated` type events by the core, for example. */\r\n    function shutdown() : Void {\r\n\r\n    } //shutdown\r\n\r\n        /** Get the most precise timestamp available on the platform, in seconds (time is always in seconds in snow). */\r\n    function timestamp() : Float {\r\n\r\n        var now : Float;\r\n\r\n        if(js.Browser.window.performance != null) {\r\n            now = js.Browser.window.performance.now()/1000.0;\r\n        } else {\r\n            now = haxe.Timer.stamp();\r\n        }\r\n\r\n        return now - start_timestamp;\r\n\r\n    } //timestamp\r\n\r\n//Internal\r\n\r\n\r\n        //Internal value only, for use ONLY when request animation frame is unavailable.\r\n        //Don't use this value for anything... use the other time constructs in snow.App\r\n    var _lf_timestamp : Float = 0.016;\r\n    var _time_now : Float = 0.0;\r\n\r\n    function request_update() {\r\n\r\n            //If they support RAF use it, else fallback\r\n        if(js.Browser.window.requestAnimationFrame != null) {\r\n\r\n            js.Browser.window.requestAnimationFrame(snow_core_loop);\r\n\r\n        } else {\r\n\r\n            log('warning : requestAnimationFrame not found, falling back to render_rate! render_rate:' + app.host.render_rate );\r\n\r\n                //schedule the callback again\r\n            js.Browser.window.setTimeout(function(){\r\n\r\n                    //cache the current time\r\n                var _now = timestamp();\r\n                    //increase the time value by the time since last frame\r\n                _time_now += (_now - _lf_timestamp);\r\n                    //call the callback, to match RAF stuff\r\n                snow_core_loop( _time_now * 1000.0 );\r\n                    //update the last frame stamp\r\n                _lf_timestamp = _now;\r\n\r\n            }, Std.int(app.host.render_rate*1000.0) );\r\n\r\n        } //no request anim frame\r\n\r\n    } //request_update\r\n\r\n        //This is the actual main loop code, called by RAF or setTimeout etc.\r\n    function snow_core_loop( ?_t:Float = 0.016 ) : Bool {\r\n\r\n            //internal update\r\n        update();\r\n            //dispatch the event to the framework + host\r\n        app.dispatch_system_event({ type:SystemEventType.update });\r\n            //ask for another update\r\n        request_update();\r\n            //\r\n        return true;\r\n\r\n    } //snow_core_loop\r\n\r\n    function update() {\r\n\r\n    }\r\n\r\n    function guess_os() {\r\n\r\n        var _ver = js.Browser.navigator.appVersion;\r\n        var _agent = js.Browser.navigator.userAgent;\r\n\r\n        inline function has(_val:String, _test:String) {\r\n            var r = new EReg(_val,'gi');\r\n            return r.match(_test);\r\n        }\r\n\r\n        if(has('mac', _ver))        app.os = OS.os_mac;\r\n        if(has('win', _ver))        app.os = OS.os_windows;\r\n            //I know it's not linux technically (should be unix)\r\n        if(has('x11', _ver))        app.os = OS.os_linux;\r\n        if(has('linux', _ver))      app.os = OS.os_linux;\r\n        if(has('android', _ver))    app.os = OS.os_android;\r\n        if(has('ipad', _agent))     app.os = OS.os_ios;\r\n        if(has('iphone', _agent))   app.os = OS.os_ios;\r\n        if(has('ipod', _agent))     app.os = OS.os_ios;\r\n\r\n    } //guess_os\r\n\r\n\r\n} //Core\r\n\r\n#end //snow_web\r\n","package snow.core.web.assets;\r\n\r\n#if snow_web\r\n\r\nimport snow.system.assets.Asset.AssetImage;\r\nimport snow.system.assets.Assets;\r\nimport snow.types.Types;\r\nimport snow.api.Debug.*;\r\nimport snow.api.buffers.*;\r\nimport snow.api.Promise;\r\n\r\nimport snow.core.web.assets.tga.TGA;\r\nimport snow.core.web.assets.psd.PSD;\r\n\r\n#if snow_module_audio_howlerjs\r\n    import snow.modules.howlerjs.Howl;\r\n#end //snow_module_audio_howlerjs\r\n\r\n@:allow(snow.system.assets.Assets)\r\nclass Assets implements snow.modules.interfaces.Assets {\r\n\r\n//module interface\r\n\r\n    var system:snow.system.assets.Assets;\r\n\r\n    function new( _system:snow.system.assets.Assets ) system = _system;\r\n    function init() {}\r\n    function update() {}\r\n    function destroy() {}\r\n    function on_event(event:SystemEvent) {}\r\n\r\n\r\n//Public API\r\n\r\n    //Images\r\n\r\n        public function image_load_info( _id:String, ?_components:Int = 4 ) : Promise {\r\n\r\n            return system.app.io.data_flow(_id, AssetImage.processor);\r\n\r\n        } //image_load_info\r\n\r\n            /** Create an image info (padded to POT) from a given Canvas or Image element. */\r\n        public function image_info_from_element( _id:String, _elem ) {\r\n\r\n            var width_pot = nearest_power_of_two(_elem.width);\r\n            var height_pot = nearest_power_of_two(_elem.height);\r\n            var image_bytes = POT_bytes_from_element(_elem.width, _elem.height, width_pot, height_pot, cast _elem);\r\n\r\n            var info : ImageInfo = {\r\n                id : _id,\r\n                bpp : 4,\r\n                width : _elem.width,\r\n                height : _elem.height,\r\n                width_actual : width_pot,\r\n                height_actual : height_pot,\r\n                bpp_source : 4,\r\n                pixels : image_bytes\r\n            };\r\n\r\n            image_bytes = null;\r\n\r\n            return info;\r\n\r\n        } //image_info_from_element\r\n\r\n            /** Create an image info (padded to POT) from raw already decoded image pixels */\r\n        public function image_info_from_pixels( _id:String, _width:Int, _height:Int, _pixels:Uint8Array ) {\r\n\r\n            var width_pot = nearest_power_of_two(_width);\r\n            var height_pot = nearest_power_of_two(_height);\r\n            var image_bytes = POT_bytes_from_pixels(_width, _height, width_pot, height_pot, _pixels);\r\n\r\n            var info : ImageInfo = {\r\n                id : _id,\r\n                bpp : 4,\r\n                width : _width,\r\n                height : _height,\r\n                width_actual : width_pot,\r\n                height_actual : height_pot,\r\n                bpp_source : 4,\r\n                pixels : image_bytes\r\n            };\r\n\r\n            image_bytes = null;\r\n\r\n            return info;\r\n        }\r\n\r\n            /** Create an image info (padded to POT) from bytes. Promises an ImageInfo. */\r\n        public function image_info_from_bytes( _id:String, _bytes:Uint8Array, ?_components:Int = 4 ) : Promise {\r\n\r\n            assertnull(_id);\r\n            assertnull(_bytes);\r\n            assert(_bytes.length != 0);\r\n\r\n            var ext = haxe.io.Path.extension(_id);\r\n\r\n            #if snow_web_tga\r\n                if(ext == 'tga') return Promise.resolve(image_info_from_bytes_tga(_id, _bytes));\r\n            #end\r\n\r\n            #if snow_web_psd\r\n                if(ext == 'psd') return Promise.resolve(image_info_from_bytes_psd(_id , _bytes));\r\n            #end\r\n\r\n            return new Promise(function(resolve, reject) {\r\n\r\n                    //convert to a binary string\r\n                var str = '', i = 0, len = _bytes.length;\r\n                while(i < len) str += String.fromCharCode(_bytes[i++] & 0xff);\r\n\r\n                var b64 = js.Browser.window.btoa(str);\r\n                var src = 'data:image/$ext;base64,$b64';\r\n\r\n                    //convert to an image element\r\n                var _img = new js.html.Image();\r\n\r\n                _img.onload = function(_) {\r\n                    var info = image_info_from_element(_id, _img);\r\n                    resolve(info);\r\n                }\r\n\r\n                _img.onerror = function(e) {\r\n                    reject(Error.error('failed to load image from bytes, on error: $e'));\r\n                }\r\n\r\n                _img.src = src;\r\n\r\n            }); //promise\r\n\r\n        } //image_info_from_bytes\r\n\r\n\r\n//Internal converters\r\n\r\n    #if snow_web_psd\r\n\r\n        /** Return an image info from the bytes of a PSD image */\r\n        function image_info_from_bytes_psd( _id:String, _bytes:Uint8Array ) {\r\n\r\n            var psd = new PSD(_bytes);\r\n                psd.parse();\r\n\r\n            var _width = untyped psd.header.width;\r\n            var _height = untyped psd.header.height;\r\n            var _pixels = new Uint8Array(untyped psd.image.pixelData);\r\n\r\n            return image_info_from_pixels(_id, _width, _height, _pixels);\r\n\r\n        } //image_info_from_bytes_psd\r\n\r\n    #end //snow_web_psd\r\n\r\n    #if snow_web_tga\r\n\r\n        /** Return an image info from the bytes of a tga image */\r\n        function image_info_from_bytes_tga( _id:String, _bytes:Uint8Array ) {\r\n\r\n            var image = new TGA();\r\n                image.load( _bytes );\r\n\r\n            return image_info_from_element(_id, image.getCanvas());\r\n\r\n        } //image_info_from_bytes_tga\r\n\r\n    #end //snow_web_tga\r\n\r\n\r\n        /** Return a POT array of bytes from raw image pixels */\r\n    function POT_bytes_from_pixels(_width:Int, _height:Int, _width_pot:Int, _height_pot:Int, _source:Uint8Array) : Uint8Array {\r\n\r\n        var tmp_canvas = js.Browser.document.createCanvasElement();\r\n\r\n            tmp_canvas.width = _width_pot;\r\n            tmp_canvas.height = _height_pot;\r\n\r\n        var tmp_context = tmp_canvas.getContext2d();\r\n\r\n            tmp_context.clearRect( 0, 0, tmp_canvas.width, tmp_canvas.height );\r\n\r\n        var image_bytes = null;\r\n        var _pixels = new js.html.Uint8ClampedArray(_source.buffer);\r\n        var _imgdata = tmp_context.createImageData( _width, _height );\r\n            _imgdata.data.set(_pixels);\r\n\r\n        try {\r\n\r\n                //store the data in it first\r\n            tmp_context.putImageData( _imgdata, 0, 0 );\r\n                //then bring out the full size\r\n            image_bytes = tmp_context.getImageData( 0, 0, tmp_canvas.width, tmp_canvas.height );\r\n\r\n        } catch(e:Dynamic) {\r\n\r\n            var tips = '- textures served from file:/// throw security errors\\n';\r\n                tips += '- textures served over http:// work for cross origin byte requests';\r\n\r\n            log(tips);\r\n            throw e;\r\n\r\n        } //catch\r\n\r\n            //cleanup\r\n        tmp_canvas = null; tmp_context = null;\r\n        _imgdata = null;\r\n\r\n        return new Uint8Array(image_bytes.data);\r\n    }\r\n\r\n        /** Return a POT array of bytes from an image/canvas element */\r\n    function POT_bytes_from_element(_width:Int, _height:Int, _width_pot:Int, _height_pot:Int, _source:js.html.Element) : Uint8Array {\r\n\r\n        var tmp_canvas = js.Browser.document.createCanvasElement();\r\n\r\n            tmp_canvas.width = _width_pot;\r\n            tmp_canvas.height = _height_pot;\r\n\r\n        var tmp_context = tmp_canvas.getContext2d();\r\n\r\n            tmp_context.clearRect( 0,0, tmp_canvas.width, tmp_canvas.height );\r\n            tmp_context.drawImage( cast _source, 0, 0, _width, _height );\r\n\r\n        var image_bytes = null;\r\n\r\n        try {\r\n\r\n            image_bytes = tmp_context.getImageData( 0, 0, tmp_canvas.width, tmp_canvas.height );\r\n\r\n        } catch(e:Dynamic) {\r\n\r\n            var tips = '- textures served from file:/// throw security errors\\n';\r\n                tips += '- textures served over http:// work for cross origin byte requests';\r\n\r\n            log(tips);\r\n            throw e;\r\n\r\n        } //catch\r\n\r\n            //cleanup\r\n        tmp_canvas = null; tmp_context = null;\r\n\r\n        return new Uint8Array(image_bytes.data);\r\n\r\n    } //POT_bytes_from_element\r\n\r\n\r\n    //Internal helpers\r\n        static var POT = true;\r\n\r\n        function nearest_power_of_two(_value:Int) {\r\n\r\n            if(!POT) return _value;\r\n\r\n            _value--;\r\n\r\n            _value |= _value >> 1;\r\n            _value |= _value >> 2;\r\n            _value |= _value >> 4;\r\n            _value |= _value >> 8;\r\n            _value |= _value >> 16;\r\n\r\n            _value++;\r\n\r\n            return _value;\r\n\r\n        } //nearest_power_of_two\r\n\r\n} //Assets\r\n\r\n#end //snow_web\r\n","package snow.core.web.input;\r\n\r\nimport snow.types.Types;\r\n\r\n@:noCompletion\r\nclass DOMKeys {\r\n\r\n        /** This function takes the DOM keycode and translates it into the\r\n            corresponding snow Keycodes value - but only if needed for special cases */\r\n    public static function dom_key_to_keycode(_keycode:Int) {\r\n\r\n        switch(_keycode) {\r\n\r\n        //\r\n            case dom_shift:         return Key.lshift;     //:todo : this is both left/right but returns left\r\n            case dom_ctrl:          return Key.lctrl;      //:todo : ^\r\n            case dom_alt:           return Key.lalt;       //:todo : ^\r\n            case dom_capslock:      return Key.capslock;\r\n        //\r\n            case dom_pageup:        return Key.pageup;\r\n            case dom_pagedown:      return Key.pagedown;\r\n            case dom_end:           return Key.end;\r\n            case dom_home:          return Key.home;\r\n            case dom_left:          return Key.left;\r\n            case dom_up:            return Key.up;\r\n            case dom_right:         return Key.right;\r\n            case dom_down:          return Key.down;\r\n            case dom_printscr:      return Key.printscreen;\r\n            case dom_insert:        return Key.insert;\r\n            case dom_delete:        return Key.delete;\r\n        //\r\n            case dom_lmeta:         return Key.lmeta;\r\n            case dom_rmeta:         return Key.rmeta;\r\n            case dom_meta:          return Key.lmeta;\r\n        //\r\n            case dom_kp_0:          return Key.kp_0;\r\n            case dom_kp_1:          return Key.kp_1;\r\n            case dom_kp_2:          return Key.kp_2;\r\n            case dom_kp_3:          return Key.kp_3;\r\n            case dom_kp_4:          return Key.kp_4;\r\n            case dom_kp_5:          return Key.kp_5;\r\n            case dom_kp_6:          return Key.kp_6;\r\n            case dom_kp_7:          return Key.kp_7;\r\n            case dom_kp_8:          return Key.kp_8;\r\n            case dom_kp_9:          return Key.kp_9;\r\n            case dom_kp_multiply:   return Key.kp_multiply;\r\n            case dom_kp_plus:       return Key.kp_plus;\r\n            case dom_kp_minus:      return Key.kp_minus;\r\n            case dom_kp_decimal:    return Key.kp_decimal;\r\n            case dom_kp_divide:     return Key.kp_divide;\r\n            case dom_kp_numlock:    return Key.numlockclear;\r\n        //\r\n            case dom_f1:            return Key.f1;\r\n            case dom_f2:            return Key.f2;\r\n            case dom_f3:            return Key.f3;\r\n            case dom_f4:            return Key.f4;\r\n            case dom_f5:            return Key.f5;\r\n            case dom_f6:            return Key.f6;\r\n            case dom_f7:            return Key.f7;\r\n            case dom_f8:            return Key.f8;\r\n            case dom_f9:            return Key.f9;\r\n            case dom_f10:           return Key.f10;\r\n            case dom_f11:           return Key.f11;\r\n            case dom_f12:           return Key.f12;\r\n            case dom_f13:           return Key.f13;\r\n            case dom_f14:           return Key.f14;\r\n            case dom_f15:           return Key.f15;\r\n            case dom_f16:           return Key.f16;\r\n            case dom_f17:           return Key.f17;\r\n            case dom_f18:           return Key.f18;\r\n            case dom_f19:           return Key.f19;\r\n            case dom_f20:           return Key.f20;\r\n            case dom_f21:           return Key.f21;\r\n            case dom_f22:           return Key.f22;\r\n            case dom_f23:           return Key.f23;\r\n            case dom_f24:           return Key.f24;\r\n        //\r\n            case dom_caret:         return Key.caret;\r\n            case dom_exclaim:       return Key.exclaim;\r\n            case dom_quotedbl:      return Key.quotedbl;\r\n            case dom_hash:          return Key.hash;\r\n            case dom_dollar:        return Key.dollar;\r\n            case dom_percent:       return Key.percent;\r\n            case dom_ampersand:     return Key.ampersand;\r\n            case dom_underscore:    return Key.underscore;\r\n            case dom_leftparen:     return Key.leftparen;\r\n            case dom_rightparen:    return Key.rightparen;\r\n            case dom_asterisk:      return Key.asterisk;\r\n            case dom_plus:          return Key.plus;\r\n            case dom_pipe:          return Key.backslash; // pipe\r\n            case dom_minus:         return Key.minus;\r\n            case dom_leftbrace:     return Key.leftbracket; // {, same code as [ on native...\r\n            case dom_rightbrace:    return Key.rightbracket; // }, same code as ] on native...\r\n            case dom_tilde:         return Key.backquote; // tilde\r\n        //\r\n            case dom_audiomute:     return Key.audiomute;\r\n            case dom_volumedown:    return Key.volumedown;\r\n            case dom_volumeup:      return Key.volumeup;\r\n        //\r\n            case dom_comma:         return Key.comma;\r\n            case dom_period:        return Key.period;\r\n            case dom_slash:         return Key.slash;\r\n            case dom_backquote:     return Key.backquote;\r\n            case dom_leftbracket:   return Key.leftbracket;\r\n            case dom_rightbracket:  return Key.rightbracket;\r\n            case dom_backslash:     return Key.backslash;\r\n            case dom_quote:         return Key.quote;\r\n\r\n        } //switch(_keycode)\r\n\r\n        return _keycode;\r\n\r\n    } //dom_key_to_keycode\r\n\r\n// the keycodes below are dom specific keycodes mapped to snow input names\r\n// these values *come from the browser* dom spec codes only, some info here\r\n// http://www.w3.org/TR/DOM-Level-3-Events/#determine-keydown-keyup-keyCode\r\n\r\n//\r\n    static inline var dom_shift          = 16;\r\n    static inline var dom_ctrl           = 17;\r\n    static inline var dom_alt            = 18;\r\n    static inline var dom_capslock       = 20;\r\n//\r\n    static inline var dom_pageup         = 33;\r\n    static inline var dom_pagedown       = 34;\r\n    static inline var dom_end            = 35;\r\n    static inline var dom_home           = 36;\r\n    static inline var dom_left           = 37;\r\n    static inline var dom_up             = 38;\r\n    static inline var dom_right          = 39;\r\n    static inline var dom_down           = 40;\r\n    static inline var dom_printscr       = 44;\r\n    static inline var dom_insert         = 45;\r\n    static inline var dom_delete         = 46;\r\n//\r\n    static inline var dom_lmeta          = 91;\r\n    static inline var dom_rmeta          = 93;\r\n//\r\n    static inline var dom_kp_0           = 96;\r\n    static inline var dom_kp_1           = 97;\r\n    static inline var dom_kp_2           = 98;\r\n    static inline var dom_kp_3           = 99;\r\n    static inline var dom_kp_4           = 100;\r\n    static inline var dom_kp_5           = 101;\r\n    static inline var dom_kp_6           = 102;\r\n    static inline var dom_kp_7           = 103;\r\n    static inline var dom_kp_8           = 104;\r\n    static inline var dom_kp_9           = 105;\r\n    static inline var dom_kp_multiply    = 106;\r\n    static inline var dom_kp_plus        = 107;\r\n    static inline var dom_kp_minus       = 109;\r\n    static inline var dom_kp_decimal     = 110;\r\n    static inline var dom_kp_divide      = 111;\r\n    static inline var dom_kp_numlock     = 144;\r\n//\r\n    static inline var dom_f1             = 112;\r\n    static inline var dom_f2             = 113;\r\n    static inline var dom_f3             = 114;\r\n    static inline var dom_f4             = 115;\r\n    static inline var dom_f5             = 116;\r\n    static inline var dom_f6             = 117;\r\n    static inline var dom_f7             = 118;\r\n    static inline var dom_f8             = 119;\r\n    static inline var dom_f9             = 120;\r\n    static inline var dom_f10            = 121;\r\n    static inline var dom_f11            = 122;\r\n    static inline var dom_f12            = 123;\r\n    static inline var dom_f13            = 124;\r\n    static inline var dom_f14            = 125;\r\n    static inline var dom_f15            = 126;\r\n    static inline var dom_f16            = 127;\r\n    static inline var dom_f17            = 128;\r\n    static inline var dom_f18            = 129;\r\n    static inline var dom_f19            = 130;\r\n    static inline var dom_f20            = 131;\r\n    static inline var dom_f21            = 132;\r\n    static inline var dom_f22            = 133;\r\n    static inline var dom_f23            = 134;\r\n    static inline var dom_f24            = 135;\r\n//\r\n    static inline var dom_caret          = 160;\r\n    static inline var dom_exclaim        = 161;\r\n    static inline var dom_quotedbl       = 162;\r\n    static inline var dom_hash           = 163;\r\n    static inline var dom_dollar         = 164;\r\n    static inline var dom_percent        = 165;\r\n    static inline var dom_ampersand      = 166;\r\n    static inline var dom_underscore     = 167;\r\n    static inline var dom_leftparen      = 168;\r\n    static inline var dom_rightparen     = 169;\r\n    static inline var dom_asterisk       = 170;\r\n    static inline var dom_plus           = 171;\r\n    static inline var dom_pipe           = 172; //backslash\r\n    static inline var dom_minus          = 173;\r\n    static inline var dom_leftbrace      = 174;\r\n    static inline var dom_rightbrace     = 175;\r\n    static inline var dom_tilde          = 176;\r\n//\r\n    static inline var dom_audiomute      = 181;\r\n    static inline var dom_volumedown     = 182;\r\n    static inline var dom_volumeup       = 183;\r\n//\r\n    static inline var dom_comma          = 188;\r\n    static inline var dom_period         = 190;\r\n    static inline var dom_slash          = 191;\r\n    static inline var dom_backquote      = 192;\r\n    static inline var dom_leftbracket    = 219;\r\n    static inline var dom_rightbracket   = 221;\r\n    static inline var dom_backslash      = 220;\r\n    static inline var dom_quote          = 222;\r\n    static inline var dom_meta           = 224;\r\n\r\n} //DOM_SDL_keys","package snow.core.web.input;\r\n\r\n#if snow_web\r\n\r\nimport snow.types.Types;\r\nimport snow.system.window.Window;\r\nimport snow.core.web.input.DOMKeys;\r\n\r\nimport snow.api.Debug.*;\r\n\r\ntypedef WebGamepadButton = {\r\n    value : Float,\r\n    pressed : Bool\r\n}\r\n\r\ntypedef WebGamepad = {\r\n    axes : Array<Float>,\r\n    index : Int,\r\n    buttons : Array<WebGamepadButton>,\r\n    id : String,\r\n    timestamp : Float\r\n}\r\n\r\n@:allow(snow.system.input.Input)\r\nclass Input implements snow.modules.interfaces.Input {\r\n\r\n    var active_gamepads : Map<Int, WebGamepad>;\r\n    var gamepads_supported : Bool = false;\r\n\r\n    var system : snow.system.input.Input;\r\n\r\n \tfunction new( _system:snow.system.input.Input ) system = _system;\r\n\r\n    function init() {\r\n\r\n            //key input is page wide, not just per canvas\r\n        js.Browser.document.addEventListener('keypress', on_keypress);\r\n        js.Browser.document.addEventListener('keydown',  on_keydown);\r\n        js.Browser.document.addEventListener('keyup',    on_keyup);\r\n\r\n            //initialize gamepads if they exist\r\n        active_gamepads = new Map();\r\n        gamepads_supported = (get_gamepad_list() != null);\r\n\r\n            //flag the state of deviceorientation api\r\n        if( untyped __js__('window.DeviceOrientationEvent') ) {\r\n            js.Browser.window.addEventListener('deviceorientation', on_orientation);\r\n            js.Browser.window.addEventListener('devicemotion', on_motion);\r\n        }\r\n\r\n        log('Gamepads supported: $gamepads_supported');\r\n\r\n    } //init\r\n\r\n    function update() {\r\n\r\n        if(gamepads_supported) {\r\n            poll_gamepads();\r\n        }\r\n\r\n    } //update\r\n\r\n    function destroy() {}\r\n\r\n    function listen( window:Window ) {\r\n\r\n        window.handle.addEventListener('contextmenu', on_contextmenu );\r\n\r\n        window.handle.addEventListener('mousedown',  on_mousedown);\r\n        window.handle.addEventListener('mouseup',    on_mouseup);\r\n        window.handle.addEventListener('mousemove',  on_mousemove);\r\n\r\n        window.handle.addEventListener('mousewheel', on_mousewheel);\r\n        window.handle.addEventListener('wheel',      on_mousewheel);\r\n\r\n        window.handle.addEventListener('touchstart', on_touchdown);\r\n        window.handle.addEventListener('touchend',   on_touchup);\r\n        window.handle.addEventListener('touchmove',  on_touchmove);\r\n\r\n    } //listen\r\n\r\n    function unlisten( window:Window ) {}\r\n    function on_event( _event : SystemEvent ) {}\r\n\r\n    public function text_input_start() {\r\n        // :unsupported: :todo:\r\n    } //text_input_start\r\n\r\n    public function text_input_stop() {\r\n        // :unsupported: :todo:\r\n    } //text_input_stop\r\n\r\n    public function text_input_rect(x:Int, y:Int, w:Int, h:Int) {\r\n        // :unsupported: :todo:\r\n    } //text_input_rect\r\n\r\n//Orientation\r\n\r\n    function on_orientation( event ) {\r\n\r\n        system.app.dispatch_system_event({\r\n            type: SystemEventType.input,\r\n            input: {\r\n                type: InputEventType.joystick,\r\n                timestamp: system.app.time,\r\n                event: {\r\n                    type: 'orientation',\r\n                    alpha: event.alpha,\r\n                    beta: event.beta,\r\n                    gamma: event.gamma\r\n                }\r\n            },\r\n        });\r\n\r\n\r\n    } //on_orientation\r\n\r\n    function on_motion( event ) {\r\n\r\n        system.app.dispatch_system_event({\r\n            type: SystemEventType.input,\r\n            input: {\r\n                type: InputEventType.joystick,\r\n                timestamp: system.app.time,\r\n                event: {\r\n                    type: 'motion',\r\n                    acceleration: event.acceleration,\r\n                    accelerationIncludingGravity: event.accelerationIncludingGravity,\r\n                    rotationRate: event.rotationRate\r\n                }\r\n            },\r\n        });\r\n\r\n    } //on_motion\r\n\r\n//Gamepad\r\n    function poll_gamepads() {\r\n\r\n        //just in case\r\n        if(!gamepads_supported) return;\r\n\r\n        var list = get_gamepad_list();\r\n        if(list != null) {\r\n            for(i in 0 ... list.length) {\r\n                if( untyped list[i] != null ) {\r\n                    handle_gamepad( untyped list[i] );\r\n                } else {\r\n                    //if an entry in the list was null,\r\n                    //check if it was here already before\r\n                    var _gamepad = active_gamepads.get(i);\r\n                    if(_gamepad != null) {\r\n\r\n                        system.dispatch_gamepad_device_event(\r\n                            _gamepad.index,\r\n                            _gamepad.id,\r\n                            GamepadDeviceEventType.device_removed,\r\n                            system.app.time //:todo:gamepadtimestamp:\r\n                        );\r\n\r\n                    } //_gamepad != null\r\n\r\n                        //and remove it so it only fires once\r\n                    active_gamepads.remove(i);\r\n\r\n                } //list[i] != null\r\n            } //for each in the list\r\n        } //if there is a list\r\n\r\n    } //poll_gamepads\r\n\r\n    function handle_gamepad( _gamepad : Dynamic ) {\r\n\r\n        //disconnected gamepads we don't need\r\n        if(_gamepad == null) return;\r\n\r\n            //check if this gamepad exists already\r\n        if( !active_gamepads.exists( _gamepad.index ) ) {\r\n\r\n                //if not we add it to the list\r\n            var _new_gamepad : WebGamepad = {\r\n                id : _gamepad.id,\r\n                index : _gamepad.index,\r\n                axes : [],\r\n                buttons : [],\r\n                timestamp : system.app.time //:todo:gamepadtimestamp:\r\n            };\r\n\r\n            var axes : Array<Float> = cast _gamepad.axes;\r\n            for(value in axes) {\r\n                _new_gamepad.axes.push(value);\r\n            }\r\n\r\n            var _button_list : Array<WebGamepadButton> = cast _gamepad.buttons;\r\n            for(_button in _button_list) {\r\n                _new_gamepad.buttons.push({ pressed:false, value:0 });\r\n            }\r\n\r\n            active_gamepads.set( _new_gamepad.index, _new_gamepad );\r\n\r\n            system.dispatch_gamepad_device_event(\r\n                _new_gamepad.index,\r\n                _new_gamepad.id,\r\n                GamepadDeviceEventType.device_added,\r\n                _new_gamepad.timestamp\r\n            );\r\n\r\n        } else {\r\n\r\n                //found in the list so we can update it if anything changed\r\n            var gamepad = active_gamepads.get(_gamepad.index);\r\n\r\n                //but only if the timestamp differs :todo:gamepadtimestamp:\r\n                //failfox at least doesn't store timestamp changes -_-\r\n            // if(gamepad.timestamp != _gamepad.timestamp) {\r\n\r\n                    //update the id if it changed\r\n                if(gamepad.id != _gamepad.id) { gamepad.id = _gamepad.id; }\r\n\r\n                    //:todo: see :gamepadtimestamp:\r\n                // gamepad.timestamp = _gamepad.timestamp;\r\n\r\n                    //we store the list of changed indices\r\n                    //so we can call the handler functions with each\r\n                var axes_changed : Array<Int> = [];\r\n                var buttons_changed : Array<Int> = [];\r\n                    //the last known values\r\n                var last_axes : Array<Float> = gamepad.axes;\r\n                var last_buttons : Array<WebGamepadButton> = gamepad.buttons;\r\n\r\n                    //the new known values\r\n                var new_axes : Array<Float> = cast _gamepad.axes;\r\n                var new_buttons : Array<WebGamepadButton> = cast _gamepad.buttons;\r\n\r\n                    //check for axes changes\r\n                var axis_index : Int = 0;\r\n                for(axis in new_axes) {\r\n\r\n                    if(axis != last_axes[axis_index]) {\r\n                        axes_changed.push(axis_index);\r\n                        gamepad.axes[axis_index] = axis;\r\n                    }\r\n\r\n                    axis_index++;\r\n\r\n                } //axis in new_axes\r\n\r\n                    //check for button changes\r\n                var button_index : Int = 0;\r\n                for(button in new_buttons) {\r\n\r\n                    if( button.value != last_buttons[button_index].value ) {\r\n                        buttons_changed.push(button_index);\r\n                        gamepad.buttons[button_index].pressed = button.pressed;\r\n                        gamepad.buttons[button_index].value = button.value;\r\n                    }\r\n\r\n                    button_index++;\r\n\r\n                } //button in new_buttons\r\n\r\n                    //now forward any axis changes to the wrapper\r\n                for(index in axes_changed) {\r\n\r\n                    system.dispatch_gamepad_axis_event(\r\n                        gamepad.index,\r\n                        index,\r\n                        new_axes[index],\r\n                        gamepad.timestamp\r\n                    );\r\n\r\n                } //for each axis changed\r\n\r\n                    //then forward any button changes to the wrapper\r\n                for(index in buttons_changed) {\r\n\r\n                    if(new_buttons[index].pressed == true) {\r\n\r\n                        system.dispatch_gamepad_button_down_event(\r\n                            gamepad.index,\r\n                            index,\r\n                            new_buttons[index].value,\r\n                            gamepad.timestamp\r\n                        );\r\n\r\n                    } else {\r\n\r\n                        system.dispatch_gamepad_button_up_event(\r\n                            gamepad.index,\r\n                            index,\r\n                            new_buttons[index].value,\r\n                            gamepad.timestamp\r\n                        );\r\n\r\n                    } //new_buttons[index].pressed\r\n\r\n                } //for each button change\r\n\r\n                //:todo: see :gamepadtimestamp:\r\n            // } //timestamp changed\r\n\r\n        } //exists\r\n\r\n    } //handle_gamepad\r\n\r\n    function fail_gamepads() {\r\n\r\n        gamepads_supported = false;\r\n        log(\"Gamepads are not supported in this browser :(\");\r\n\r\n    } //fail_gamepads\r\n\r\n        //It's really early for gamepads in browser\r\n    function get_gamepad_list() : Dynamic {\r\n\r\n            //try official api first\r\n        if( untyped js.Browser.navigator.getGamepads != null ) {\r\n            return untyped js.Browser.navigator.getGamepads();\r\n        }\r\n\r\n            //try newer webkit GetGamepads() function\r\n        if( untyped js.Browser.navigator.webkitGetGamepads != null ) {\r\n            return untyped js.Browser.navigator.webkitGetGamepads();\r\n        }\r\n\r\n            //if we make it here we failed support so fail out\r\n        fail_gamepads();\r\n\r\n        return null;\r\n\r\n    } //get_gamepad_list\r\n\r\n//Mouse\r\n    function on_mousedown( _mouse_event:js.html.MouseEvent ) {\r\n\r\n        var _window : Window = system.app.windowing.window_from_handle(cast _mouse_event.target);\r\n\r\n            //buttons are 1 index, on native, so we increase button\r\n        system.dispatch_mouse_down_event(\r\n            (_mouse_event.pageX - js.Browser.window.pageXOffset) - _window.x,\r\n            (_mouse_event.pageY - js.Browser.window.pageYOffset) - _window.y,\r\n            _mouse_event.button+1,\r\n            _mouse_event.timeStamp,\r\n            _window.id\r\n        );\r\n\r\n    } //on_mousedown\r\n\r\n    function on_mouseup( _mouse_event:js.html.MouseEvent ) {\r\n\r\n        var _window : Window = system.app.windowing.window_from_handle(cast _mouse_event.target);\r\n\r\n        system.dispatch_mouse_up_event(\r\n            (_mouse_event.pageX - js.Browser.window.pageXOffset) - _window.x,\r\n            (_mouse_event.pageY - js.Browser.window.pageYOffset) - _window.y,\r\n            _mouse_event.button+1,\r\n            _mouse_event.timeStamp,\r\n            _window.id\r\n        );\r\n\r\n    } //on_mouseup\r\n\r\n    function on_mousemove( _mouse_event:js.html.MouseEvent ) {\r\n\r\n        var _window : Window = system.app.windowing.window_from_handle(cast _mouse_event.target);\r\n\r\n        var _movement_x : Null<Int> = untyped _mouse_event.movementX;\r\n        var _movement_y : Null<Int> = untyped _mouse_event.movementY;\r\n\r\n        if(_movement_x == null) {\r\n            if(untyped _mouse_event.webkitMovementX != null) {\r\n                _movement_x = untyped _mouse_event.webkitMovementX;\r\n                _movement_y = untyped _mouse_event.webkitMovementY;\r\n            } else if(untyped _mouse_event.mozMovementX != null) {\r\n                _movement_x = untyped _mouse_event.mozMovementX;\r\n                _movement_y = untyped _mouse_event.mozMovementY;\r\n            }\r\n        }\r\n\r\n        system.dispatch_mouse_move_event(\r\n            (_mouse_event.pageX - js.Browser.window.pageXOffset) - _window.x,\r\n            (_mouse_event.pageY - js.Browser.window.pageYOffset) - _window.y,\r\n            _movement_x,\r\n            _movement_y,\r\n            _mouse_event.timeStamp,\r\n            _window.id\r\n        );\r\n\r\n    } //on_mousemove\r\n\r\n\r\n    function on_mousewheel( _wheel_event:js.html.WheelEvent ) {\r\n\r\n        if(system.app.config.web.prevent_default_mouse_wheel) {\r\n            _wheel_event.preventDefault();\r\n        }\r\n\r\n        var _window : Window = system.app.windowing.window_from_handle(cast _wheel_event.target);\r\n\r\n        var _x : Int = 0;\r\n        var _y : Int = 0;\r\n\r\n            //:todo:haxe:3.2: deltaX/deltaY added in haxe 3.2.0\r\n        if(untyped _wheel_event.deltaY != null) {\r\n            _y  = untyped _wheel_event.deltaY;\r\n        } else if((untyped _wheel_event.wheelDeltaY) != null) {\r\n            _y = Std.int(-(untyped _wheel_event.wheelDeltaY)/3);\r\n        }\r\n\r\n        if(untyped _wheel_event.deltaX != null) {\r\n            _x  = untyped _wheel_event.deltaX;\r\n        } else if((untyped _wheel_event.wheelDeltaX) != null) {\r\n            _x = Std.int(-(untyped _wheel_event.wheelDeltaX)/3);\r\n        }\r\n\r\n            //the /16 here is the default em size of a web page\r\n            //because native scrolls in lines, and web scrolls in pixels,\r\n            //sometimes, fuuu\r\n        system.dispatch_mouse_wheel_event(\r\n            Math.round(_x/16),\r\n            Math.round(_y/16),\r\n            _wheel_event.timeStamp,\r\n            _window.id\r\n        );\r\n\r\n    } //on_mousewheel\r\n\r\n    function on_contextmenu( _event:js.html.MouseEvent ) {\r\n\r\n        if(system.app.config.web.no_context_menu) {\r\n            _event.preventDefault();\r\n        }\r\n\r\n    } //on_contextmenu\r\n\r\n//Keys\r\n\r\n    //window id is 1 for keys as they come from the page, so always the main window\r\n\r\n        //a list of keycodes that should not generate text\r\n        //based events because... browsers.\r\n    static var _keypress_blacklist = [Key.backspace, Key.enter];\r\n        //keypress gives us typable keys\r\n    function on_keypress( _key_event:js.html.KeyboardEvent ) {\r\n\r\n        if(_key_event.which != 0 &&\r\n           _keypress_blacklist.indexOf(_key_event.keyCode) == -1) {\r\n\r\n            var _text = String.fromCharCode(_key_event.charCode);\r\n\r\n            system.dispatch_text_event(\r\n                _text, 0, _text.length,     //text, start, length\r\n                TextEventType.input,        //TextEventType\r\n                _key_event.timeStamp,       //timestamp\r\n                1                           //window\r\n            );\r\n\r\n        } //not special\r\n\r\n    } //on_keypress\r\n\r\n    function on_keydown( _key_event:js.html.KeyboardEvent ) {\r\n\r\n        var _keycode : Int = convert_keycode(_key_event.keyCode);\r\n        var _scancode : Int = Key.to_scan(_keycode);\r\n        var _mod_state : ModState = mod_state_from_event(_key_event);\r\n\r\n        if(system.app.config.web.prevent_default_keys.indexOf(_keycode) != -1) {\r\n            _key_event.preventDefault();\r\n        }\r\n\r\n        system.dispatch_key_down_event(\r\n            _keycode,\r\n            _scancode,\r\n            untyped _key_event.repeat,\r\n            _mod_state,\r\n            _key_event.timeStamp,\r\n            1\r\n        );\r\n\r\n    } //on_keydown\r\n\r\n    function on_keyup( _key_event:js.html.KeyboardEvent ) {\r\n\r\n\r\n        var _keycode : Int = convert_keycode(_key_event.keyCode);\r\n        var _scancode : Int = Key.to_scan(_keycode);\r\n        var _mod_state : ModState = mod_state_from_event(_key_event);\r\n\r\n        if(system.app.config.web.prevent_default_keys.indexOf(_keycode) != -1) {\r\n            _key_event.preventDefault();\r\n        }\r\n\r\n        system.dispatch_key_up_event(\r\n            _keycode,\r\n            _scancode,\r\n            untyped _key_event.repeat,\r\n            _mod_state,\r\n            _key_event.timeStamp,\r\n            1\r\n        );\r\n\r\n    } //on_keyup\r\n\r\n\tfunction mod_state_from_event( _key_event : js.html.KeyboardEvent ) : ModState {\r\n\r\n        var _none : Bool =\r\n            !_key_event.altKey &&\r\n            !_key_event.ctrlKey &&\r\n            !_key_event.metaKey &&\r\n            !_key_event.shiftKey;\r\n\r\n        return {\r\n            none    : _none,\r\n            lshift  : _key_event.shiftKey,\r\n            rshift  : _key_event.shiftKey,\r\n            lctrl   : _key_event.ctrlKey,\r\n            rctrl   : _key_event.ctrlKey,\r\n            lalt    : _key_event.altKey,\r\n            ralt    : _key_event.altKey,\r\n            lmeta   : _key_event.metaKey,\r\n            rmeta   : _key_event.metaKey,\r\n            num     : false, //:unsupported:\r\n            caps    : false, //:unsupported:\r\n            mode    : false, //:unsupported:\r\n            ctrl    : _key_event.ctrlKey,\r\n            shift   : _key_event.shiftKey,\r\n            alt     : _key_event.altKey,\r\n            meta    : _key_event.metaKey\r\n        };\r\n\r\n    } //mod_state_from_event\r\n\r\n        //This takes a *DOM* keycode and returns a snow Keycodes value\r\n    function convert_keycode(dom_keycode:Int) : Int {\r\n\r\n            //this converts the uppercase into lower case,\r\n            //since those are fixed values it doesn't need to be checked\r\n        if (dom_keycode >= 65 && dom_keycode <= 90) {\r\n            return dom_keycode + 32;\r\n        }\r\n\r\n            //this will pass back the same value if unmapped\r\n        return DOMKeys.dom_key_to_keycode(dom_keycode);\r\n\r\n    } //convert_keycode\r\n\r\n//Touch\r\n\r\n    function on_touchdown( _touch_event:js.html.TouchEvent ) {\r\n\r\n        var _window : Window = system.app.windowing.window_from_handle(cast _touch_event.target);\r\n\r\n        for(touch in _touch_event.changedTouches) {\r\n\r\n            var _x:Float = (touch.pageX - js.Browser.window.pageXOffset) - _window.x;\r\n            var _y:Float = (touch.pageY - js.Browser.window.pageYOffset) - _window.y;\r\n                _x = (_x / _window.width);\r\n                _y = (_y / _window.height);\r\n\r\n            system.dispatch_touch_down_event(\r\n                _x,\r\n                _y,\r\n                touch.identifier,\r\n                system.app.time\r\n            );\r\n        }\r\n    } //on_touchdown\r\n\r\n    function on_touchup( _touch_event:js.html.TouchEvent ){\r\n\r\n        var _window : Window = system.app.windowing.window_from_handle(cast _touch_event.target);\r\n\r\n        for(touch in _touch_event.changedTouches) {\r\n\r\n            var _x:Float = (touch.pageX - js.Browser.window.pageXOffset) - _window.x;\r\n            var _y:Float = (touch.pageY - js.Browser.window.pageYOffset) - _window.y;\r\n                _x = (_x / _window.width);\r\n                _y = (_y / _window.height);\r\n\r\n            system.dispatch_touch_up_event(\r\n                _x,\r\n                _y,\r\n                touch.identifier,\r\n                system.app.time\r\n            );\r\n        }\r\n\r\n    } //on_touchup\r\n\r\n    function on_touchmove( _touch_event:js.html.TouchEvent ){\r\n\r\n        var _window : Window = system.app.windowing.window_from_handle(cast _touch_event.target);\r\n\r\n        for(touch in _touch_event.changedTouches) {\r\n\r\n            var _x:Float = (touch.pageX - js.Browser.window.pageXOffset) - _window.x;\r\n            var _y:Float = (touch.pageY - js.Browser.window.pageYOffset) - _window.y;\r\n                _x = (_x / _window.width);\r\n                _y = (_y / _window.height);\r\n\r\n            system.dispatch_touch_move_event(\r\n                _x,\r\n                _y,\r\n                0,\r\n                0,\r\n                touch.identifier,\r\n                system.app.time\r\n            );\r\n        }\r\n\r\n    } //on_touchmove\r\n\r\n\r\n} //Input\r\n\r\n#end //snow_web\r\n","package snow.core.web.io;\r\n\r\n#if snow_web\r\n\r\nimport snow.types.Types;\r\nimport snow.api.buffers.Uint8Array;\r\nimport snow.api.Promise;\r\nimport snow.api.Debug.*;\r\n\r\n\r\n@:allow(snow.system.io.IO)\r\nclass IO implements snow.modules.interfaces.IO {\r\n\r\n    var system : snow.system.io.IO;\r\n\r\n    function new( _system:snow.system.io.IO ) system = _system;\r\n\r\n//Public API\r\n\r\n    public function url_open( _url:String ) {\r\n\r\n        if(_url != null && _url.length > 0) {\r\n            js.Browser.window.open(_url, '_blank');\r\n        }\r\n\r\n    } //url_open\r\n\r\n        /** Load bytes from the file path/url given.\r\n            On web a request is sent for the data */\r\n    public function data_load( _path:String, ?_options:IODataOptions ) : Promise {\r\n\r\n        return new Promise(function(resolve,reject) {\r\n\r\n                //defaults\r\n            var _async = true;\r\n            var _binary = true;\r\n\r\n            if(_options != null) {\r\n                if(_options.binary != null) _binary = _options.binary;\r\n            }\r\n\r\n            var request = new js.html.XMLHttpRequest();\r\n                request.open(\"GET\", _path, _async);\r\n\r\n            if(_binary) {\r\n                request.overrideMimeType('text/plain; charset=x-user-defined');\r\n            } else {\r\n                request.overrideMimeType('text/plain; charset=UTF-8');\r\n            }\r\n\r\n                //only _async can set the type it seems\r\n            if(_async) {\r\n                #if (haxe_ver < 3.2)\r\n                    request.responseType = 'arraybuffer';\r\n                #else\r\n                    request.responseType = js.html.XMLHttpRequestResponseType.ARRAYBUFFER;\r\n                #end\r\n            }\r\n\r\n            request.onload = function(data) {\r\n\r\n                if(request.status == 200) {\r\n                    resolve( new Uint8Array(request.response) );\r\n                } else {\r\n                    reject(Error.error('request status was ${request.status} / ${request.statusText}'));\r\n                }\r\n\r\n            } //onload\r\n\r\n            request.send();\r\n\r\n        });\r\n\r\n    } //data_load\r\n\r\n    public function data_save( _path:String, _data:Uint8Array, ?_options:IODataOptions ) : Bool {\r\n\r\n        return false;\r\n\r\n    } //data_save\r\n\r\n\r\n        /** Returns the path where string_save operates.\r\n            One targets where this is not a path, the path will be prefaced with `< >/`,\r\n            i.e on web targets the path will be `<localstorage>/` followed by the ID. */\r\n    public function string_save_path( _slot:Int = 0 ) : String {\r\n\r\n        var _pref_path = '<localstorage>';\r\n        var _slot_path = string_slot_id(_slot);\r\n        var _path = haxe.io.Path.join([_pref_path, _slot_path]);\r\n\r\n        return haxe.io.Path.normalize(_path);\r\n\r\n    } //string_save_path\r\n\r\n//Internal API\r\n\r\n    function init() {}\r\n    function update() {}\r\n    function destroy() {}\r\n    function on_event( _event:SystemEvent ) {}\r\n\r\n    inline function string_slot_id(_slot:Int = 0) {\r\n        var _parts = system.app.snow_config.app_package.split('.');\r\n        var _appname = _parts.pop();\r\n        var _org = _parts.join('.');\r\n\r\n        return '$_org/$_appname/${system.string_save_prefix}.$_slot';\r\n    }\r\n\r\n    inline function string_slot_destroy( _slot:Int = 0 ) : Bool {\r\n\r\n        var storage = js.Browser.window.localStorage;\r\n        if(storage == null) {\r\n            log('localStorage isnt supported in this browser?!');\r\n            return false;\r\n        }\r\n\r\n        var _id = string_slot_id(_slot);\r\n\r\n        storage.removeItem(_id);\r\n\r\n        return false;\r\n\r\n    } //string_slot_destroy\r\n\r\n        //flush the string map to disk\r\n    inline function string_slot_save( _slot:Int = 0, _contents:String ) : Bool {\r\n\r\n        var storage = js.Browser.window.localStorage;\r\n        if(storage == null) {\r\n            log('localStorage isnt supported in this browser?!');\r\n            return false;\r\n        }\r\n\r\n        var _id = string_slot_id(_slot);\r\n\r\n        storage.setItem(_id, _contents);\r\n\r\n        return true;\r\n\r\n    } //string_slot_save\r\n\r\n        //get the string contents of this slot,\r\n        //or null if not found/doesn't exist\r\n    inline function string_slot_load( _slot:Int = 0 ) : String {\r\n\r\n        var storage = js.Browser.window.localStorage;\r\n        if(storage == null) {\r\n            log('localStorage isnt supported in this browser?!');\r\n            return null;\r\n        }\r\n\r\n        var _id = string_slot_id(_slot);\r\n\r\n        return storage.getItem(_id);\r\n\r\n    } //string_slot_load\r\n\r\n    inline function string_slot_encode( _string:String ) : String {\r\n        return js.Browser.window.btoa(_string);\r\n    }\r\n\r\n    inline function string_slot_decode( _string:String ) : String {\r\n        return js.Browser.window.atob(_string);\r\n    }\r\n\r\n\r\n} //IO\r\n\r\n#end //snow_web\r\n","package snow.core.web.window;\r\n\r\n#if snow_web\r\n\r\nimport snow.types.Types;\r\nimport snow.system.window.Window;\r\n\r\n@:allow(snow.system.window.Windowing)\r\nclass Windowing implements snow.modules.interfaces.Windowing {\r\n\r\n    public var gl_contexts : Map<Int, js.html.webgl.RenderingContext>;\r\n\r\n    var seq_window : Int = 1;\r\n    var fs_windows : Array<Window>;\r\n    var system : snow.system.window.Windowing;\r\n\r\n    public function new( _system:snow.system.window.Windowing ) {\r\n\r\n        system = _system;\r\n        fs_windows = [];\r\n        gl_contexts = new Map();\r\n\r\n    } //new\r\n\r\n    function init() {\r\n\r\n        listen_for_visibility();\r\n        listen_for_resize();\r\n\r\n    } //init\r\n\r\n    function update() {}\r\n    function destroy() {}\r\n    function on_event(event:SystemEvent) {}\r\n\r\n    function _copy_config( _config:WindowConfig ) {\r\n        return {\r\n            borderless:_config.borderless,\r\n            fullscreen:_config.fullscreen,\r\n            fullscreen_desktop:_config.fullscreen_desktop,\r\n            height:_config.height,\r\n            no_input:_config.no_input,\r\n            resizable:_config.resizable,\r\n            title:_config.title,\r\n            width:_config.width,\r\n            x:_config.x,\r\n            y:_config.y\r\n        }\r\n    }\r\n\r\n    public function create( render_config:RenderConfig, _config:WindowConfig, on_created: WindowHandle->Int->WindowingConfig->Void ) {\r\n\r\n        var _window_id = seq_window;\r\n        var _handle : js.html.CanvasElement = js.Browser.document.createCanvasElement();\r\n        var config = _copy_config(_config);\r\n\r\n                //assign the initial sizes\r\n            _handle.width = config.width;\r\n            _handle.height = config.height;\r\n\r\n                //make sure it displays nicely\r\n            _handle.style.display = 'block';\r\n            _handle.style.position = 'relative';\r\n            _handle.style.background = '#000';\r\n\r\n                //add it to the document\r\n            js.Browser.document.body.appendChild(_handle);\r\n\r\n            //:todo: These options need to be exposed and documented\r\n        var _gl_context = _handle.getContextWebGL({ alpha:false, premultipliedAlpha:false, antialias: render_config.antialiasing > 0 });\r\n            //early out on no possible context\r\n        if(_gl_context == null) {\r\n            var msg =  'WebGL is required to run this!<br/><br/>';\r\n                msg += 'visit http://get.webgl.org/ for help <br/>';\r\n                msg += 'and contact the developer of the application';\r\n            internal_fallback(msg);\r\n            throw Error.windowing(msg);\r\n        }\r\n\r\n            //make sure there is a set up context early\r\n        if(snow.modules.opengl.GL.current_context == null) {\r\n            snow.modules.opengl.GL.current_context = _gl_context;\r\n        }\r\n\r\n            //store it for activating later\r\n        gl_contexts.set(_window_id, _gl_context);\r\n\r\n            //get the real canvas position and give it to the config\r\n        var _window_pos = get_real_window_position( _handle );\r\n\r\n            config.x = _window_pos.x;\r\n            config.y = _window_pos.y;\r\n\r\n            //set the window title to the config title if there is one\r\n        if(config.title != null && config.title != '') {\r\n            js.Browser.document.title = config.title;\r\n        }\r\n\r\n            //tell them and give the handle for later.\r\n        on_created(_handle, _window_id, { config:config, render_config:render_config });\r\n        _handle.setAttribute('id', 'window${_window_id}');\r\n\r\n        seq_window++;\r\n\r\n    } //window_create\r\n\r\n    public function destroy_window( _window:Window ) {\r\n\r\n        js.Browser.document.body.removeChild( _window.handle );\r\n\r\n    } //destroy_window\r\n\r\n    public function close( _window:Window ) {\r\n\r\n        _window.handle.style.display = 'none';\r\n\r\n    } //close\r\n\r\n    public function show( _window:Window ) {\r\n\r\n        _window.handle.style.display = null;\r\n\r\n    } //show\r\n\r\n    function internal_resize( _window:Window, _w:Float, _h:Float ) {\r\n\r\n        system.app.dispatch_system_event({\r\n            type : SystemEventType.window,\r\n            window : {\r\n                type : WindowEventType.size_changed,\r\n                timestamp : system.app.time,\r\n                window_id : _window.id,\r\n                event : { x:_w, y:_h }\r\n            }\r\n        });\r\n\r\n        system.app.dispatch_system_event({\r\n            type : SystemEventType.window,\r\n            window : {\r\n                type : WindowEventType.resized,\r\n                timestamp : system.app.time,\r\n                window_id : _window.id,\r\n                event : { x:_w, y:_h }\r\n            }\r\n        });\r\n\r\n    } //internal_resize\r\n\r\n    public function update_window( _window:Window ) {\r\n\r\n        var _rect = _window.handle.getBoundingClientRect();\r\n\r\n            if(_rect.left != _window.x || _rect.top != _window.y) {\r\n\r\n                system.app.dispatch_system_event({\r\n                    type : SystemEventType.window,\r\n                    window : {\r\n                        type : WindowEventType.moved,\r\n                        timestamp : system.app.time,\r\n                        window_id : _window.id,\r\n                        event : { x:_rect.left, y:_rect.top }\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            if(_rect.width != _window.width || _rect.height != _window.height) {\r\n\r\n                internal_resize(_window, _rect.width, _rect.height);\r\n\r\n            }\r\n\r\n        _rect = null;\r\n\r\n    } //window_update\r\n\r\n    public function render( _window:Window ) {\r\n\r\n        var _window_gl_context = gl_contexts.get(_window.id);\r\n        if(snow.modules.opengl.GL.current_context != _window_gl_context) {\r\n            snow.modules.opengl.GL.current_context = _window_gl_context;\r\n        }\r\n\r\n    } //window_render\r\n\r\n    public function swap( _window:Window ) {\r\n\r\n        //:unsupported:\r\n        //this concept is not possible in browser\r\n\r\n    } //window_swap\r\n\r\n    public function simple_message( _window:Window, message:String, ?title:String=\"\" ) {\r\n\r\n        js.Browser.window.alert( message );\r\n\r\n    } //window_simple_message\r\n\r\n    public function set_size( _window:Window, w:Int, h:Int ) {\r\n\r\n        _window.handle.width = w;\r\n        _window.handle.height = h;\r\n        _window.handle.style.width = '${w}px';\r\n        _window.handle.style.height = '${h}px';\r\n\r\n        internal_resize(_window, w, h);\r\n\r\n    } //window_set_size\r\n\r\n    public function set_position( _window:Window, x:Int, y:Int ) {\r\n\r\n        _window.handle.style.left = '${x}px';\r\n        _window.handle.style.top = '${y}px';\r\n\r\n    } //window_set_position\r\n\r\n    public function get_real_window_position( handle:WindowHandle ) : { x:Int, y:Int } {\r\n\r\n        // see the following link for this implementation\r\n        // http://www.quirksmode.org/js/findpos.html\r\n\r\n        var curleft = 0;\r\n        var curtop = 0;\r\n\r\n            //start at the canvas\r\n        var _obj : js.html.Element = cast handle;\r\n\r\n        var _has_parent : Bool = true;\r\n        var _max_count = 0;\r\n\r\n        while(_has_parent == true) {\r\n\r\n            _max_count++;\r\n\r\n            if(_max_count > 100) {\r\n                _has_parent = false;\r\n                break;\r\n            } //prevent rogue endless loops\r\n\r\n            if(_obj.offsetParent != null) {\r\n\r\n                    //it still has an offset parent, add it up\r\n                curleft += _obj.offsetLeft;\r\n                curtop += _obj.offsetTop;\r\n\r\n                    //then move onto the parent\r\n                _obj = cast _obj.offsetParent;\r\n\r\n            } else {\r\n                    //we are done\r\n                _has_parent = false;\r\n\r\n            }\r\n        } //while\r\n\r\n        return { x:curleft, y:curtop };\r\n\r\n    } //get_real_window_position\r\n\r\n    public function set_title( _window:Window, title:String ) {\r\n\r\n        js.Browser.document.title = title;\r\n\r\n    } //window_set_title\r\n\r\n    public function set_max_size( _window:Window, w:Int, h:Int ) {\r\n\r\n        _window.handle.style.maxWidth = '${w}px';\r\n        _window.handle.style.maxHeight = '${h}px';\r\n\r\n    } //window_set_max_size\r\n\r\n    public function set_min_size( _window:Window, w:Int, h:Int ) {\r\n\r\n        _window.handle.style.minWidth = '${w}px';\r\n        _window.handle.style.minHeight = '${h}px';\r\n\r\n    } //window_set_min_size\r\n\r\n\r\n\r\n    var _pre_fs_padding : String = '0';\r\n    var _pre_fs_margin : String = '0';\r\n    var _pre_fs_s_width : String = '';\r\n    var _pre_fs_s_height : String = '';\r\n    var _pre_fs_width : Int = 0;\r\n    var _pre_fs_height : Int = 0;\r\n    var _pre_fs_body_overflow : String = '0';\r\n    var _pre_fs_body_margin : String = '0';\r\n\r\n    function internal_fullscreen( _window:Window, fullscreen:Bool ) {\r\n\r\n        var  _handle = _window.handle;\r\n\r\n            //track for resizes\r\n        if(fullscreen) {\r\n            if(fs_windows.indexOf(_window) == -1) {\r\n                fs_windows.push(_window);\r\n            }\r\n        } else {\r\n            fs_windows.remove(_window);\r\n        }\r\n\r\n            //find out if the config requested true fullscreen or not\r\n        var true_fullscreen = system.app.config.web.true_fullscreen;\r\n\r\n            //as always browser support for newer features will be\r\n            //sporadic. Tested fullscreen against firefox/chrome/opera/safari latest\r\n            //all appear to work as expected, but have no cancel (user must press escape)\r\n        if(fullscreen) {\r\n\r\n            if(true_fullscreen) {\r\n\r\n\r\n                    //official api's first\r\n                if(untyped _handle.requestFullscreen == null) {\r\n                    if(untyped _handle.requestFullScreen == null) {\r\n                        if(untyped _handle.webkitRequestFullscreen == null) {\r\n                            if(untyped _handle.mozRequestFullScreen == null) {\r\n\r\n                            } else { untyped _handle.mozRequestFullScreen(); }\r\n                        } else { untyped _handle.webkitRequestFullscreen(); }\r\n                    } else { untyped _handle.requestFullScreen(null); }\r\n                } else { untyped _handle.requestFullscreen(); }\r\n\r\n            } else {\r\n\r\n                _pre_fs_padding = _handle.style.padding;\r\n                _pre_fs_margin = _handle.style.margin;\r\n                _pre_fs_s_width = _handle.style.width;\r\n                _pre_fs_s_height = _handle.style.height;\r\n                _pre_fs_width = _handle.width;\r\n                _pre_fs_height = _handle.height;\r\n                _pre_fs_body_margin = js.Browser.document.body.style.margin;\r\n                _pre_fs_body_overflow = js.Browser.document.body.style.overflow;\r\n\r\n                _handle.style.margin = '0';\r\n                _handle.style.padding = '0';\r\n                _handle.style.width = js.Browser.window.innerWidth + 'px';\r\n                _handle.style.height = js.Browser.window.innerHeight + 'px';\r\n                _handle.width = js.Browser.window.innerWidth;\r\n                _handle.height = js.Browser.window.innerHeight;\r\n\r\n                    //stop the browser page from having scrollbars etc\r\n                js.Browser.document.body.style.margin = '0';\r\n                js.Browser.document.body.style.overflow = 'hidden';\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            if(true_fullscreen) {\r\n\r\n                //:unsupported:\r\n                //currently no cancel full screen in fullscreen mode\r\n\r\n            } else {\r\n\r\n                _handle.style.padding = _pre_fs_padding;\r\n                _handle.style.margin = _pre_fs_margin;\r\n                _handle.style.width = _pre_fs_s_width;\r\n                _handle.style.height = _pre_fs_s_height;\r\n                _handle.width = _pre_fs_width;\r\n                _handle.height = _pre_fs_height;\r\n                js.Browser.document.body.style.margin = _pre_fs_body_margin;\r\n                js.Browser.document.body.style.overflow = _pre_fs_body_overflow;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } //set_handle_fullscreen\r\n\r\n    public function fullscreen( _window:Window, fullscreen:Bool ) {\r\n\r\n        internal_fullscreen( _window, fullscreen );\r\n\r\n    } //window_fullscreen\r\n\r\n    public function bordered( _window:Window, bordered:Bool ) {\r\n\r\n        //:unsupported:\r\n        //no such concept on browser\r\n\r\n    } //window_bordered\r\n\r\n\r\n    public function grab( _window:Window, grabbed:Bool ) {\r\n\r\n        if(grabbed) {\r\n                //official api's first\r\n            if(_window.handle.requestPointerLock == null) {\r\n                    if(untyped _window.handle.webkitRequestPointerLock == null) {\r\n                        if(untyped _window.handle.mozRequestPointerLock == null) {\r\n\r\n                        } else { untyped _window.handle.mozRequestPointerLock(); }\r\n                    } else { untyped _window.handle.webkitRequestPointerLock(); }\r\n            } else { _window.handle.requestPointerLock(); }\r\n\r\n        } else {\r\n\r\n            //:unsupported:\r\n            //pointer lock cancel api not yet in browsers,\r\n            //user must press escape\r\n\r\n        }\r\n\r\n    } //window_grab\r\n\r\n    public function set_cursor_position( _window:Window, x:Int, y:Int ) {\r\n\r\n        // :unsupported:\r\n        // for good reason.\r\n\r\n    } //set_cursor_position\r\n\r\n        /** Toggle the OS cursor. This is not window specific but system wide */\r\n    var cursor_style : js.html.Element;\r\n    var _cursor_visible : Bool = true;\r\n    public function system_enable_cursor( enable:Bool ) {\r\n\r\n        if(cursor_style == null) {\r\n            cursor_style = js.Browser.document.createStyleElement();\r\n            cursor_style.innerHTML = '* { cursor:none; }';\r\n        }\r\n\r\n        if(enable && !_cursor_visible) {\r\n            _cursor_visible = true;\r\n            js.Browser.document.body.removeChild(cursor_style);\r\n        } else if(!enable && _cursor_visible) {\r\n            _cursor_visible = false;\r\n            js.Browser.document.body.appendChild(cursor_style);\r\n        }\r\n\r\n    } //system_enable_cursor\r\n\r\n        /** Lock the OS cursor to the foreground window. This hides the cursor and prevents it from leaving, reporting relative coordinates. */\r\n    public function system_lock_cursor( enable:Bool ) {\r\n\r\n        if(system.app.window != null) {\r\n            grab(system.app.window, enable);\r\n        }\r\n\r\n    } //system_lock_cursor\r\n\r\n        /** Toggle vertical refresh. This is not window specific but context wide */\r\n    public function system_enable_vsync( enable:Bool ) : Int {\r\n\r\n        // :unsupported:\r\n        //technically RAF is vsync but it's not a toggle,\r\n        //and without it is terrible so, not doing that\r\n\r\n        return -1;\r\n\r\n    } //system_enable_vsync\r\n\r\n\r\n    public function display_count() : Int {\r\n\r\n        //:unsupported:\r\n        return 1;\r\n\r\n    } //display_count\r\n\r\n    public function display_mode_count( display:Int ) : Int {\r\n\r\n        //:unsupported:\r\n        return 1;\r\n\r\n    } //display_mode_count\r\n\r\n    public function display_native_mode( display:Int ) : DisplayMode {\r\n\r\n        //:unsupported:\r\n\r\n        return {\r\n            format : 0,\r\n            refresh_rate : 0,\r\n            width : js.Browser.window.screen.width,\r\n            height : js.Browser.window.screen.height\r\n        };\r\n\r\n    } //display_native_mode\r\n\r\n    public function display_current_mode( display:Int ) : DisplayMode {\r\n\r\n        //:unsupported:\r\n        //will always return the default display mode\r\n\r\n        return display_native_mode(display);\r\n\r\n    } //display_current_mode\r\n\r\n    public function display_mode( display:Int, mode_index:Int ) : DisplayMode {\r\n\r\n        //:unsupported:\r\n        //will always return the default display mode\r\n\r\n        return display_native_mode(display);\r\n\r\n    } //display_mode\r\n\r\n        //returns the size of the main window\r\n    public function display_bounds( display:Int ) : { x:Int, y:Int, width:Int, height:Int } {\r\n\r\n        return {\r\n            x : 0,\r\n            y : 0,\r\n            width : js.Browser.window.innerWidth,\r\n            height : js.Browser.window.innerHeight\r\n        };\r\n\r\n    } //display_bounds\r\n\r\n    public function display_name( display:Int ) : String {\r\n\r\n        return js.Browser.navigator.vendor;\r\n\r\n    } //display_name\r\n\r\n        /** Called to set up any listeners on the given window  */\r\n    public function listen( _window:Window ) {\r\n\r\n        _window.handle.addEventListener('mouseleave', on_internal_leave);\r\n        _window.handle.addEventListener('mouseenter', on_internal_enter);\r\n\r\n        if(_window.config.fullscreen) {\r\n            internal_fullscreen( _window, _window.config.fullscreen );\r\n            _window.config.width = _window.handle.width;\r\n            _window.config.height = _window.handle.height;\r\n        }\r\n\r\n    } //listen\r\n\r\n        /** Called to remove any listeners on the given window  */\r\n    public function unlisten( _window:Window ) {\r\n\r\n        _window.handle.removeEventListener('mouseleave', on_internal_leave);\r\n        _window.handle.removeEventListener('mouseenter', on_internal_enter);\r\n\r\n        fs_windows.remove(_window);\r\n\r\n    } //unlisten\r\n\r\n\r\n    function on_internal_leave( _mouse_event:js.html.MouseEvent ) {\r\n\r\n        var _window : Window = system.window_from_handle(cast _mouse_event.target);\r\n\r\n            //tell the system\r\n        system.app.dispatch_system_event({\r\n            type : SystemEventType.window,\r\n            window : {\r\n                type : WindowEventType.leave,\r\n                timestamp : _mouse_event.timeStamp,\r\n                window_id : _window.id,\r\n                event : _mouse_event\r\n            }\r\n        });\r\n\r\n    } //on_internal_leave\r\n\r\n    function on_internal_enter( _mouse_event:js.html.MouseEvent ) {\r\n\r\n        var _window : Window = system.window_from_handle(cast _mouse_event.target);\r\n\r\n            //tell the system\r\n        system.app.dispatch_system_event({\r\n            type : SystemEventType.window,\r\n            window : {\r\n                type : WindowEventType.enter,\r\n                timestamp : _mouse_event.timeStamp,\r\n                window_id : _window.id,\r\n                event : _mouse_event\r\n            }\r\n        });\r\n\r\n    } //on_internal_enter\r\n\r\n    function listen_for_resize() {\r\n\r\n        js.Browser.window.onresize = function(e){\r\n            if(!system.app.config.web.true_fullscreen) {\r\n\r\n                for(window in fs_windows) {\r\n                    window.set_size( js.Browser.window.innerWidth, js.Browser.window.innerHeight);\r\n                    internal_resize( window, window.width, window.height );\r\n                }\r\n\r\n            } //if true_fullscreen\r\n        } //onresize\r\n\r\n    } //listen_for_resize\r\n\r\n    var _hidden_name = '';\r\n    var _hidden_event_name = '';\r\n    function listen_for_visibility() {\r\n\r\n        if( untyped __js__('typeof document.hidden !== undefined') ) {\r\n            _hidden_name = 'hidden';\r\n            _hidden_event_name = 'visibilitychange';\r\n        } else if( untyped __js__('typeof document.mozHidden !== undefined ')) {\r\n            _hidden_name = 'mozHidden';\r\n            _hidden_name = 'mozvisibilitychange';\r\n        } else if( untyped __js__('typeof document.msHidden !== \"undefined\"')) {\r\n            _hidden_name = \"msHidden\";\r\n            _hidden_event_name = \"msvisibilitychange\";\r\n        } else if( untyped __js__('typeof document.webkitHidden !== \"undefined\"')) {\r\n            _hidden_name = \"webkitHidden\";\r\n            _hidden_event_name = \"webkitvisibilitychange\";\r\n        }\r\n\r\n        if(_hidden_name != '' && _hidden_event_name != '') {\r\n            js.Browser.document.addEventListener(_hidden_event_name, on_visibility_change );\r\n        }\r\n\r\n    }\r\n\r\n    function on_visibility_change(jsevent) {\r\n\r\n        var _event = {\r\n            type : SystemEventType.window,\r\n            window : {\r\n                type : WindowEventType.shown,\r\n                timestamp : system.app.time,\r\n                window_id : 1, //page window id is 1\r\n                event : jsevent\r\n            }\r\n        };\r\n\r\n            //dispatch one for minimize/restore, one for focus lost/gain\r\n            //and one for hidden/exposed\r\n        if( untyped document[_hidden_name] ) {\r\n            _event.window.type = WindowEventType.hidden;\r\n                system.app.dispatch_system_event(_event);\r\n            _event.window.type = WindowEventType.minimized;\r\n                system.app.dispatch_system_event(_event);\r\n            _event.window.type = WindowEventType.focus_lost;\r\n                system.app.dispatch_system_event(_event);\r\n        } else {\r\n            _event.window.type = WindowEventType.shown;\r\n                system.app.dispatch_system_event(_event);\r\n            _event.window.type = WindowEventType.restored;\r\n                system.app.dispatch_system_event(_event);\r\n            _event.window.type = WindowEventType.focus_gained;\r\n                system.app.dispatch_system_event(_event);\r\n        }\r\n\r\n    } //on_visibility_change\r\n\r\n    function internal_fallback( message:String ) {\r\n\r\n        var text_el : js.html.Element;\r\n        var overlay_el : js.html.Element;\r\n\r\n        text_el = js.Browser.document.createDivElement();\r\n        overlay_el = js.Browser.document.createDivElement();\r\n\r\n        text_el.style.marginLeft = 'auto';\r\n        text_el.style.marginRight = 'auto';\r\n        text_el.style.color = '#d3d3d3';\r\n        text_el.style.marginTop = '5em';\r\n        text_el.style.fontSize = '1.4em';\r\n        text_el.style.fontFamily = 'helvetica,sans-serif';\r\n        text_el.innerHTML = message;\r\n\r\n        overlay_el.style.top = '0';\r\n        overlay_el.style.left = '0';\r\n        overlay_el.style.width = '100%';\r\n        overlay_el.style.height = '100%';\r\n        overlay_el.style.display = 'block';\r\n        overlay_el.style.minWidth = '100%';\r\n        overlay_el.style.minHeight = '100%';\r\n        overlay_el.style.textAlign = 'center';\r\n        overlay_el.style.position = 'absolute';\r\n        overlay_el.style.background = 'rgba(1,1,1,0.90)';\r\n\r\n        overlay_el.appendChild(text_el);\r\n        js.Browser.document.body.appendChild(overlay_el);\r\n\r\n\r\n    }\r\n\r\n} //Windowing\r\n\r\n#end //snow_web\r\n","package snow.modules.howlerjs;\r\n\r\n#if snow_web\r\n\r\nimport snow.modules.howlerjs.Howl;\r\nimport snow.types.Types;\r\nimport snow.api.Promise;\r\nimport snow.api.buffers.Uint8Array;\r\n\r\ntypedef Sound = snow.modules.howlerjs.sound.Sound;\r\n\r\n@:allow(snow.system.audio.Audio)\r\nclass Audio implements snow.modules.interfaces.Audio {\r\n\r\n    var suspended_sounds : Array<snow.system.audio.Sound>;\r\n    var system : snow.system.audio.Audio;\r\n    var handles : Map<Howl, Sound>;\r\n\r\n    function new( _system:snow.system.audio.Audio ) {\r\n        system = _system;\r\n        suspended_sounds = [];\r\n        handles = new Map();\r\n    }\r\n\r\n    function init() {}\r\n    function update() {}\r\n    function destroy() {}\r\n    function on_event( event:SystemEvent ) {}\r\n\r\n    public function suspend() {\r\n\r\n        for(sound in handles) {\r\n            if(sound.playing) {\r\n                sound.toggle();\r\n                suspended_sounds.push(sound);\r\n            }\r\n        }\r\n\r\n    } //suspend\r\n\r\n    public function resume() {\r\n\r\n        while(suspended_sounds.length > 0) {\r\n            var sound = suspended_sounds.pop();\r\n            sound.toggle();\r\n        }\r\n\r\n    } //resume\r\n\r\n    function info_from_id(_id:String, ?_format:AudioFormatType) : AudioInfo {\r\n\r\n        if(_format == null) {\r\n            var _ext = haxe.io.Path.extension(_id);\r\n            _format = switch(_ext) {\r\n                case 'wav': wav;\r\n                case 'ogg': ogg;\r\n                case 'pcm': pcm;\r\n                case _: unknown;\r\n            }\r\n        }\r\n\r\n        return {\r\n            format: _format,\r\n            id:_id,\r\n            handle:null,\r\n            data:null\r\n        }\r\n\r\n    } //info_from_id\r\n\r\n    public function create_sound( _id:String, _name:String, _streaming:Bool=false, ?_format:AudioFormatType ) : Promise {\r\n\r\n        return new Promise(function(resolve, reject) {\r\n\r\n            var _path = system.app.assets.path(_id);\r\n            var info = info_from_id(_path, _format);\r\n            var sound = new Sound(system, _name, _streaming);\r\n\r\n            info.handle = new Howl({\r\n                urls: [ _path ],\r\n                // buffer : _streaming, //:todo: test\r\n                    //we want an end notification to propagate\r\n                onend : function() { system.app.audio.module._on_end(info.handle); },\r\n                    //handle failure\r\n                onloaderror : function() { reject(Error.error('failed to create sound $_name from $_id')); },\r\n                    //and we listen for when it's done loading so we can emit\r\n                onload : function(){\r\n                    info.handle = untyped __js__('this');\r\n                    sound.info = info;\r\n                    handles.set(info.handle, sound);\r\n                    resolve(sound);\r\n                }\r\n            });\r\n\r\n        }); //promise\r\n\r\n    } //create_sound\r\n\r\n    public function create_sound_from_bytes( _name:String, _bytes:Uint8Array, _format:AudioFormatType ) : Sound {\r\n\r\n        var _ext = switch(_format) {\r\n            case AudioFormatType.ogg: 'ogg';\r\n            case AudioFormatType.wav: 'wav';\r\n            case AudioFormatType.pcm: throw Error.error('pcm audio format unsupported atm');\r\n            case AudioFormatType.unknown: throw Error.error('unknown audio format for create_sound_from_bytes ' + _name);\r\n        }\r\n\r\n        var str = '', i = 0, len = _bytes.length;\r\n        while(i < len) str += String.fromCharCode(_bytes[i++] & 0xff);\r\n        var b64 = js.Browser.window.btoa(str);\r\n        var src = 'data:audio/$_ext;base64,$b64';\r\n\r\n        var info = info_from_id('bytes;$_name', _format);\r\n        var sound = new Sound(system, _name, false);\r\n\r\n        info.handle = new Howl({\r\n            urls: [ src ],\r\n            onend : function() { system.app.audio.module._on_end(info.handle); },\r\n            onloaderror : function() { throw Error.error('failed to create sound $_name from bytes'); },\r\n            onload : function(){\r\n                info.handle = untyped __js__('this');\r\n                sound.info = info;\r\n                handles.set(info.handle, sound);\r\n            }\r\n        });\r\n\r\n        return sound;\r\n\r\n    } //create_sound_from_bytes\r\n\r\n    //called when a sound ends, due to a bug in chrome with web audio\r\n    //and howler we increased the duration to a really high number,\r\n    //see https://github.com/goldfire/howler.js/issues/279\r\n    //this duration fix from goldfire was implemented in howler locally,\r\n    //but there is an outstanding bug where on end only fires once, not each loop.\r\n    //to make it fire each loop (at the cost of a slight jump on loop)\r\n    //uncomment the stop/play here.\r\n\r\n    function _on_end( handle:AudioHandle ) {\r\n        var sound = handles.get(handle);\r\n        if(sound != null) {\r\n            sound.emit('end');\r\n\r\n            //:todo: read above\r\n            // sound.stop();\r\n            // sound.play();\r\n        }\r\n    }\r\n\r\n} //AudioSystem\r\n\r\n#end //snow_web\r\n","package snow.system.audio;\r\n\r\nimport snow.system.audio.Audio;\r\nimport snow.types.Types;\r\nimport snow.api.Debug.*;\r\n\r\n\r\n@:allow(snow.system.audio.Audio)\r\nclass Sound {\r\n\r\n        /** The `Audio` system handling this sound */\r\n    public var system : Audio;\r\n        /** The name of this sound */\r\n    public var name : String = '';\r\n\r\n        /** If the sound is playing */\r\n    @:isVar public var playing  (get, set): Bool = false;\r\n        /** If the sound is paused */\r\n    @:isVar public var paused   (get, set): Bool = false;\r\n        /** If the sound is loaded or ready to use */\r\n    @:isVar public var loaded   (get, set): Bool = false;\r\n        /** The `AudioInfo` this sound is created from. When assigning this it will clean up and set itself to this info instead. */\r\n    @:isVar public var info     (get,set) : AudioInfo;\r\n        /** The pitch of this sound */\r\n    @:isVar public var pitch    (get,set) : Float = 1.0;\r\n        /** The volume of this sound */\r\n    @:isVar public var volume   (get,set) : Float = 1.0;\r\n        /** The pan of this sound. Pan only logically works on mono sounds, and is by default 2D sounds  */\r\n    @:isVar public var pan      (get,set) : Float = 0.0;\r\n        /** If the sound is looping or not. Use `loop()` to change this. */\r\n    @:isVar public var looping  (get,set) : Bool = false;\r\n        /** The current playback position of this sound in `seconds` */\r\n    @:isVar public var position  (get,set) : Float = 0.0;\r\n        /** The duration of this sound, in `seconds` */\r\n    @:isVar public var duration (get,never) : Float = 0.0;\r\n        /** The length of this sound in `bytes` */\r\n    @:isVar public var length_bytes   (get, never) : Int = 0;\r\n        /** The current playback position of this sound in `bytes` */\r\n    @:isVar public var position_bytes (get, set) : Int = 0;\r\n\r\n//Stream specific\r\n\r\n        /** Stream: If the sound is a streamed source */\r\n    @:isVar public var is_stream (default, null): Bool = false;\r\n\r\n#if snow_native //:todo:\r\n        /** `Stream only`: The length of bytes for a single buffer to queue up to stream. default: `176400`, about 1 second in 16 bit mono.*/\r\n    public var stream_buffer_length : Int;\r\n        /** `Stream only`: The number of buffers to use in the queue for streaming. default: `4` */\r\n    public var stream_buffer_count : Int;\r\n        /** `Stream only`: The get function, assign a function here only if you want to stream data to the source manually, like generative sound. */\r\n    public var stream_data_get : Int->Int->AudioDataBlob;\r\n        /** `Stream only`: The seek function, assign a function here only if you want to stream data to the source manually, like generative sound. */\r\n    public var stream_data_seek : Int->Bool;\r\n#end //snow_native\r\n\r\n//\r\n\r\n        /** Create a new Sound instance. Usually not called directly, handled internally by `audio.create` */\r\n    public function new( _system:Audio, _name:String, _is_stream:Bool=false ) {\r\n\r\n        name = _name;\r\n        system = _system;\r\n        is_stream = _is_stream;\r\n\r\n        #if snow_native //:todo:\r\n            stream_buffer_length = system.app.config.native.audio_buffer_length;\r\n            stream_buffer_count = system.app.config.native.audio_buffer_count;\r\n            stream_data_get = default_stream_data_get;\r\n            stream_data_seek = default_stream_data_seek;\r\n        #end //snow_native\r\n\r\n    } //new\r\n\r\n//\r\n\r\n    @:noCompletion public function emit(_event:String) {\r\n\r\n        @:privateAccess system.sound_event(this, _event);\r\n\r\n    } //emit\r\n\r\n        /** Connect a handler to a named event.\r\n            Current events include `load` and `end`, and will soon be strict typed. */\r\n    public function on(_event:String, _handler:Sound->Void) {\r\n\r\n        system.on(name, _event, _handler);\r\n\r\n    } //emit\r\n\r\n        /** Disconnect a handler from a named event type, previously connected with `on`. */\r\n    public function off(_event:String, _handler:Sound->Void) {\r\n\r\n        system.off(name, _event, _handler);\r\n\r\n    } //off\r\n\r\n\r\n//Functions implemented in subclasses\r\n\r\n        /** Play this sound */\r\n    public function play() { log('Sound:play called in root Sound module. Nothing will happen.'); }\r\n        /** Loop this sound */\r\n    public function loop() { log('Sound:loop called in root Sound module. Nothing will happen.'); }\r\n        /** Stop this sound */\r\n    public function stop() { log('Sound:stop called in root Sound module. Nothing will happen.'); }\r\n        /** Pause this sound */\r\n    public function pause() { log('Sound:pause called in root Sound module. Nothing will happen.'); }\r\n        /** Destroy this sound and it's data. */\r\n    public function destroy() { log('Sound:destroy called in root Sound module. Nothing will happen.'); }\r\n\r\n// Internal system events\r\n\r\n    @:noCompletion public function internal_update() {}\r\n    @:noCompletion public function internal_play()  {}\r\n    @:noCompletion public function internal_loop() {}\r\n    @:noCompletion public function internal_stop() {}\r\n    @:noCompletion public function internal_pause() {}\r\n\r\n//Shared implementations\r\n\r\n        /** Toggle this sound */\r\n    public function toggle() {\r\n\r\n        playing = !playing;\r\n\r\n        if(playing) {\r\n            if(looping) {\r\n                loop();\r\n            } else {\r\n                play();\r\n            }\r\n        } else {\r\n            pause();\r\n        }\r\n\r\n    } //toggle\r\n\r\n//Streaming API\r\n\r\n//:todo:\r\n#if snow_native\r\n\r\n        /** Default data seek implementation for `SoundStream` uses `assets.system.audio_seek_source` */\r\n    function default_stream_data_seek( _to:Int ) : Bool {\r\n\r\n        return system.app.assets.module.audio_seek_source( info, _to );\r\n\r\n    } //default_data_seek\r\n\r\n        /** Default data get implementation for `SoundStream` uses `assets.system.audio_load_portion` */\r\n    function default_stream_data_get( _start:Int, _length:Int ) : AudioDataBlob {\r\n\r\n        return system.app.assets.module.audio_load_portion( info, _start, _length );\r\n\r\n    } //default_data_get\r\n\r\n#end //snow_native\r\n\r\n//Getters/setters\r\n\r\n    function get_playing() : Bool return playing;\r\n    function get_paused() : Bool return paused;\r\n    function get_loaded() : Bool return loaded;\r\n    function get_info() : AudioInfo return info;\r\n    function set_info( _info:AudioInfo ) : AudioInfo return info = _info;\r\n    function get_pan() : Float return pan;\r\n    function get_pitch() : Float return pitch;\r\n    function get_volume() : Float return volume;\r\n    function get_looping() : Bool return looping;\r\n    function get_position() : Float return position;\r\n    function get_position_bytes() : Int return position_bytes;\r\n    function get_length_bytes() : Int return length_bytes;\r\n        //overridden in platform concrete\r\n    function get_duration() : Float return 0;\r\n    function set_playing(_playing:Bool) : Bool return playing = _playing;\r\n    function set_paused(_paused:Bool) : Bool return paused = _paused;\r\n    function set_loaded(_loaded:Bool) : Bool return loaded = _loaded;\r\n    function set_pan( _pan:Float ) : Float return pan = _pan;\r\n    function set_pitch( _pitch:Float ) : Float return pitch = _pitch;\r\n    function set_volume( _volume:Float ) : Float return volume = _volume;\r\n    function set_position( _position:Float ) : Float return position = _position;\r\n    function set_looping( _looping:Bool ) : Bool return looping = _looping;\r\n    function set_position_bytes(_position_bytes) : Int return position_bytes = _position_bytes;\r\n\r\n} //Sound\r\n","package snow.modules.howlerjs.sound;\r\n\r\n#if snow_web\r\n\r\nimport snow.types.Types;\r\n\r\nimport snow.api.Debug.*;\r\n\r\nclass Sound extends snow.system.audio.Sound {\r\n\r\n    public function new( _system:snow.system.audio.Audio, _name:String, _is_stream:Bool=false ) {\r\n\r\n        super(_system, _name, _is_stream);\r\n\r\n    } //new\r\n\r\n    override function set_info( _info:AudioInfo ) {\r\n\r\n            //if preexisting,\r\n        if(info != null) {\r\n            destroy();\r\n        }\r\n\r\n            //flag as done for gc\r\n        info = null;\r\n\r\n                //now\r\n            if(_info == null) {\r\n                log(\"not creating sound, info was null\");\r\n                return info;\r\n            }\r\n\r\n            //store the new sound\r\n        info = _info;\r\n        loaded = true;\r\n\r\n            _debug('creating sound / ${name} / ${info.id} / ${info.format}');\r\n\r\n        return info;\r\n\r\n    } //set_info\r\n\r\n\r\n    override function set_pan(_pan:Float) : Float {\r\n\r\n        if(info != null && info.handle != null) {\r\n            info.handle.pos3d(pan);\r\n        }\r\n\r\n        return pan = _pan;\r\n\r\n    } //set_pan\r\n\r\n    override function set_volume(_volume:Float) : Float {\r\n\r\n        if(info != null && info.handle != null) {\r\n            info.handle.volume(_volume);\r\n        }\r\n\r\n        return volume = _volume;\r\n\r\n    } //set_volume\r\n\r\n\r\n    override function set_pitch( _pitch:Float ) : Float {\r\n\r\n        // untyped this.info.handle._rate = _pitch;\r\n        if(info != null && info.handle != null) {\r\n            info.handle.rate(_pitch);\r\n        }\r\n\r\n        return pitch = _pitch;\r\n\r\n    } //set_pitch\r\n\r\n    override function set_position( _position:Float ) : Float {\r\n\r\n        if(info != null && info.handle != null) {\r\n            info.handle.pos(_position);\r\n        }\r\n\r\n        return position = _position;\r\n\r\n    } //set_position\r\n\r\n    override function get_position() : Float {\r\n\r\n        if(info != null && info.handle != null) {\r\n            return info.handle.pos();\r\n        } //has info\r\n\r\n        return position;\r\n    } //get_position\r\n\r\n        //will return 0 if the info is not set yet i.e loading\r\n    override function get_duration() : Float {\r\n\r\n        if(info != null && info.handle != null) {\r\n            return untyped this.info.handle._duration;\r\n        } //has info\r\n\r\n        return 0;\r\n\r\n    } //get_duration\r\n\r\n        /** Play this sound */\r\n    override public function play() {\r\n\r\n        if(info != null && info.handle != null) {\r\n\r\n            playing = true;\r\n            looping = false;\r\n\r\n            info.handle.loop(false);\r\n            info.handle.play();\r\n            ensure_parameters();\r\n\r\n        }  //has info\r\n\r\n    } //play\r\n\r\n        /** Loop this sound */\r\n    override public function loop() {\r\n\r\n        if(info != null && info.handle != null) {\r\n\r\n            playing = true;\r\n            looping = true;\r\n\r\n            info.handle.loop(true);\r\n            info.handle.play();\r\n            ensure_parameters();\r\n\r\n        } //has info\r\n\r\n    } //loop\r\n\r\n        /** Stop this sound */\r\n    override public function stop() {\r\n\r\n        playing = false;\r\n\r\n        if(info != null && info.handle != null) {\r\n            info.handle.stop();\r\n        } //\r\n\r\n    } //stop\r\n\r\n        /** Pause this sound */\r\n    override public function pause() {\r\n\r\n        if(info != null && info.handle != null) {\r\n            info.handle.pause();\r\n        } //\r\n\r\n    } //pause\r\n\r\n        /** Destroy this sound and it's data */\r\n    override public function destroy() {\r\n\r\n        if(info != null && info.handle != null) {\r\n            info.handle.unload();\r\n        } //\r\n\r\n        system.kill(this);\r\n\r\n    } //destroy\r\n\r\n//Internal\r\n\r\n        /** Ensures the values are up to date when playing a new instance */\r\n    inline function ensure_parameters() {\r\n        if(info != null && info.handle != null) {\r\n            info.handle.rate(pitch);\r\n            info.handle.volume(volume);\r\n            info.handle.pos3d(pan);\r\n        }\r\n    }\r\n\r\n} //Sound\r\n\r\n#end //snow_web\r\n","package snow.modules.opengl.web;\r\n\r\n#if snow_web\r\n\r\nimport js.html.webgl.RenderingContext;\r\n\r\nimport snow.api.buffers.ArrayBuffer;\r\nimport snow.api.buffers.ArrayBufferView;\r\nimport snow.api.buffers.Int32Array;\r\nimport snow.api.buffers.Float32Array;\r\n\r\n\r\ntypedef GLActiveInfo                = js.html.webgl.ActiveInfo;\r\ntypedef GLBuffer                    = js.html.webgl.Buffer;\r\ntypedef GLContextAttributes         = js.html.webgl.ContextAttributes;\r\ntypedef GLFramebuffer               = js.html.webgl.Framebuffer;\r\ntypedef GLProgram                   = js.html.webgl.Program;\r\ntypedef GLRenderbuffer              = js.html.webgl.Renderbuffer;\r\ntypedef GLShader                    = js.html.webgl.Shader;\r\ntypedef GLTexture                   = js.html.webgl.Texture;\r\ntypedef GLUniformLocation           = js.html.webgl.UniformLocation;\r\ntypedef GLShaderPrecisionFormat     = js.html.webgl.ShaderPrecisionFormat;\r\n\r\nclass GL {\r\n\r\n\r\n\r\n    public static var version(get_version, null):Int;\r\n    public static var current_context:RenderingContext;\r\n\r\n//non-spec\r\n\r\n    public static function versionString():String {\r\n\r\n        var ver = current_context.getParameter(VERSION);\r\n        var slver = current_context.getParameter(SHADING_LANGUAGE_VERSION);\r\n        var ren = current_context.getParameter(RENDERER);\r\n        var ven = current_context.getParameter(VENDOR);\r\n\r\n        return \"/ \" + ver + \" / \" + slver + \" / \" + ren + \" / \" + ven + \" /\";\r\n    }\r\n\r\n//spec\r\n\r\n    inline public static function activeTexture(texture:Int):Void\r\n        current_context.activeTexture(texture);\r\n\r\n    inline public static function attachShader(program:GLProgram, shader:GLShader):Void\r\n        current_context.attachShader(program, shader);\r\n\r\n    inline public static function bindAttribLocation(program:GLProgram, index:Int, name:String):Void\r\n        current_context.bindAttribLocation(program, index, name);\r\n\r\n    inline public static function bindBuffer(target:Int, buffer:GLBuffer):Void\r\n        current_context.bindBuffer(target, buffer);\r\n\r\n    inline public static function bindFramebuffer(target:Int, framebuffer:GLFramebuffer):Void\r\n        current_context.bindFramebuffer(target, framebuffer);\r\n\r\n    inline public static function bindRenderbuffer(target:Int, renderbuffer:GLRenderbuffer):Void\r\n        current_context.bindRenderbuffer(target, renderbuffer);\r\n\r\n    inline public static function bindTexture(target:Int, texture:GLTexture):Void\r\n        current_context.bindTexture(target, texture);\r\n\r\n    inline public static function blendColor(red:Float, green:Float, blue:Float, alpha:Float):Void\r\n        current_context.blendColor(red, green, blue, alpha);\r\n\r\n    inline public static function blendEquation(mode:Int):Void\r\n        current_context.blendEquation(mode);\r\n\r\n    inline public static function blendEquationSeparate(modeRGB:Int, modeAlpha:Int):Void\r\n        current_context.blendEquationSeparate(modeRGB, modeAlpha);\r\n\r\n    inline public static function blendFunc(sfactor:Int, dfactor:Int):Void\r\n        current_context.blendFunc(sfactor, dfactor);\r\n\r\n    inline public static function blendFuncSeparate(srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void\r\n        current_context.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\r\n    inline public static function bufferData(target:Int, data:ArrayBufferView, usage:Int):Void\r\n        current_context.bufferData( target, data, usage );\r\n\r\n    inline public static function bufferSubData(target:Int, offset:Int, data:ArrayBufferView):Void\r\n        current_context.bufferSubData(target, offset, data);\r\n\r\n    inline public static function checkFramebufferStatus(target:Int):Int\r\n        return current_context.checkFramebufferStatus(target);\r\n\r\n    inline public static function clear(mask:Int):Void\r\n        current_context.clear(mask);\r\n\r\n    inline public static function clearColor(red:Float, green:Float, blue:Float, alpha:Float):Void\r\n        current_context.clearColor(red, green, blue, alpha);\r\n\r\n    inline public static function clearDepth(depth:Float):Void\r\n        current_context.clearDepth(depth);\r\n\r\n    inline public static function clearStencil(s:Int):Void\r\n        current_context.clearStencil(s);\r\n\r\n    inline public static function colorMask(red:Bool, green:Bool, blue:Bool, alpha:Bool):Void\r\n        current_context.colorMask(red, green, blue, alpha);\r\n\r\n    inline public static function compileShader(shader:GLShader):Void\r\n        current_context.compileShader(shader);\r\n\r\n    inline public static function compressedTexImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:ArrayBufferView):Void\r\n        current_context.compressedTexImage2D(target, level, internalformat, width, height, border, data);\r\n\r\n    inline public static function compressedTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:ArrayBufferView):Void\r\n        current_context.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data);\r\n\r\n    inline public static function copyTexImage2D(target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void\r\n        current_context.copyTexImage2D(target, level, internalformat, x, y, width, height, border);\r\n\r\n    inline public static function copyTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void\r\n        current_context.copyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\r\n\r\n    inline public static function createBuffer():GLBuffer\r\n        return current_context.createBuffer();\r\n\r\n    inline public static function createFramebuffer():GLFramebuffer\r\n        return current_context.createFramebuffer();\r\n\r\n    inline public static function createProgram():GLProgram\r\n        return current_context.createProgram();\r\n\r\n    inline public static function createRenderbuffer():GLRenderbuffer\r\n        return current_context.createRenderbuffer();\r\n\r\n    inline public static function createShader(type:Int):GLShader\r\n        return current_context.createShader(type);\r\n\r\n    inline public static function createTexture():GLTexture\r\n        return current_context.createTexture();\r\n\r\n    inline public static function cullFace(mode:Int):Void\r\n        current_context.cullFace(mode);\r\n\r\n    inline public static function deleteBuffer(buffer:GLBuffer):Void\r\n        current_context.deleteBuffer(buffer);\r\n\r\n    inline public static function deleteFramebuffer(framebuffer:GLFramebuffer):Void\r\n        current_context.deleteFramebuffer(framebuffer);\r\n\r\n    inline public static function deleteProgram(program:GLProgram):Void\r\n        current_context.deleteProgram(program);\r\n\r\n    inline public static function deleteRenderbuffer(renderbuffer:GLRenderbuffer):Void\r\n        current_context.deleteRenderbuffer(renderbuffer);\r\n\r\n    inline public static function deleteShader(shader:GLShader):Void\r\n        current_context.deleteShader(shader);\r\n\r\n    inline public static function deleteTexture(texture:GLTexture):Void\r\n        current_context.deleteTexture(texture);\r\n\r\n    inline public static function depthFunc(func:Int):Void\r\n        current_context.depthFunc(func);\r\n\r\n    inline public static function depthMask(flag:Bool):Void\r\n        current_context.depthMask(flag);\r\n\r\n    inline public static function depthRange(zNear:Float, zFar:Float):Void\r\n        current_context.depthRange(zNear, zFar);\r\n\r\n    inline public static function detachShader(program:GLProgram, shader:GLShader):Void\r\n        current_context.detachShader(program, shader);\r\n\r\n    inline public static function disable(cap:Int):Void\r\n        current_context.disable(cap);\r\n\r\n    inline public static function disableVertexAttribArray(index:Int):Void\r\n        current_context.disableVertexAttribArray(index);\r\n\r\n    inline public static function drawArrays(mode:Int, first:Int, count:Int):Void\r\n        current_context.drawArrays(mode, first, count);\r\n\r\n    inline public static function drawElements(mode:Int, count:Int, type:Int, offset:Int):Void\r\n        current_context.drawElements(mode, count, type, offset);\r\n\r\n    inline public static function enable(cap:Int):Void\r\n        current_context.enable(cap);\r\n\r\n    inline public static function enableVertexAttribArray(index:Int):Void\r\n        current_context.enableVertexAttribArray(index);\r\n\r\n    inline public static function finish():Void\r\n        current_context.finish();\r\n\r\n    inline public static function flush():Void\r\n        current_context.flush();\r\n\r\n    inline public static function framebufferRenderbuffer(target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void\r\n        current_context.framebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);\r\n\r\n    inline public static function framebufferTexture2D(target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void\r\n        current_context.framebufferTexture2D(target, attachment, textarget, texture, level);\r\n\r\n    inline public static function frontFace(mode:Int):Void\r\n        current_context.frontFace(mode);\r\n\r\n    inline public static function generateMipmap(target:Int):Void\r\n        current_context.generateMipmap(target);\r\n\r\n    inline public static function getActiveAttrib(program:GLProgram, index:Int):GLActiveInfo\r\n        return current_context.getActiveAttrib(program, index);\r\n\r\n    inline public static function getActiveUniform(program:GLProgram, index:Int):GLActiveInfo\r\n        return current_context.getActiveUniform(program, index);\r\n\r\n    inline public static function getAttachedShaders(program:GLProgram):Array<GLShader>\r\n        return current_context.getAttachedShaders(program);\r\n\r\n    inline public static function getAttribLocation(program:GLProgram, name:String):Int\r\n        return current_context.getAttribLocation(program, name);\r\n\r\n    inline public static function getBufferParameter(target:Int, pname:Int):Dynamic\r\n        return current_context.getBufferParameter(target, pname);\r\n\r\n    inline public static function getContextAttributes():GLContextAttributes\r\n        return current_context.getContextAttributes();\r\n\r\n    inline public static function getError():Int\r\n        return current_context.getError();\r\n\r\n    inline public static function getExtension(name:String):Dynamic\r\n        return current_context.getExtension(name);\r\n\r\n    inline public static function getFramebufferAttachmentParameter(target:Int, attachment:Int, pname:Int):Dynamic\r\n        return current_context.getFramebufferAttachmentParameter(target, attachment, pname);\r\n\r\n    inline public static function getParameter(pname:Int):Dynamic\r\n        return current_context.getParameter(pname);\r\n\r\n    inline public static function getProgramInfoLog(program:GLProgram):String\r\n        return current_context.getProgramInfoLog(program);\r\n\r\n    inline public static function getProgramParameter(program:GLProgram, pname:Int):Int\r\n        return current_context.getProgramParameter(program, pname);\r\n\r\n    inline public static function getRenderbufferParameter(target:Int, pname:Int):Dynamic\r\n        return current_context.getRenderbufferParameter(target, pname);\r\n\r\n    inline public static function getShaderInfoLog(shader:GLShader):String\r\n        return current_context.getShaderInfoLog(shader);\r\n\r\n    inline public static function getShaderParameter(shader:GLShader, pname:Int):Int\r\n        return current_context.getShaderParameter(shader, pname);\r\n\r\n    inline public static function getShaderPrecisionFormat(shadertype:Int, precisiontype:Int) : GLShaderPrecisionFormat\r\n        return current_context.getShaderPrecisionFormat(shadertype, precisiontype);\r\n\r\n    inline public static function getShaderSource(shader:GLShader):String\r\n        return current_context.getShaderSource(shader);\r\n\r\n    inline public static function getSupportedExtensions() : Array<String>\r\n        return current_context.getSupportedExtensions();\r\n\r\n    inline public static function getTexParameter(target:Int, pname:Int):Dynamic\r\n        return current_context.getTexParameter(target, pname);\r\n\r\n    inline public static function getUniform(program:GLProgram, location:GLUniformLocation):Dynamic\r\n        return current_context.getUniform(program, location);\r\n\r\n    inline public static function getUniformLocation(program:GLProgram, name:String):GLUniformLocation\r\n        return current_context.getUniformLocation(program, name);\r\n\r\n    inline public static function getVertexAttrib(index:Int, pname:Int):Dynamic\r\n        return current_context.getVertexAttrib(index, pname);\r\n\r\n    inline public static function getVertexAttribOffset(index:Int, pname:Int):Int\r\n        return current_context.getVertexAttribOffset(index, pname);\r\n\r\n    inline public static function hint(target:Int, mode:Int):Void\r\n        current_context.hint(target, mode);\r\n\r\n    inline public static function isBuffer(buffer:GLBuffer):Bool\r\n        return current_context.isBuffer(buffer);\r\n\r\n    // This is non-static\r\n    // public function isContextLost():Bool { return false; }\r\n\r\n    inline public static function isEnabled(cap:Int):Bool\r\n        return current_context.isEnabled(cap);\r\n\r\n    inline public static function isFramebuffer(framebuffer:GLFramebuffer):Bool\r\n        return current_context.isFramebuffer(framebuffer);\r\n\r\n    inline public static function isProgram(program:GLProgram):Bool\r\n        return current_context.isProgram(program);\r\n\r\n    inline public static function isRenderbuffer(renderbuffer:GLRenderbuffer):Bool\r\n        return current_context.isRenderbuffer(renderbuffer);\r\n\r\n    inline public static function isShader(shader:GLShader):Bool\r\n        return current_context.isShader(shader);\r\n\r\n    inline public static function isTexture(texture:GLTexture):Bool\r\n        return current_context.isTexture(texture);\r\n\r\n    inline public static function lineWidth(width:Float):Void\r\n        current_context.lineWidth(width);\r\n\r\n    inline public static function linkProgram(program:GLProgram):Void\r\n        current_context.linkProgram(program);\r\n\r\n    inline public static function pixelStorei(pname:Int, param:Int):Void\r\n        current_context.pixelStorei(pname, param);\r\n\r\n    inline public static function polygonOffset(factor:Float, units:Float):Void\r\n        current_context.polygonOffset(factor, units);\r\n\r\n        // TODO: pixels? May need setting to work (canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});)\r\n    inline public static function readPixels(x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, data:ArrayBufferView):Void\r\n        current_context.readPixels(x, y, width, height, format, type, data);\r\n\r\n    inline public static function renderbufferStorage(target:Int, internalformat:Int, width:Int, height:Int):Void\r\n        current_context.renderbufferStorage(target, internalformat, width, height);\r\n\r\n    inline public static function sampleCoverage(value:Float, invert:Bool):Void\r\n        current_context.sampleCoverage(value, invert);\r\n\r\n    inline public static function scissor(x:Int, y:Int, width:Int, height:Int):Void\r\n        current_context.scissor(x, y, width, height);\r\n\r\n    inline public static function shaderSource(shader:GLShader, source:String):Void\r\n        current_context.shaderSource(shader, source);\r\n\r\n    inline public static function stencilFunc(func:Int, ref:Int, mask:Int):Void\r\n        current_context.stencilFunc(func, ref, mask);\r\n\r\n    inline public static function stencilFuncSeparate(face:Int, func:Int, ref:Int, mask:Int):Void\r\n        current_context.stencilFuncSeparate(face, func, ref, mask);\r\n\r\n    inline public static function stencilMask(mask:Int):Void\r\n        current_context.stencilMask(mask);\r\n\r\n    inline public static function stencilMaskSeparate(face:Int, mask:Int):Void\r\n        current_context.stencilMaskSeparate(face, mask);\r\n\r\n    inline public static function stencilOp(fail:Int, zfail:Int, zpass:Int):Void\r\n        current_context.stencilOp(fail, zfail, zpass);\r\n\r\n    inline public static function stencilOpSeparate(face:Int, fail:Int, zfail:Int, zpass:Int):Void\r\n        current_context.stencilOpSeparate(face, fail, zfail, zpass);\r\n\r\n    inline public static function texImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, data:ArrayBufferView):Void\r\n        current_context.texImage2D(target, level, internalformat, width, height, border, format, type, data);\r\n\r\n    inline public static function texParameterf(target:Int, pname:Int, param:Float):Void\r\n        current_context.texParameterf(target, pname, param);\r\n\r\n    inline public static function texParameteri(target:Int, pname:Int, param:Int):Void\r\n        current_context.texParameteri(target, pname, param);\r\n\r\n    inline public static function texSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, data:ArrayBufferView):Void\r\n        current_context.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, data);\r\n\r\n    inline public static function uniform1f(location:GLUniformLocation, x:Float):Void\r\n        current_context.uniform1f(location, x);\r\n\r\n    inline public static function uniform1fv(location:GLUniformLocation, data:Float32Array):Void\r\n        current_context.uniform1fv(location, data);\r\n\r\n    inline public static function uniform1i(location:GLUniformLocation, x:Int):Void\r\n        current_context.uniform1i(location, x);\r\n\r\n    inline public static function uniform1iv(location:GLUniformLocation, data:Int32Array):Void\r\n        current_context.uniform1iv(location, data);\r\n\r\n    inline public static function uniform2f(location:GLUniformLocation, x:Float, y:Float):Void\r\n        current_context.uniform2f(location, x, y);\r\n\r\n    inline public static function uniform2fv(location:GLUniformLocation, data:Float32Array):Void\r\n        current_context.uniform2fv(location, data);\r\n\r\n    inline public static function uniform2i(location:GLUniformLocation, x:Int, y:Int):Void\r\n        current_context.uniform2i(location, x, y);\r\n\r\n    inline public static function uniform2iv(location:GLUniformLocation, data:Int32Array):Void\r\n        current_context.uniform2iv(location, data);\r\n\r\n    inline public static function uniform3f(location:GLUniformLocation, x:Float, y:Float, z:Float):Void\r\n        current_context.uniform3f(location, x, y, z);\r\n\r\n    inline public static function uniform3fv(location:GLUniformLocation, data:Float32Array):Void\r\n        current_context.uniform3fv(location, data);\r\n\r\n    inline public static function uniform3i(location:GLUniformLocation, x:Int, y:Int, z:Int):Void\r\n        current_context.uniform3i(location, x, y, z);\r\n\r\n    inline public static function uniform3iv(location:GLUniformLocation, data:Int32Array):Void\r\n        current_context.uniform3iv(location, data);\r\n\r\n    inline public static function uniform4f(location:GLUniformLocation, x:Float, y:Float, z:Float, w:Float):Void\r\n        current_context.uniform4f(location, x, y, z, w);\r\n\r\n    inline public static function uniform4fv(location:GLUniformLocation, data:Float32Array):Void\r\n        current_context.uniform4fv(location, data);\r\n\r\n    inline public static function uniform4i(location:GLUniformLocation, x:Int, y:Int, z:Int, w:Int):Void\r\n        current_context.uniform4i(location, x, y, z, w);\r\n\r\n    inline public static function uniform4iv(location:GLUniformLocation, data:Int32Array):Void\r\n        current_context.uniform4iv(location, data);\r\n\r\n    inline public static function uniformMatrix2fv(location:GLUniformLocation, transpose:Bool, data:Float32Array):Void\r\n        current_context.uniformMatrix2fv(location, transpose, data);\r\n\r\n    inline public static function uniformMatrix3fv(location:GLUniformLocation, transpose:Bool, data:Float32Array):Void\r\n        current_context.uniformMatrix3fv(location, transpose, data);\r\n\r\n    inline public static function uniformMatrix4fv(location:GLUniformLocation, transpose:Bool, data:Float32Array):Void\r\n        current_context.uniformMatrix4fv(location, transpose, data);\r\n\r\n    inline public static function useProgram(program:GLProgram):Void\r\n        current_context.useProgram(program);\r\n\r\n    inline public static function validateProgram(program:GLProgram):Void\r\n        current_context.validateProgram(program);\r\n\r\n    inline public static function vertexAttrib1f(indx:Int, x:Float):Void\r\n        current_context.vertexAttrib1f(indx, x);\r\n\r\n    inline public static function vertexAttrib1fv(indx:Int, data:Float32Array):Void\r\n        current_context.vertexAttrib1fv(indx, data);\r\n\r\n    inline public static function vertexAttrib2f(indx:Int, x:Float, y:Float):Void\r\n        current_context.vertexAttrib2f(indx, x, y);\r\n\r\n    inline public static function vertexAttrib2fv(indx:Int, data:Float32Array):Void\r\n        current_context.vertexAttrib2fv(indx, data);\r\n\r\n    inline public static function vertexAttrib3f(indx:Int, x:Float, y:Float, z:Float):Void\r\n        current_context.vertexAttrib3f(indx, x, y, z);\r\n\r\n    inline public static function vertexAttrib3fv(indx:Int, data:Float32Array):Void\r\n        current_context.vertexAttrib3fv(indx, data);\r\n\r\n    inline public static function vertexAttrib4f(indx:Int, x:Float, y:Float, z:Float, w:Float):Void\r\n        current_context.vertexAttrib4f(indx, x, y, z, w);\r\n\r\n    inline public static function vertexAttrib4fv(indx:Int, data:Float32Array):Void\r\n        current_context.vertexAttrib4fv(indx, data);\r\n\r\n    inline public static function vertexAttribPointer(indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void\r\n        current_context.vertexAttribPointer(indx, size, type, normalized, stride, offset);\r\n\r\n    inline public static function viewport(x:Int, y:Int, width:Int, height:Int):Void\r\n        current_context.viewport(x, y, width, height);\r\n\r\n\r\n// getters/setters\r\n\r\n    static function get_version():Int { return RenderingContext.VERSION; }\r\n\r\n//defines\r\n\r\n    /* ClearBufferMask */\r\n    public static inline var DEPTH_BUFFER_BIT               = 0x00000100;\r\n    public static inline var STENCIL_BUFFER_BIT             = 0x00000400;\r\n    public static inline var COLOR_BUFFER_BIT               = 0x00004000;\r\n\r\n    /* BeginMode */\r\n    public static inline var POINTS                         = 0x0000;\r\n    public static inline var LINES                          = 0x0001;\r\n    public static inline var LINE_LOOP                      = 0x0002;\r\n    public static inline var LINE_STRIP                     = 0x0003;\r\n    public static inline var TRIANGLES                      = 0x0004;\r\n    public static inline var TRIANGLE_STRIP                 = 0x0005;\r\n    public static inline var TRIANGLE_FAN                   = 0x0006;\r\n\r\n    /* AlphaFunction(not supported in ES20) */\r\n    /*      NEVER */\r\n    /*      LESS */\r\n    /*      EQUAL */\r\n    /*      LEQUAL */\r\n    /*      GREATER */\r\n    /*      NOTEQUAL */\r\n    /*      GEQUAL */\r\n    /*      ALWAYS */\r\n\r\n    /* BlendingFactorDest */\r\n    public static inline var ZERO                           = 0;\r\n    public static inline var ONE                            = 1;\r\n    public static inline var SRC_COLOR                      = 0x0300;\r\n    public static inline var ONE_MINUS_SRC_COLOR            = 0x0301;\r\n    public static inline var SRC_ALPHA                      = 0x0302;\r\n    public static inline var ONE_MINUS_SRC_ALPHA            = 0x0303;\r\n    public static inline var DST_ALPHA                      = 0x0304;\r\n    public static inline var ONE_MINUS_DST_ALPHA            = 0x0305;\r\n\r\n    /* BlendingFactorSrc */\r\n    /*      ZERO */\r\n    /*      ONE */\r\n    public static inline var DST_COLOR                      = 0x0306;\r\n    public static inline var ONE_MINUS_DST_COLOR            = 0x0307;\r\n    public static inline var SRC_ALPHA_SATURATE             = 0x0308;\r\n    /*      SRC_ALPHA */\r\n    /*      ONE_MINUS_SRC_ALPHA */\r\n    /*      DST_ALPHA */\r\n    /*      ONE_MINUS_DST_ALPHA */\r\n\r\n    /* BlendEquationSeparate */\r\n    public static inline var FUNC_ADD                       = 0x8006;\r\n    public static inline var BLEND_EQUATION                 = 0x8009;\r\n    public static inline var BLEND_EQUATION_RGB             = 0x8009;   /* same as BLEND_EQUATION */\r\n    public static inline var BLEND_EQUATION_ALPHA           = 0x883D;\r\n\r\n    /* BlendSubtract */\r\n    public static inline var FUNC_SUBTRACT                  = 0x800A;\r\n    public static inline var FUNC_REVERSE_SUBTRACT          = 0x800B;\r\n\r\n    /* Separate Blend Functions */\r\n    public static inline var BLEND_DST_RGB                  = 0x80C8;\r\n    public static inline var BLEND_SRC_RGB                  = 0x80C9;\r\n    public static inline var BLEND_DST_ALPHA                = 0x80CA;\r\n    public static inline var BLEND_SRC_ALPHA                = 0x80CB;\r\n    public static inline var CONSTANT_COLOR                 = 0x8001;\r\n    public static inline var ONE_MINUS_CONSTANT_COLOR       = 0x8002;\r\n    public static inline var CONSTANT_ALPHA                 = 0x8003;\r\n    public static inline var ONE_MINUS_CONSTANT_ALPHA       = 0x8004;\r\n    public static inline var BLEND_COLOR                    = 0x8005;\r\n\r\n    /* GLBuffer Objects */\r\n    public static inline var ARRAY_BUFFER                   = 0x8892;\r\n    public static inline var ELEMENT_ARRAY_BUFFER           = 0x8893;\r\n    public static inline var ARRAY_BUFFER_BINDING           = 0x8894;\r\n    public static inline var ELEMENT_ARRAY_BUFFER_BINDING   = 0x8895;\r\n\r\n    public static inline var STREAM_DRAW                    = 0x88E0;\r\n    public static inline var STATIC_DRAW                    = 0x88E4;\r\n    public static inline var DYNAMIC_DRAW                   = 0x88E8;\r\n\r\n    public static inline var BUFFER_SIZE                    = 0x8764;\r\n    public static inline var BUFFER_USAGE                   = 0x8765;\r\n\r\n    public static inline var CURRENT_VERTEX_ATTRIB          = 0x8626;\r\n\r\n    /* CullFaceMode */\r\n    public static inline var FRONT                          = 0x0404;\r\n    public static inline var BACK                           = 0x0405;\r\n    public static inline var FRONT_AND_BACK                 = 0x0408;\r\n\r\n    /* DepthFunction */\r\n    /*      NEVER */\r\n    /*      LESS */\r\n    /*      EQUAL */\r\n    /*      LEQUAL */\r\n    /*      GREATER */\r\n    /*      NOTEQUAL */\r\n    /*      GEQUAL */\r\n    /*      ALWAYS */\r\n\r\n    /* EnableCap */\r\n    /* TEXTURE_2D */\r\n    public static inline var CULL_FACE                      = 0x0B44;\r\n    public static inline var BLEND                          = 0x0BE2;\r\n    public static inline var DITHER                         = 0x0BD0;\r\n    public static inline var STENCIL_TEST                   = 0x0B90;\r\n    public static inline var DEPTH_TEST                     = 0x0B71;\r\n    public static inline var SCISSOR_TEST                   = 0x0C11;\r\n    public static inline var POLYGON_OFFSET_FILL            = 0x8037;\r\n    public static inline var SAMPLE_ALPHA_TO_COVERAGE       = 0x809E;\r\n    public static inline var SAMPLE_COVERAGE                = 0x80A0;\r\n\r\n    /* ErrorCode */\r\n    public static inline var NO_ERROR                       = 0;\r\n    public static inline var INVALID_ENUM                   = 0x0500;\r\n    public static inline var INVALID_VALUE                  = 0x0501;\r\n    public static inline var INVALID_OPERATION              = 0x0502;\r\n    public static inline var OUT_OF_MEMORY                  = 0x0505;\r\n\r\n    /* FrontFaceDirection */\r\n    public static inline var CW                             = 0x0900;\r\n    public static inline var CCW                            = 0x0901;\r\n\r\n    /* GetPName */\r\n    public static inline var LINE_WIDTH                     = 0x0B21;\r\n    public static inline var ALIASED_POINT_SIZE_RANGE       = 0x846D;\r\n    public static inline var ALIASED_LINE_WIDTH_RANGE       = 0x846E;\r\n    public static inline var CULL_FACE_MODE                 = 0x0B45;\r\n    public static inline var FRONT_FACE                     = 0x0B46;\r\n    public static inline var DEPTH_RANGE                    = 0x0B70;\r\n    public static inline var DEPTH_WRITEMASK                = 0x0B72;\r\n    public static inline var DEPTH_CLEAR_VALUE              = 0x0B73;\r\n    public static inline var DEPTH_FUNC                     = 0x0B74;\r\n    public static inline var STENCIL_CLEAR_VALUE            = 0x0B91;\r\n    public static inline var STENCIL_FUNC                   = 0x0B92;\r\n    public static inline var STENCIL_FAIL                   = 0x0B94;\r\n    public static inline var STENCIL_PASS_DEPTH_FAIL        = 0x0B95;\r\n    public static inline var STENCIL_PASS_DEPTH_PASS        = 0x0B96;\r\n    public static inline var STENCIL_REF                    = 0x0B97;\r\n    public static inline var STENCIL_VALUE_MASK             = 0x0B93;\r\n    public static inline var STENCIL_WRITEMASK              = 0x0B98;\r\n    public static inline var STENCIL_BACK_FUNC              = 0x8800;\r\n    public static inline var STENCIL_BACK_FAIL              = 0x8801;\r\n    public static inline var STENCIL_BACK_PASS_DEPTH_FAIL   = 0x8802;\r\n    public static inline var STENCIL_BACK_PASS_DEPTH_PASS   = 0x8803;\r\n    public static inline var STENCIL_BACK_REF               = 0x8CA3;\r\n    public static inline var STENCIL_BACK_VALUE_MASK        = 0x8CA4;\r\n    public static inline var STENCIL_BACK_WRITEMASK         = 0x8CA5;\r\n    public static inline var VIEWPORT                       = 0x0BA2;\r\n    public static inline var SCISSOR_BOX                    = 0x0C10;\r\n    /*      SCISSOR_TEST */\r\n    public static inline var COLOR_CLEAR_VALUE              = 0x0C22;\r\n    public static inline var COLOR_WRITEMASK                = 0x0C23;\r\n    public static inline var UNPACK_ALIGNMENT               = 0x0CF5;\r\n    public static inline var PACK_ALIGNMENT                 = 0x0D05;\r\n    public static inline var MAX_TEXTURE_SIZE               = 0x0D33;\r\n    public static inline var MAX_VIEWPORT_DIMS              = 0x0D3A;\r\n    public static inline var SUBPIXEL_BITS                  = 0x0D50;\r\n    public static inline var RED_BITS                       = 0x0D52;\r\n    public static inline var GREEN_BITS                     = 0x0D53;\r\n    public static inline var BLUE_BITS                      = 0x0D54;\r\n    public static inline var ALPHA_BITS                     = 0x0D55;\r\n    public static inline var DEPTH_BITS                     = 0x0D56;\r\n    public static inline var STENCIL_BITS                   = 0x0D57;\r\n    public static inline var POLYGON_OFFSET_UNITS           = 0x2A00;\r\n    /*      POLYGON_OFFSET_FILL */\r\n    public static inline var POLYGON_OFFSET_FACTOR          = 0x8038;\r\n    public static inline var TEXTURE_BINDING_2D             = 0x8069;\r\n    public static inline var SAMPLE_BUFFERS                 = 0x80A8;\r\n    public static inline var SAMPLES                        = 0x80A9;\r\n    public static inline var SAMPLE_COVERAGE_VALUE          = 0x80AA;\r\n    public static inline var SAMPLE_COVERAGE_INVERT         = 0x80AB;\r\n\r\n    /* GetTextureParameter */\r\n    /*      TEXTURE_MAG_FILTER */\r\n    /*      TEXTURE_MIN_FILTER */\r\n    /*      TEXTURE_WRAP_S */\r\n    /*      TEXTURE_WRAP_T */\r\n\r\n    public static inline var COMPRESSED_TEXTURE_FORMATS     = 0x86A3;\r\n\r\n    /* HintMode */\r\n    public static inline var DONT_CARE                      = 0x1100;\r\n    public static inline var FASTEST                        = 0x1101;\r\n    public static inline var NICEST                         = 0x1102;\r\n\r\n    /* HintTarget */\r\n    public static inline var GENERATE_MIPMAP_HINT            = 0x8192;\r\n\r\n    /* DataType */\r\n    public static inline var BYTE                           = 0x1400;\r\n    public static inline var UNSIGNED_BYTE                  = 0x1401;\r\n    public static inline var SHORT                          = 0x1402;\r\n    public static inline var UNSIGNED_SHORT                 = 0x1403;\r\n    public static inline var INT                            = 0x1404;\r\n    public static inline var UNSIGNED_INT                   = 0x1405;\r\n    public static inline var FLOAT                          = 0x1406;\r\n\r\n    /* PixelFormat */\r\n    public static inline var DEPTH_COMPONENT                = 0x1902;\r\n    public static inline var ALPHA                          = 0x1906;\r\n    public static inline var RGB                            = 0x1907;\r\n    public static inline var RGBA                           = 0x1908;\r\n    public static inline var LUMINANCE                      = 0x1909;\r\n    public static inline var LUMINANCE_ALPHA                = 0x190A;\r\n\r\n    /* PixelType */\r\n    /*      UNSIGNED_BYTE */\r\n    public static inline var UNSIGNED_SHORT_4_4_4_4         = 0x8033;\r\n    public static inline var UNSIGNED_SHORT_5_5_5_1         = 0x8034;\r\n    public static inline var UNSIGNED_SHORT_5_6_5           = 0x8363;\r\n\r\n    /* Shaders */\r\n    public static inline var FRAGMENT_SHADER                  = 0x8B30;\r\n    public static inline var VERTEX_SHADER                    = 0x8B31;\r\n    public static inline var MAX_VERTEX_ATTRIBS               = 0x8869;\r\n    public static inline var MAX_VERTEX_UNIFORM_VECTORS       = 0x8DFB;\r\n    public static inline var MAX_VARYING_VECTORS              = 0x8DFC;\r\n    public static inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\r\n    public static inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS   = 0x8B4C;\r\n    public static inline var MAX_TEXTURE_IMAGE_UNITS          = 0x8872;\r\n    public static inline var MAX_FRAGMENT_UNIFORM_VECTORS     = 0x8DFD;\r\n    public static inline var SHADER_TYPE                      = 0x8B4F;\r\n    public static inline var DELETE_STATUS                    = 0x8B80;\r\n    public static inline var LINK_STATUS                      = 0x8B82;\r\n    public static inline var VALIDATE_STATUS                  = 0x8B83;\r\n    public static inline var ATTACHED_SHADERS                 = 0x8B85;\r\n    public static inline var ACTIVE_UNIFORMS                  = 0x8B86;\r\n    public static inline var ACTIVE_ATTRIBUTES                = 0x8B89;\r\n    public static inline var SHADING_LANGUAGE_VERSION         = 0x8B8C;\r\n    public static inline var CURRENT_PROGRAM                  = 0x8B8D;\r\n\r\n    /* StencilFunction */\r\n    public static inline var NEVER                          = 0x0200;\r\n    public static inline var LESS                           = 0x0201;\r\n    public static inline var EQUAL                          = 0x0202;\r\n    public static inline var LEQUAL                         = 0x0203;\r\n    public static inline var GREATER                        = 0x0204;\r\n    public static inline var NOTEQUAL                       = 0x0205;\r\n    public static inline var GEQUAL                         = 0x0206;\r\n    public static inline var ALWAYS                         = 0x0207;\r\n\r\n    /* StencilOp */\r\n    /*      ZERO */\r\n    public static inline var KEEP                           = 0x1E00;\r\n    public static inline var REPLACE                        = 0x1E01;\r\n    public static inline var INCR                           = 0x1E02;\r\n    public static inline var DECR                           = 0x1E03;\r\n    public static inline var INVERT                         = 0x150A;\r\n    public static inline var INCR_WRAP                      = 0x8507;\r\n    public static inline var DECR_WRAP                      = 0x8508;\r\n\r\n    /* StringName */\r\n    public static inline var VENDOR                         = 0x1F00;\r\n    public static inline var RENDERER                       = 0x1F01;\r\n    public static inline var VERSION                        = 0x1F02;\r\n\r\n    /* TextureMagFilter */\r\n    public static inline var NEAREST                        = 0x2600;\r\n    public static inline var LINEAR                         = 0x2601;\r\n\r\n    /* TextureMinFilter */\r\n    /*      NEAREST */\r\n    /*      LINEAR */\r\n    public static inline var NEAREST_MIPMAP_NEAREST         = 0x2700;\r\n    public static inline var LINEAR_MIPMAP_NEAREST          = 0x2701;\r\n    public static inline var NEAREST_MIPMAP_LINEAR          = 0x2702;\r\n    public static inline var LINEAR_MIPMAP_LINEAR           = 0x2703;\r\n\r\n    /* TextureParameterName */\r\n    public static inline var TEXTURE_MAG_FILTER             = 0x2800;\r\n    public static inline var TEXTURE_MIN_FILTER             = 0x2801;\r\n    public static inline var TEXTURE_WRAP_S                 = 0x2802;\r\n    public static inline var TEXTURE_WRAP_T                 = 0x2803;\r\n\r\n    /* TextureTarget */\r\n    public static inline var TEXTURE_2D                     = 0x0DE1;\r\n    public static inline var TEXTURE                        = 0x1702;\r\n\r\n    public static inline var TEXTURE_CUBE_MAP               = 0x8513;\r\n    public static inline var TEXTURE_BINDING_CUBE_MAP       = 0x8514;\r\n    public static inline var TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\r\n    public static inline var TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\r\n    public static inline var TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\r\n    public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\r\n    public static inline var TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\r\n    public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851A;\r\n    public static inline var MAX_CUBE_MAP_TEXTURE_SIZE      = 0x851C;\r\n\r\n    /* TextureUnit */\r\n    public static inline var TEXTURE0                       = 0x84C0;\r\n    public static inline var TEXTURE1                       = 0x84C1;\r\n    public static inline var TEXTURE2                       = 0x84C2;\r\n    public static inline var TEXTURE3                       = 0x84C3;\r\n    public static inline var TEXTURE4                       = 0x84C4;\r\n    public static inline var TEXTURE5                       = 0x84C5;\r\n    public static inline var TEXTURE6                       = 0x84C6;\r\n    public static inline var TEXTURE7                       = 0x84C7;\r\n    public static inline var TEXTURE8                       = 0x84C8;\r\n    public static inline var TEXTURE9                       = 0x84C9;\r\n    public static inline var TEXTURE10                      = 0x84CA;\r\n    public static inline var TEXTURE11                      = 0x84CB;\r\n    public static inline var TEXTURE12                      = 0x84CC;\r\n    public static inline var TEXTURE13                      = 0x84CD;\r\n    public static inline var TEXTURE14                      = 0x84CE;\r\n    public static inline var TEXTURE15                      = 0x84CF;\r\n    public static inline var TEXTURE16                      = 0x84D0;\r\n    public static inline var TEXTURE17                      = 0x84D1;\r\n    public static inline var TEXTURE18                      = 0x84D2;\r\n    public static inline var TEXTURE19                      = 0x84D3;\r\n    public static inline var TEXTURE20                      = 0x84D4;\r\n    public static inline var TEXTURE21                      = 0x84D5;\r\n    public static inline var TEXTURE22                      = 0x84D6;\r\n    public static inline var TEXTURE23                      = 0x84D7;\r\n    public static inline var TEXTURE24                      = 0x84D8;\r\n    public static inline var TEXTURE25                      = 0x84D9;\r\n    public static inline var TEXTURE26                      = 0x84DA;\r\n    public static inline var TEXTURE27                      = 0x84DB;\r\n    public static inline var TEXTURE28                      = 0x84DC;\r\n    public static inline var TEXTURE29                      = 0x84DD;\r\n    public static inline var TEXTURE30                      = 0x84DE;\r\n    public static inline var TEXTURE31                      = 0x84DF;\r\n    public static inline var ACTIVE_TEXTURE                 = 0x84E0;\r\n\r\n    /* TextureWrapMode */\r\n    public static inline var REPEAT                         = 0x2901;\r\n    public static inline var CLAMP_TO_EDGE                  = 0x812F;\r\n    public static inline var MIRRORED_REPEAT                = 0x8370;\r\n\r\n    /* Uniform Types */\r\n    public static inline var FLOAT_VEC2                     = 0x8B50;\r\n    public static inline var FLOAT_VEC3                     = 0x8B51;\r\n    public static inline var FLOAT_VEC4                     = 0x8B52;\r\n    public static inline var INT_VEC2                       = 0x8B53;\r\n    public static inline var INT_VEC3                       = 0x8B54;\r\n    public static inline var INT_VEC4                       = 0x8B55;\r\n    public static inline var BOOL                           = 0x8B56;\r\n    public static inline var BOOL_VEC2                      = 0x8B57;\r\n    public static inline var BOOL_VEC3                      = 0x8B58;\r\n    public static inline var BOOL_VEC4                      = 0x8B59;\r\n    public static inline var FLOAT_MAT2                     = 0x8B5A;\r\n    public static inline var FLOAT_MAT3                     = 0x8B5B;\r\n    public static inline var FLOAT_MAT4                     = 0x8B5C;\r\n    public static inline var SAMPLER_2D                     = 0x8B5E;\r\n    public static inline var SAMPLER_CUBE                   = 0x8B60;\r\n\r\n    /* Vertex Arrays */\r\n    public static inline var VERTEX_ATTRIB_ARRAY_ENABLED        = 0x8622;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_SIZE           = 0x8623;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_STRIDE         = 0x8624;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_TYPE           = 0x8625;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_NORMALIZED     = 0x886A;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_POINTER        = 0x8645;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\r\n\r\n    /* Point Size */\r\n    public static inline var VERTEX_PROGRAM_POINT_SIZE       = 0x8642;\r\n    public static inline var POINT_SPRITE                    = 0x8861;\r\n\r\n    /* GLShader Source */\r\n    public static inline var COMPILE_STATUS                 = 0x8B81;\r\n\r\n    /* GLShader Precision-Specified Types */\r\n    public static inline var LOW_FLOAT                      = 0x8DF0;\r\n    public static inline var MEDIUM_FLOAT                   = 0x8DF1;\r\n    public static inline var HIGH_FLOAT                     = 0x8DF2;\r\n    public static inline var LOW_INT                        = 0x8DF3;\r\n    public static inline var MEDIUM_INT                     = 0x8DF4;\r\n    public static inline var HIGH_INT                       = 0x8DF5;\r\n\r\n    /* GLFramebuffer Object. */\r\n    public static inline var FRAMEBUFFER                    = 0x8D40;\r\n    public static inline var RENDERBUFFER                   = 0x8D41;\r\n\r\n    public static inline var RGBA4                          = 0x8056;\r\n    public static inline var RGB5_A1                        = 0x8057;\r\n    public static inline var RGB565                         = 0x8D62;\r\n    public static inline var DEPTH_COMPONENT16              = 0x81A5;\r\n    public static inline var STENCIL_INDEX                  = 0x1901;\r\n    public static inline var STENCIL_INDEX8                 = 0x8D48;\r\n    public static inline var DEPTH_STENCIL                  = 0x84F9;\r\n\r\n    public static inline var RENDERBUFFER_WIDTH             = 0x8D42;\r\n    public static inline var RENDERBUFFER_HEIGHT            = 0x8D43;\r\n    public static inline var RENDERBUFFER_INTERNAL_FORMAT   = 0x8D44;\r\n    public static inline var RENDERBUFFER_RED_SIZE          = 0x8D50;\r\n    public static inline var RENDERBUFFER_GREEN_SIZE        = 0x8D51;\r\n    public static inline var RENDERBUFFER_BLUE_SIZE         = 0x8D52;\r\n    public static inline var RENDERBUFFER_ALPHA_SIZE        = 0x8D53;\r\n    public static inline var RENDERBUFFER_DEPTH_SIZE        = 0x8D54;\r\n    public static inline var RENDERBUFFER_STENCIL_SIZE      = 0x8D55;\r\n\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE           = 0x8CD0;\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME           = 0x8CD1;\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL         = 0x8CD2;\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\r\n\r\n    public static inline var COLOR_ATTACHMENT0              = 0x8CE0;\r\n    public static inline var DEPTH_ATTACHMENT               = 0x8D00;\r\n    public static inline var STENCIL_ATTACHMENT             = 0x8D20;\r\n    public static inline var DEPTH_STENCIL_ATTACHMENT       = 0x821A;\r\n\r\n    public static inline var NONE                           = 0;\r\n\r\n    public static inline var FRAMEBUFFER_COMPLETE                      = 0x8CD5;\r\n    public static inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT         = 0x8CD6;\r\n    public static inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\r\n    public static inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS         = 0x8CD9;\r\n    public static inline var FRAMEBUFFER_UNSUPPORTED                   = 0x8CDD;\r\n\r\n    public static inline var FRAMEBUFFER_BINDING            = 0x8CA6;\r\n    public static inline var RENDERBUFFER_BINDING           = 0x8CA7;\r\n    public static inline var MAX_RENDERBUFFER_SIZE          = 0x84E8;\r\n\r\n    public static inline var INVALID_FRAMEBUFFER_OPERATION  = 0x0506;\r\n\r\n    /* WebGL-specific enums */\r\n    public static inline var UNPACK_FLIP_Y_WEBGL            = 0x9240;\r\n    public static inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\r\n    public static inline var CONTEXT_LOST_WEBGL             = 0x9242;\r\n    public static inline var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\r\n    public static inline var BROWSER_DEFAULT_WEBGL          = 0x9244;\r\n\r\n\r\n\r\n}\r\n\r\n#end //snow_web\r\n","package snow.system.assets;\r\n\r\nimport snow.system.assets.Asset;\r\nimport snow.system.assets.Assets;\r\nimport snow.types.Types;\r\nimport snow.api.buffers.Uint8Array;\r\nimport snow.api.Promise;\r\nimport snow.api.Debug.*;\r\n\r\n\r\n/**  An asset base class. Get assets from the `app.assets` */\r\nclass Asset {\r\n\r\n        /** The asset system */\r\n    public var system : Assets;\r\n        /** The id of this asset, i.e `assets/image.png` */\r\n    public var id : String;\r\n        /** True if this asset has completely loaded. */\r\n    public var loaded : Bool = false;\r\n        /** A convenience type id when dealing with the base class.\r\n            This is an Int because it can be any number for custom types,\r\n            by default uses AssetType for the base types. */\r\n    public var type : Int;\r\n\r\n\r\n        /** Called from subclasses, by `app.assets` */\r\n    public function new( _system:Assets, _id:String, _type:Int=0 ) {\r\n\r\n        assertnull( _id );\r\n        assertnull( _system );\r\n\r\n        system = _system;\r\n        type = _type;\r\n        id = _id;\r\n\r\n    } //new\r\n\r\n        /** Implemented by subclasses to clean up their data and references. */\r\n    public function destroy() {\r\n\r\n    }\r\n\r\n} //Asset\r\n\r\n\r\n//Image\r\n\r\n\r\n\r\n    class AssetImage extends snow.system.assets.Asset {\r\n\r\n        public var image (default,set): ImageInfo;\r\n\r\n        public function new(_system:Assets, _id:String, _image:ImageInfo) {\r\n\r\n            super(_system, _id, AssetType.image);\r\n            image = _image;\r\n\r\n        } //new\r\n\r\n        //Public API\r\n\r\n                /** Reloads the bytes from the stored id, using the default processor, returning a promise for the asset. */\r\n            public function reload() : Promise {\r\n\r\n                loaded = false;\r\n\r\n                return new Promise(function(resolve, reject) {\r\n\r\n                    var _load = system.app.io.data_flow(system.path(id), provider);\r\n\r\n                    _load.then(\r\n                        function(_image:ImageInfo){\r\n                            image = _image;\r\n                            resolve(this);\r\n                        }\r\n                    ).error(reject);\r\n\r\n                }); //promise\r\n\r\n            } //reload\r\n\r\n            override public function destroy() {\r\n                image = null;\r\n            }\r\n\r\n                /** Reload the asset with from bytes */\r\n            public function reload_from_bytes(_bytes:Uint8Array) {\r\n\r\n                loaded = false;\r\n\r\n                return new Promise(function(resolve, reject){\r\n\r\n                    var _load = system.module.image_info_from_bytes(id, _bytes);\r\n\r\n                    _load.then(function(_image:ImageInfo){\r\n                        image = _image;\r\n                        resolve(this);\r\n                    }).error(reject);\r\n\r\n                });\r\n\r\n            } //reload_from_bytes\r\n\r\n                /** Reload the asset from already decoded pixels */\r\n            public function reload_from_pixels(_width:Int, _height:Int, _pixels:Uint8Array) {\r\n\r\n                loaded = false;\r\n\r\n                image = system.module.image_info_from_pixels(id, _width, _height, _pixels);\r\n\r\n            } //reload_from_bytes\r\n\r\n        //Public Static API\r\n\r\n            public static function load(_system:Assets, _id:String) : Promise {\r\n\r\n                assertnull( _id );\r\n                assertnull( _system );\r\n\r\n                return new AssetImage(_system, _id, null).reload();\r\n\r\n            } //load\r\n\r\n            public static function load_from_bytes(_system:Assets, _id:String, _bytes:Uint8Array) : Promise {\r\n\r\n                assertnull( _id );\r\n                assertnull( _bytes );\r\n                assertnull( _system );\r\n\r\n                return new AssetImage(_system, _id, null).reload_from_bytes(_bytes);\r\n\r\n            } //load_from_bytes\r\n\r\n            public static function load_from_pixels(_system:Assets, _id:String, _width:Int, _height:Int, _pixels:Uint8Array) : AssetImage {\r\n\r\n                assertnull( _id );\r\n                assertnull( _pixels );\r\n                assertnull( _system );\r\n\r\n                var info = _system.module.image_info_from_pixels(_id, _width, _height, _pixels);\r\n\r\n                return new AssetImage(_system, _id, info);\r\n\r\n            } //load_from_pixels\r\n\r\n                /** A default io provider, using image_load_info from the asset module.\r\n                    Promises ImageInfo. Takes an asset path, not an asset id (uses assets.path(id))*/\r\n            public static function provider(_app:snow.Snow, _path:String) : Promise {\r\n\r\n                return _app.assets.module.image_load_info(_path);\r\n\r\n            } //provider\r\n\r\n                /** A convenience io processor, using image_info_from_bytes, from the asset module. Promises ImageInfo */\r\n            public static function processor(_app:snow.Snow, _id:String, _data:Uint8Array) : Promise {\r\n\r\n                if(_data == null) return Promise.reject(Error.error(\"AssetImage processor: data was null\"));\r\n\r\n                return _app.assets.module.image_info_from_bytes(_id, _data);\r\n\r\n            } //load\r\n\r\n        //Internal\r\n\r\n                /** Set the image contained to a new value */\r\n            function set_image(_image:ImageInfo) {\r\n\r\n                loaded = _image != null;\r\n                return image = _image;\r\n\r\n            } //set_image\r\n\r\n    } //AssetImage\r\n\r\n\r\n//Bytes\r\n\r\n\r\n    class AssetBytes extends Asset {\r\n\r\n        public var bytes (default,set): Uint8Array;\r\n\r\n        public function new(_system:Assets, _id:String, _bytes:Uint8Array) {\r\n\r\n            super(_system, _id, AssetType.bytes);\r\n            bytes = _bytes;\r\n\r\n        } //new\r\n\r\n        //Public API\r\n\r\n                /** Reloads the bytes from it's stored id, using the default processor, returning a promise for the asset. */\r\n            public function reload() : Promise {\r\n\r\n                return new Promise(function(resolve, reject) {\r\n\r\n                    system.app.io.data_flow(system.path(id)).then(function(_bytes:Uint8Array){\r\n\r\n                        bytes = _bytes;\r\n                        resolve(this);\r\n\r\n                    }).error(reject);\r\n\r\n                }); //promise\r\n\r\n            } //reload\r\n\r\n            override public function destroy() {\r\n                bytes = null;\r\n            }\r\n\r\n        //Static API\r\n\r\n                /** Create a new AssetBytes from an id, which returns a promise for the asset. */\r\n            public static function load( _system:Assets, _id:String ) : Promise {\r\n\r\n                return new AssetBytes(_system, _id, null).reload();\r\n\r\n            } //load\r\n\r\n\r\n        //Internal\r\n\r\n                /** Set the bytes contained to a new value */\r\n            function set_bytes(_bytes:Uint8Array) {\r\n\r\n                loaded = _bytes != null;\r\n                return bytes = _bytes;\r\n\r\n            } //set_bytes\r\n\r\n    } //AssetBytes\r\n\r\n\r\n//Text\r\n\r\n\r\n    class AssetText extends Asset {\r\n\r\n        public var text (default,set): String;\r\n\r\n        public function new(_system:Assets, _id:String, _text:String) {\r\n\r\n            super(_system, _id, AssetType.text);\r\n            text = _text;\r\n\r\n        } //new\r\n\r\n        //Public API\r\n\r\n                /** Reloads the text from it's stored id, returning a promise for the asset. */\r\n            public function reload() : Promise {\r\n\r\n                return new Promise(function(resolve, reject) {\r\n\r\n                    system.app.io.data_flow(system.path(id), processor).then(function(_text:String){\r\n\r\n                        text = _text;\r\n                        resolve(this);\r\n\r\n                    }).error(reject);\r\n\r\n                }); //promise\r\n\r\n            } //reload\r\n\r\n            override public function destroy() {\r\n                text = null;\r\n            }\r\n\r\n        //Static API\r\n\r\n                /** Create a new AssetText from an id, which returns a promise for the asset. */\r\n            public static function load( _system:Assets, _id:String ) : Promise {\r\n\r\n                return new AssetText(_system, _id, null).reload();\r\n\r\n            } //load\r\n\r\n                /** A default text processor for the data processor API */\r\n            public static function processor(_app:snow.Snow, _id:String, _data:Uint8Array) : Promise {\r\n\r\n                if(_data == null) return Promise.reject(Error.error(\"AssetText processor: data was null\"));\r\n\r\n                return Promise.resolve(_data.toBytes().toString());\r\n\r\n            } //processor\r\n\r\n        //Internal\r\n\r\n                /** Set the text contained to a new value */\r\n            function set_text(_text:String) {\r\n\r\n                loaded = _text != null;\r\n                return text = _text;\r\n\r\n            } //set_text\r\n\r\n    } //AssetText\r\n\r\n//JSON\r\n\r\n    class AssetJSON extends Asset {\r\n\r\n        /** The json data stored in the asset */\r\n        public var json (default,set): Dynamic;\r\n\r\n        public function new( _system:snow.system.assets.Assets, _id:String, _json:Dynamic ) {\r\n\r\n            super(_system, _id, AssetType.json);\r\n            json = _json;\r\n\r\n        } //new\r\n\r\n        //Public API\r\n\r\n                /** Reloads the json from it's stored id, returning a promise for the asset. */\r\n            public function reload() : Promise {\r\n\r\n                return new Promise(function(resolve, reject) {\r\n\r\n                    system.app.io.data_flow(system.path(id), processor).then(function(_json:Dynamic){\r\n\r\n                        json = _json;\r\n                        resolve(this);\r\n\r\n                    }).error(reject);\r\n\r\n                }); //promise\r\n\r\n            } //reload\r\n\r\n            override public function destroy() {\r\n                json = null;\r\n            }\r\n\r\n        //Static API\r\n\r\n                /** Create a new AssetJSON from an id, which returns a promise for the asset. */\r\n            public static function load( _system:snow.system.assets.Assets, _id:String ) : Promise {\r\n\r\n                return new AssetJSON(_system, _id, null).reload();\r\n\r\n            } //load\r\n\r\n                /** A default json processor for the data processor API */\r\n            public static function processor(_app:snow.Snow, _id:String, _data:Uint8Array) : Promise {\r\n\r\n                if(_data == null) return Promise.reject(Error.error(\"AssetJSON: data was null\"));\r\n\r\n                return new Promise(function(resolve, reject) {\r\n\r\n                    var _data_json : Dynamic = null;\r\n\r\n                    try { _data_json = haxe.Json.parse(_data.toBytes().toString()); }\r\n\r\n                    catch(e:Dynamic) return reject(Error.parse(e));\r\n\r\n                    return resolve(_data_json);\r\n\r\n                }); //promise\r\n\r\n            } //processor\r\n\r\n        //Internal\r\n\r\n                /** Set the json contained to a new value */\r\n            function set_json(_json:Dynamic) {\r\n\r\n                loaded = _json != null;\r\n                return json = _json;\r\n\r\n            } //set_json\r\n\r\n    } //AssetJSON\r\n","package snow.system.assets;\r\n\r\nimport snow.types.Types;\r\nimport snow.api.Promise;\r\nimport snow.api.buffers.Uint8Array;\r\nimport snow.api.Debug.*;\r\n\r\nimport snow.system.assets.Asset;\r\n\r\n#if (!macro && !display && !scribe)\r\n    private typedef AssetsModule = haxe.macro.MacroType<[snow.system.module.Module.assign('Assets')]>;\r\n#end\r\n\r\n/** The asset system class gives you access to fetching and manipulating assets,\r\n    handling loading files and data in a consistent cross platform way */\r\nclass Assets {\r\n\r\n\r\n        /** If the assets are not relative to the runtime root path, this value can adjust all asset paths. This is automatically handled and exists to allow control. */\r\n    public var root : String = '';\r\n\r\n        /** access to module implementation */\r\n    public var module : snow.system.module.Assets;\r\n        /** access to snow from subsystems */\r\n    public var app : Snow;\r\n\r\n\r\n        /** constructed internally, use `app.assets` */\r\n    @:allow(snow.Snow)\r\n    function new( _app:Snow ) {\r\n\r\n        #if ios\r\n                //This is because of how the files are put into the xcode project\r\n                //for the iOS builds, it stores them inside of /assets to avoid\r\n                //including the root in the project in the Resources/ folder\r\n            root = 'assets/';\r\n        #end\r\n\r\n        app = _app;\r\n        module = new snow.system.module.Assets(this);\r\n\r\n    } //new\r\n\r\n//Public API\r\n\r\n        /** Get the asset path for an asset, adjusted by platform, root etc. */\r\n    public inline function path( _id:String ) : String return haxe.io.Path.join([root,_id]);\r\n\r\n        /** Get an asset as an `AssetBytes`, data stored as `Uint8Array`, using the default processor and provider */\r\n    public inline function bytes( _id:String ) : Promise return AssetBytes.load(this, _id);\r\n\r\n        /** Get an asset as an `AssetText`, data stored as `String`, using the default processor and provider */\r\n    public inline function text( _id:String ) : Promise  return AssetText.load(this, _id);\r\n\r\n        /** Get an asset as an `AssetJSON`, data stored as `Dynamic`, using the default processor and provider */\r\n    public inline function json( _id:String ) : Promise  return AssetJSON.load(this, _id);\r\n\r\n        /** Get an asset as an `AssetImage`, data stored as `ImageInfo`, using the default processor and provider */\r\n    public inline function image( _id:String ) : Promise  return AssetImage.load(this, _id);\r\n\r\n        /** Get an asset as an `AssetImage`, data stored as `ImageInfo`, created from image file bytes (not pixels). */\r\n    public inline function image_from_bytes( _id:String, _bytes:Uint8Array ) : Promise\r\n        return AssetImage.load_from_bytes(this, _id, _bytes);\r\n\r\n        /** Get an asset as an `AssetImage`, data stored as `ImageInfo`, created from image file pixels */\r\n    public inline function image_from_pixels( _id:String, _width:Int, _height:Int, _pixels:Uint8Array ) : AssetImage\r\n        return AssetImage.load_from_pixels(this, _id, _width, _height, _pixels);\r\n\r\n} //Assets\r\n","package snow.system.audio;\r\n\r\nimport snow.types.Types;\r\nimport snow.system.audio.Sound;\r\nimport snow.system.assets.Asset;\r\nimport snow.api.Promise;\r\nimport snow.api.Debug.*;\r\n\r\n#if (!macro && !display && !scribe)\r\n    typedef AudioModule = haxe.macro.MacroType<[snow.system.module.Module.assign('Audio')]>;\r\n#end\r\n\r\nclass Audio {\r\n\r\n        /** access to module specific implementation */\r\n    public var module : snow.system.module.Audio;\r\n        /** Set to false to stop any and all processing in the audio system */\r\n    public var active : Bool = false;\r\n\r\n        /** for external access to the library by the systems */\r\n    @:noCompletion public var app : Snow;\r\n        /** for mapping named sounds to Sound instances. Use the `app.audio` to manipulate preferably. */\r\n    @:noCompletion public var sound_list : Map<String, Sound>;\r\n        /** for mapping named streams to SoundStream instances. Use the `app.audio` to manipulate preferably. */\r\n    @:noCompletion public var stream_list : Map<String, Sound>;\r\n\r\n        /** constructed internally, use `app.audio` */\r\n    @:allow(snow.Snow)\r\n    function new( _app:Snow ) {\r\n\r\n        app = _app;\r\n\r\n        module = new snow.system.module.Audio(this);\r\n\r\n        module.init();\r\n\r\n        sound_list = new Map();\r\n        stream_list = new Map();\r\n\r\n        active = true;\r\n\r\n    } //new\r\n\r\n\r\n//Public API\r\n\r\n\r\n        /** Create a sound for playing. If no name is given, a unique id is assigned. Use the sound instance or the public api by name. */\r\n    public function create( _id:String, ?_name:String = '', ?_streaming:Bool = false ) : Promise {\r\n\r\n        if(_name == '') _name = app.uniqueid;\r\n\r\n        log('creating sound named $_name (stream: $_streaming)');\r\n\r\n        return new Promise(function(resolve, reject) {\r\n\r\n            var _create = module.create_sound(_id, _name, _streaming);\r\n\r\n            _create.then(function(_sound:Sound) {\r\n\r\n                sound_list.set(_name, _sound);\r\n\r\n                if(_streaming) stream_list.set(_name, _sound);\r\n\r\n                resolve(_sound);\r\n\r\n                _sound.emit('load');\r\n\r\n            }).error(reject);\r\n\r\n        }); //promise\r\n\r\n    } //create\r\n\r\n        /** Create a sound for playing from bytes. If no name is given, a unique id is assigned.\r\n            Use the sound instance or the public api by name.\r\n            Currently only non-stream sounds. */\r\n    @:noCompletion\r\n    public function create_from_bytes( ?_name:String = '', _bytes:snow.api.buffers.Uint8Array, _format:AudioFormatType ) : Sound {\r\n\r\n        if(_name == '') _name = app.uniqueid;\r\n\r\n        var sound = module.create_sound_from_bytes(_name, _bytes, _format);\r\n\r\n        assertnull(sound);\r\n\r\n        sound_list.set(_name, sound);\r\n\r\n        return sound;\r\n\r\n    } //create_from_bytes\r\n\r\n        /** Destroy a sound instance by name. Use sound_instance.destroy() if you have an instance already. */\r\n    public function uncreate( _name:String ) {\r\n\r\n        var _sound = sound_list.get(_name);\r\n\r\n        if(_sound == null) {\r\n            log('can\\'t find sound, unable to uncreate, use create first: ${_name}');\r\n        } //_sound\r\n\r\n            //kill the sound\r\n        _sound.destroy();\r\n\r\n    } //uncreate\r\n\r\n        /** Add a manually created sound instance to the audio system.\r\n            Once added the regular named api should apply.\r\n            Do not add sounds returned from `create` calls. */\r\n    @:noCompletion public function add( sound:Sound ) {\r\n        sound_list.set(sound.name, sound);\r\n        if(sound.is_stream) stream_list.set(sound.name, sound);\r\n    }\r\n\r\n\r\n        //:todo: temp fixes for audio issues created by modules\r\n    var handlers : Map<String, Array<Sound->Void> >;\r\n    static var splitter = ' • ';\r\n\r\n        /** Listen for a event on a named sound. `load` and `end` are valid events. */\r\n    public function on( _name:String, _event:String, _handler:Sound->Void ) {\r\n\r\n            //first check if the event has already happened\r\n        if(_event == 'load') {\r\n            var sound = get(_name);\r\n            if(sound != null) {\r\n                if(sound.loaded) {\r\n                    _debug('already loaded $_name, calling $_event handler immediately');\r\n                    _handler(sound);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        var _event_id = '${_event}${splitter}${_name}';\r\n\r\n        _debug('adding listener for $_event_id');\r\n\r\n            //make sure the lists exist\r\n        if(handlers == null) handlers = new Map();\r\n            //make sure the array exists for this event\r\n        if(!handlers.exists(_event_id)) handlers.set(_event_id, []);\r\n\r\n            //get the list\r\n        var _list = handlers.get(_event_id);\r\n\r\n        if(_list.indexOf(_handler) != -1) throw \"Audio on event adding the same handler twice\";\r\n\r\n        _list.push(_handler);\r\n\r\n        handlers.set(_event_id, _list);\r\n\r\n    } //on\r\n\r\n        /** Remove a listener for a event on a named sound. see `on` */\r\n    public function off( _name:String, _event:String, _handler:Sound->Void ) {\r\n\r\n        if(handlers == null) return;\r\n\r\n        var _event_id = '${_event}${splitter}${_name}';\r\n\r\n        var _list = handlers.get(_event_id);\r\n        if(_list != null) {\r\n            _list.remove(_handler);\r\n            handlers.set(_event_id, _list);\r\n        }\r\n\r\n    } //off\r\n\r\n        /** Get a sound instance by name */\r\n    public function get( _name:String ) : Sound {\r\n\r\n        var _sound = sound_list.get(_name);\r\n\r\n        return _sound;\r\n\r\n    } //get\r\n\r\n        /** Get/Set the volume of a sound instance by name.\r\n            Leave the second argument blank to return the current value. */\r\n    public function volume( _name:String, ?_volume:Float ) : Float {\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            if(_volume != null) {\r\n                return sound.volume = _volume;\r\n            } else {\r\n                return sound.volume;\r\n            }\r\n        }\r\n        return 0;\r\n    } //volume\r\n\r\n        /** Get/Set the pan of a sound instance by name\r\n            Leave the second argument blank to return the current value.  */\r\n    public function pan( _name:String, ?_pan:Float ) {\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            if(_pan != null) {\r\n                return sound.pan = _pan;\r\n            } else {\r\n                return sound.pan;\r\n            }\r\n        }\r\n        return 0;\r\n    } //pan\r\n\r\n        /** Get/Set the pitch of a sound instance by name\r\n            Leave the second argument blank to return the current value.  */\r\n    public function pitch( _name:String, ?_pitch:Float ) {\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            if(_pitch != null) {\r\n                return sound.pitch = _pitch;\r\n            } else {\r\n                return sound.pitch;\r\n            }\r\n        }\r\n        return 0;\r\n    } //pitch\r\n\r\n        /** Get/Set the position **in seconds** of a sound instance by name.\r\n            Leave the second argument blank to return the current value.  */\r\n    public function position( _name:String, ?_position:Float ) {\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            if(_position != null) {\r\n                return sound.position = _position;\r\n            } else {\r\n                return sound.position;\r\n            }\r\n        }\r\n        return 0;\r\n    } //position\r\n\r\n        /** Get the duration of a sound instance by name.\r\n            Duration is set from the sound instance, so it is read only. */\r\n    public function duration( _name:String ) {\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            return sound.duration;\r\n        }\r\n        return 0;\r\n    } //duration\r\n\r\n        /** Play a sound instance by name */\r\n    public function play(_name:String) {\r\n\r\n        if(!active) {\r\n            return;\r\n        }\r\n\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            sound.play();\r\n        }\r\n    } //play\r\n\r\n        /** Loop a sound instance by name, indefinitely. Use stop to end it */\r\n    public function loop(_name:String) {\r\n\r\n        if(!active) {\r\n            return;\r\n        }\r\n\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            sound.loop();\r\n        }\r\n\r\n    } //loop\r\n\r\n        /** Pause a sound instance by name */\r\n    public function pause(_name:String) {\r\n\r\n        if(!active) {\r\n            return;\r\n        }\r\n\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            sound.pause();\r\n        }\r\n    } //pause\r\n\r\n        /** Stop a sound instance by name */\r\n    public function stop(_name:String) {\r\n\r\n        if(!active) {\r\n            return;\r\n        }\r\n\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            sound.stop();\r\n        }\r\n    } //stop\r\n\r\n        /** Toggle a sound instance by name, pausing the sound */\r\n    public function toggle(_name:String) {\r\n\r\n        if(!active) {\r\n            return;\r\n        }\r\n\r\n        var sound = get(_name);\r\n        if(sound != null) {\r\n            sound.toggle();\r\n        }\r\n    } //toggle\r\n\r\n\r\n//Internal API\r\n\r\n#if snow_native //:todo:\r\n\r\n        /** A helper for converting bytes to seconds for a sound source, using the format from the sound.info */\r\n    public function bytes_to_seconds( info:AudioInfo, _bytes:Int ) : Float {\r\n\r\n        var word = info.data.bits_per_sample == 16 ? 2 : 1;\r\n        var sample_frames = (info.data.rate * info.data.channels * word);\r\n\r\n        return _bytes / sample_frames;\r\n\r\n    } //bytes_to_seconds\r\n\r\n        /** A helper for converting seconds to bytes for this sound source, using the format settings specific to this sound */\r\n    public function seconds_to_bytes( info:AudioInfo, _seconds:Float ) : Int {\r\n\r\n        var word = info.data.bits_per_sample == 16 ? 2 : 1;\r\n        var sample_frames = (info.data.rate * info.data.channels * word);\r\n\r\n        return Std.int(_seconds * sample_frames);\r\n\r\n    } //seconds_to_bytes\r\n\r\n#end //snow_native\r\n\r\n        /** Stop managing a sound instance */\r\n    @:noCompletion public function kill( _sound:Sound ) {\r\n\r\n        if(_sound == null) return;\r\n\r\n        sound_list.remove(_sound.name);\r\n        stream_list.remove(_sound.name);\r\n\r\n    } //kill\r\n\r\n    @:noCompletion public function suspend() {\r\n\r\n        if(!active) {\r\n            return;\r\n        }\r\n\r\n        log(\"suspending sound context\");\r\n\r\n        active = false;\r\n\r\n        for(sound in stream_list) {\r\n            sound.internal_pause();\r\n        }\r\n\r\n        module.suspend();\r\n\r\n    } //suspend\r\n\r\n    @:noCompletion public function resume() {\r\n\r\n        if(active) {\r\n            return;\r\n        }\r\n\r\n        log(\"resuming sound context\");\r\n\r\n        active = true;\r\n\r\n        module.resume();\r\n\r\n        for(sound in stream_list) {\r\n            sound.internal_play();\r\n        }\r\n\r\n    } //resume\r\n\r\n        /** Called by Snow when a system event is dispatched */\r\n    @:allow(snow.Snow)\r\n    function on_event( _event:SystemEvent ) {\r\n\r\n        module.on_event(_event);\r\n\r\n        if(_event.type == SystemEventType.app_willenterbackground) {\r\n            suspend();\r\n        } else if(_event.type == SystemEventType.app_willenterforeground) {\r\n            resume();\r\n        }\r\n\r\n        #if mobile\r\n\r\n            if(_event.type == SystemEventType.window) {\r\n                switch(_event.window.type) {\r\n                    case WindowEventType.focus_lost:\r\n                        suspend();\r\n                    case WindowEventType.focus_gained:\r\n                        resume();\r\n                    default:\r\n                }\r\n            } //_event.type == window\r\n\r\n        #end //mobile\r\n\r\n    } //on_event\r\n\r\n        /** Called by Snow, cleans up sounds/system */\r\n    @:allow(snow.Snow)\r\n    function destroy() {\r\n\r\n        active = false;\r\n\r\n        for(sound in sound_list) {\r\n            sound.destroy();\r\n        }\r\n\r\n        module.destroy();\r\n\r\n    } //destroy\r\n\r\n        /** Called by Snow, update any sounds / streams */\r\n    @:allow(snow.Snow)\r\n    function update() {\r\n\r\n        if(!active) {\r\n            return;\r\n        }\r\n\r\n        for(_sound in sound_list) {\r\n            if(_sound.playing) {\r\n                _sound.internal_update();\r\n            }\r\n        }\r\n\r\n        module.update();\r\n\r\n    } //update\r\n\r\n//Internal\r\n\r\n    function sound_event(_sound:Sound, _event:String) {\r\n\r\n        var _event_id = '${_event}${splitter}${_sound.name}';\r\n\r\n        _debug('sound event: $_event_id');\r\n\r\n        if(handlers == null) return;\r\n\r\n        var _list = handlers.get(_event_id);\r\n        if(_list != null) {\r\n            for(fn in _list) {\r\n                fn(_sound);\r\n            }\r\n        }\r\n\r\n    } //sound_event\r\n\r\n} //Audio\r\n","package snow.system.input;\r\n\r\nimport snow.types.Types;\r\nimport snow.system.window.Window;\r\n\r\n#if (!macro && !display && !scribe)\r\n    private typedef InputModule = haxe.macro.MacroType<[snow.system.module.Module.assign('Input')]>;\r\n#end\r\n\r\n\r\ntypedef MapIntBool = Map<Int, Bool>;\r\ntypedef MapIntFloat = Map<Int, Float>;\r\n\r\n/** The snow input system. Accessed via `app.input` */\r\n@:allow(snow.Snow)\r\nclass Input {\r\n\r\n        /** access to snow from subsystems */\r\n    @:noCompletion public var app : Snow;\r\n        /** access to platform implementation */\r\n    @:noCompletion public var module : snow.system.module.Input;\r\n\r\n        /** constructed internally, use `app.input` */\r\n    function new( _app:Snow ) {\r\n\r\n        app = _app;\r\n\r\n        module = new snow.system.module.Input(this);\r\n\r\n        module.init();\r\n\r\n        //keys\r\n\r\n            key_code_pressed = new Map();\r\n            key_code_down = new Map();\r\n            key_code_released = new Map();\r\n\r\n            scan_code_pressed = new Map();\r\n            scan_code_down = new Map();\r\n            scan_code_released = new Map();\r\n\r\n        //mouse\r\n\r\n            mouse_button_pressed = new Map();\r\n            mouse_button_down = new Map();\r\n            mouse_button_released = new Map();\r\n\r\n        //gamepad\r\n\r\n            gamepad_button_pressed = new Map();\r\n            gamepad_button_down = new Map();\r\n            gamepad_button_released = new Map();\r\n            gamepad_axis_values = new Map();\r\n\r\n        //touch\r\n\r\n            touches_down = new Map();\r\n\r\n    } //new\r\n\r\n\r\n//Public facing API\r\n\r\n\r\n    //Key immediate style access\r\n\r\n            /** returns true if the `Key` value was pressed in the latest frame */\r\n        public function keypressed( _code:Int ) : Bool {\r\n            return key_code_pressed.exists(_code);\r\n        } //keypressed\r\n\r\n            /** returns true if the `Key` value was released in the latest frame */\r\n        public function keyreleased( _code:Int ) : Bool {\r\n            return key_code_released.exists(_code);\r\n        } //keyreleased\r\n\r\n            /** returns true if the `Key` value is down at the time of calling this */\r\n        public function keydown( _code:Int ) : Bool {\r\n           return key_code_down.exists(_code);\r\n        } //keydown\r\n\r\n            /** returns true if the `Scan` value was pressed in the latest frame */\r\n        public function scanpressed( _code:Int ) : Bool {\r\n            return scan_code_pressed.exists(_code);\r\n        } //scanpressed\r\n\r\n            /** returns true if the `Scan` value was released in the latest frame */\r\n        public function scanreleased( _code:Int ) : Bool {\r\n            return scan_code_released.exists(_code);\r\n        } //scanreleased\r\n\r\n            /** returns true if the `Scan` value is down at the time of calling this */\r\n        public function scandown( _code:Int ) : Bool {\r\n           return scan_code_down.exists(_code);\r\n        } //keydown\r\n\r\n    //Mouse immediate style access\r\n\r\n            /** returns true if the mouse button was pressed in the latest frame */\r\n        public function mousepressed( _button:Int ) : Bool {\r\n            return mouse_button_pressed.exists(_button);\r\n        } //keypressed\r\n\r\n            /** returns true if the mouse button was released in the latest frame */\r\n        public function mousereleased( _button:Int ) : Bool {\r\n            return mouse_button_released.exists(_button);\r\n        } //mousereleased\r\n\r\n            /** returns true if the mouse button value is down at the time of calling this */\r\n        public function mousedown( _button:Int ) : Bool {\r\n           return mouse_button_down.exists(_button);\r\n        } //mousedown\r\n\r\n    //Gamepad immediate style access\r\n\r\n            /** returns true if the mouse button was pressed in the latest frame */\r\n        public function gamepadpressed( _gamepad:Int, _button:Int ) : Bool {\r\n\r\n            var _gamepad_state = gamepad_button_pressed.get(_gamepad);\r\n            return _gamepad_state != null ? _gamepad_state.exists(_button) : false;\r\n\r\n        } //keypressed\r\n\r\n            /** returns true if the gamepad button was released in the latest frame */\r\n        public function gamepadreleased( _gamepad:Int, _button:Int ) : Bool {\r\n\r\n            var _gamepad_state = gamepad_button_released.get(_gamepad);\r\n            return _gamepad_state != null ? _gamepad_state.exists(_button) : false;\r\n\r\n        } //gamepadreleased\r\n\r\n            /** returns true if the gamepad button value is down at the time of calling this */\r\n        public function gamepaddown( _gamepad:Int, _button:Int ) : Bool {\r\n\r\n           var _gamepad_state = gamepad_button_down.get(_gamepad);\r\n            return _gamepad_state != null ? _gamepad_state.exists(_button) : false;\r\n\r\n        } //gamepaddown\r\n\r\n            /** returns true if the gamepad button value is down at the time of calling this */\r\n        public function gamepadaxis( _gamepad:Int, _axis:Int ) : Float {\r\n\r\n            var _gamepad_state = gamepad_axis_values.get(_gamepad);\r\n            if(_gamepad_state != null) {\r\n                if(_gamepad_state.exists(_axis)) {\r\n                    return _gamepad_state.get(_axis);\r\n                }\r\n            }\r\n\r\n            return 0;\r\n\r\n        } //gamepaddown\r\n\r\n        /** manually dispatch a key down event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_key_down_event( keycode:Int, scancode:Int, repeat:Bool, mod:ModState, timestamp:Float, window_id:Int ) {\r\n\r\n            //only do the realtime flags if not key repeat\r\n        if(!repeat) {\r\n                //flag the key as pressed, but unprocessed (false)\r\n            key_code_pressed.set(keycode, false);\r\n                //flag it as down, because keyup removes it\r\n            key_code_down.set(keycode, true);\r\n                //flag the scan as pressed, but unprocessed (false)\r\n            scan_code_pressed.set(scancode, false);\r\n                //flag it as down, because keyup removes it\r\n            scan_code_down.set(scancode, true);\r\n        }\r\n\r\n            //forward the event\r\n        app.host.onkeydown(keycode, scancode, repeat, mod, timestamp, window_id);\r\n\r\n    } //dispatch_key_down_event\r\n\r\n        /** manually dispatch a key up event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_key_up_event( keycode:Int, scancode:Int, repeat:Bool, mod:ModState, timestamp:Float, window_id:Int ) {\r\n\r\n            //flag it as released but unprocessed\r\n        key_code_released.set(keycode, false);\r\n            //remove the down flag\r\n        key_code_down.remove(keycode);\r\n\r\n            //flag it as released but unprocessed\r\n        scan_code_released.set(scancode, false);\r\n            //remove the down flag\r\n        scan_code_down.remove(scancode);\r\n\r\n\r\n            //dispatch the event\r\n        app.host.onkeyup(keycode, scancode, repeat, mod, timestamp, window_id);\r\n\r\n    } //dispatch_key_up_event\r\n\r\n        /** manually dispatch a text event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_text_event( text:String, start:Int, length:Int, type:TextEventType, timestamp:Float, window_id:Int ) {\r\n\r\n        app.host.ontextinput( text, start, length, type, timestamp, window_id );\r\n\r\n    } //dispatch_text_event\r\n\r\n\r\n        /** manually dispatch a mouse move event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_mouse_move_event( x:Int, y:Int, xrel:Int, yrel:Int, timestamp:Float, window_id:Int ) {\r\n\r\n        app.host.onmousemove( x, y, xrel, yrel, timestamp, window_id );\r\n\r\n    } //dispatch_mouse_move_event\r\n\r\n        /** manually dispatch a mouse button down event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_mouse_down_event( x:Int, y:Int, button:Int, timestamp:Float, window_id:Int ) {\r\n\r\n            //flag the button as pressed, but unprocessed (false)\r\n        mouse_button_pressed.set(button, false);\r\n            //flag it as down, because mouseup removes it\r\n        mouse_button_down.set(button, true);\r\n\r\n\r\n        app.host.onmousedown( x, y, button, timestamp, window_id );\r\n\r\n    } //dispatch_mouse_down_event\r\n\r\n        /** manually dispatch a mouse button up event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_mouse_up_event( x:Int, y:Int, button:Int, timestamp:Float, window_id:Int ) {\r\n\r\n            //flag it as released but unprocessed\r\n        mouse_button_released.set(button, false);\r\n            //remove the down flag\r\n        mouse_button_down.remove(button);\r\n\r\n\r\n        app.host.onmouseup( x, y, button, timestamp, window_id );\r\n\r\n    } //dispatch_mouse_up_event\r\n\r\n        /** manually dispatch a mouse wheel event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_mouse_wheel_event( x:Int, y:Int, timestamp:Float, window_id:Int ) {\r\n\r\n        app.host.onmousewheel( x, y, timestamp, window_id );\r\n\r\n    } //dispatch_mouse_wheel_event\r\n\r\n        /** manually dispatch a touch down through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_touch_down_event( x:Float, y:Float, touch_id:Int, timestamp:Float ) {\r\n\r\n        if(!touches_down.exists(touch_id)) {\r\n            touch_count++;\r\n            touches_down.set(touch_id, true);\r\n        }\r\n\r\n        app.host.ontouchdown( x, y, touch_id, timestamp );\r\n\r\n    } //dispatch_touch_down_event\r\n\r\n        /** manually dispatch a touch up through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_touch_up_event( x:Float, y:Float, touch_id:Int, timestamp:Float ) {\r\n\r\n        app.host.ontouchup( x, y, touch_id, timestamp );\r\n\r\n        if(touches_down.remove(touch_id)) {\r\n            touch_count--;\r\n        }\r\n\r\n    } //dispatch_touch_up_event\r\n\r\n        /** manually dispatch a touch move through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_touch_move_event( x:Float, y:Float, dx:Float, dy:Float, touch_id:Int, timestamp:Float ) {\r\n\r\n        app.host.ontouchmove( x, y, dx, dy, touch_id, timestamp );\r\n\r\n    } //dispatch_touch_move_event\r\n\r\n        /** manually dispatch a gamepad axis event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_gamepad_axis_event( gamepad:Int, axis:Int, value:Float, timestamp:Float ) {\r\n\r\n            //if not existing, add it's map\r\n        if(!gamepad_axis_values.exists(gamepad)) {\r\n            gamepad_axis_values.set(gamepad, new Map());\r\n        }\r\n\r\n            //update the axis value\r\n        gamepad_axis_values.get(gamepad).set(axis, value);\r\n\r\n        app.host.ongamepadaxis( gamepad, axis, value, timestamp );\r\n\r\n    } //dispatch_gamepad_axis_event\r\n\r\n        /** manually dispatch a gamepad button down event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_gamepad_button_down_event( gamepad:Int, button:Int, value:Float, timestamp:Float ) {\r\n\r\n            //if not existing, add it's map\r\n        if(!gamepad_button_pressed.exists(gamepad)) {\r\n            gamepad_button_pressed.set(gamepad, new Map());\r\n        }\r\n\r\n        if(!gamepad_button_down.exists(gamepad)) {\r\n            gamepad_button_down.set(gamepad, new Map());\r\n        }\r\n\r\n            //flag it as released but unprocessed\r\n        gamepad_button_pressed.get(gamepad).set(button, false);\r\n            //flag it as down, because gamepadup removes it\r\n        gamepad_button_down.get(gamepad).set(button, true);\r\n\r\n\r\n        app.host.ongamepaddown( gamepad, button, value, timestamp );\r\n\r\n    } //dispatch_gamepad_button_down_event\r\n\r\n        /** manually dispatch a gamepad button up event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_gamepad_button_up_event( gamepad:Int, button:Int, value:Float, timestamp:Float ) {\r\n\r\n           //if not existing, add it's map, this should never happen,\r\n           //but rather be safe than crashy. :todo:shipping:\r\n        if(!gamepad_button_released.exists(gamepad)) {\r\n            gamepad_button_released.set(gamepad, new Map());\r\n        }\r\n\r\n        if(!gamepad_button_down.exists(gamepad)) {\r\n            gamepad_button_down.set(gamepad, new Map());\r\n        }\r\n\r\n            //flag it as released but unprocessed\r\n        gamepad_button_released.get(gamepad).set(button, false);\r\n            //flag it as down, because gamepadup removes it\r\n        gamepad_button_down.get(gamepad).remove(button);\r\n\r\n        app.host.ongamepadup( gamepad, button, value, timestamp );\r\n\r\n    } //dispatch_gamepad_button_up_event\r\n\r\n        /** manually dispatch a gamepad device event through the system, delivered to the app handlers, internal and external */\r\n    public function dispatch_gamepad_device_event( gamepad:Int, id:String, type:GamepadDeviceEventType, timestamp:Float ) {\r\n\r\n        app.host.ongamepaddevice( gamepad, id, type, timestamp );\r\n\r\n    } //dispatch_gamepad_device_event\r\n\r\n//Interal API\r\n\r\n        /** Attach to a window to listen for input from it */\r\n    @:noCompletion public function listen( _window:Window ) {\r\n\r\n        module.listen(_window);\r\n\r\n    } //listen\r\n\r\n        /** Detach a listening window, stopping listening of input from it */\r\n    @:noCompletion public function unlisten( _window:Window ) {\r\n\r\n        module.unlisten(_window);\r\n\r\n    } //unlisten\r\n\r\n        /** Called when a system event is dispatched through the core */\r\n    @:noCompletion public function on_event( _event:SystemEvent ) {\r\n\r\n        module.on_event( _event );\r\n\r\n    } //on_event\r\n\r\n\r\n        /** Handle any input related processing, called by Snow */\r\n    function update() {\r\n\r\n        module.update();\r\n\r\n        _update_keystate();\r\n        _update_gamepadstate();\r\n        _update_mousestate();\r\n\r\n    } //update\r\n\r\n        /** Destroy and clean up etc. */\r\n    function destroy() {\r\n\r\n        module.destroy();\r\n\r\n    } //destroy\r\n\r\n//internal\r\n\r\n        /** update mouse pressed/released/down states */\r\n    function _update_mousestate() {\r\n\r\n        for(_code in mouse_button_pressed.keys()){\r\n\r\n            if(mouse_button_pressed.get(_code)){\r\n                mouse_button_pressed.remove(_code);\r\n            } else {\r\n                mouse_button_pressed.set(_code, true);\r\n            }\r\n\r\n        } //each mouse_button_pressed\r\n\r\n        for(_code in mouse_button_released.keys()){\r\n\r\n            if(mouse_button_released.get(_code)){\r\n                mouse_button_released.remove(_code);\r\n            } else {\r\n                mouse_button_released.set(_code, true);\r\n            }\r\n\r\n        } //each mouse_button_released\r\n\r\n    } //_update_mousestate\r\n\r\n        /** update gamepad pressed/released/down/axis states */\r\n    function _update_gamepadstate() {\r\n\r\n        for(_gamepad_pressed in gamepad_button_pressed){\r\n            for(_button in _gamepad_pressed.keys()) {\r\n\r\n                if(_gamepad_pressed.get(_button)){\r\n                    _gamepad_pressed.remove(_button);\r\n                } else {\r\n                    _gamepad_pressed.set(_button, true);\r\n                }\r\n\r\n            } //each _gamepad_pressed\r\n        } //each gamepad_button_pressed\r\n\r\n        for(_gamepad_released in gamepad_button_released){\r\n            for(_button in _gamepad_released.keys()) {\r\n\r\n                if(_gamepad_released.get(_button)){\r\n                    _gamepad_released.remove(_button);\r\n                } else {\r\n                    _gamepad_released.set(_button, true);\r\n                }\r\n\r\n            } //each _gamepad_released\r\n        } //each gamepad_button_released\r\n\r\n    } //_update_gamepadstate\r\n\r\n        /** update key pressed/released/down states */\r\n    function _update_keystate() {\r\n\r\n            //remove any stale key pressed value\r\n            //unless it wasn't alive for a full frame yet,\r\n            //then flag it so that it may be\r\n        for(_code in key_code_pressed.keys()){\r\n\r\n            if(key_code_pressed.get(_code)){\r\n                key_code_pressed.remove(_code);\r\n            } else {\r\n                key_code_pressed.set(_code, true);\r\n            }\r\n\r\n        } //each key_code_pressed\r\n\r\n            //remove any stale key released value\r\n            //unless it wasn't alive for a full frame yet,\r\n            //then flag it so that it may be\r\n        for(_code in key_code_released.keys()){\r\n\r\n            if(key_code_released.get(_code)){\r\n                key_code_released.remove(_code);\r\n            } else {\r\n                key_code_released.set(_code, true);\r\n            }\r\n\r\n        } //each key_code_released\r\n\r\n    //scans\r\n\r\n            //remove any stale key pressed value\r\n            //unless it wasn't alive for a full frame yet,\r\n            //then flag it so that it may be\r\n        for(_code in scan_code_pressed.keys()){\r\n\r\n            if(scan_code_pressed.get(_code)){\r\n                scan_code_pressed.remove(_code);\r\n            } else {\r\n                scan_code_pressed.set(_code, true);\r\n            }\r\n\r\n        } //each scan_code_pressed\r\n\r\n            //remove any stale key released value\r\n            //unless it wasn't alive for a full frame yet,\r\n            //then flag it so that it may be\r\n        for(_code in scan_code_released.keys()){\r\n\r\n            if(scan_code_released.get(_code)){\r\n                scan_code_released.remove(_code);\r\n            } else {\r\n                scan_code_released.set(_code, true);\r\n            }\r\n\r\n        } //each scan_code_released\r\n\r\n    } //_update_keystate\r\n\r\n\r\n\r\n        //this is the keycode based flags for keypressed/keyreleased/keydown\r\n    var key_code_down : MapIntBool;\r\n    var key_code_pressed : MapIntBool;\r\n    var key_code_released : MapIntBool;\r\n\r\n        //this is the scancode based flags for scanpressed/scanreleased/scandown\r\n    var scan_code_down : MapIntBool;\r\n    var scan_code_pressed : MapIntBool;\r\n    var scan_code_released : MapIntBool;\r\n\r\n        //this is the mouse button based flags for mousepressed/mousereleased/mousedown\r\n    var mouse_button_down : MapIntBool;\r\n    var mouse_button_pressed : MapIntBool;\r\n    var mouse_button_released : MapIntBool;\r\n\r\n        //this is the gamepad button based flags for gamepadpressed/gamepadreleased/gamepaddown\r\n    var gamepad_button_down : Map<Int, MapIntBool >;\r\n    var gamepad_button_pressed : Map<Int, MapIntBool >;\r\n    var gamepad_button_released : Map<Int, MapIntBool >;\r\n    var gamepad_axis_values : Map<Int, MapIntFloat >;\r\n\r\n        //map of the touches currently down,\r\n        //:todo:wip:\r\n    @:noCompletion public var touch_count : Int = 0;\r\n    @:noCompletion public var touches_down : MapIntBool;\r\n\r\n\r\n} //Input\r\n\r\n\r\n","package snow.system.io;\r\n\r\nimport snow.Snow;\r\nimport snow.types.Types;\r\nimport snow.api.buffers.Uint8Array;\r\nimport snow.api.Promise;\r\nimport snow.api.Debug.*;\r\n\r\n#if (!macro && !display && !scribe)\r\n    private typedef IOModule = haxe.macro.MacroType<[snow.system.module.Module.assign('IO')]>;\r\n#end\r\n\r\n@:allow(snow.Snow)\r\nclass IO {\r\n\r\n\r\n    @:noCompletion public var app : Snow;\r\n\r\n    /** Access to the platform specific api, if any */\r\n    public var module : snow.system.module.IO;\r\n\r\n    /** The string_save file name prefix. For example, the default being `slot.0`,\r\n        by changing this you can rename the save slots to `custom.0`.\r\n        Only the prefix will change, the slot index is always appended with `.` for predictability. */\r\n    public var string_save_prefix : String = 'slot';\r\n\r\n        /** Constructed internally, use `app.io` */\r\n    @:allow(snow.Snow)\r\n    function new( _app:Snow ) {\r\n\r\n        app = _app;\r\n\r\n        module = new snow.system.module.IO(this);\r\n\r\n        module.init();\r\n\r\n    } //new\r\n\r\n        /** Call this to open a url in the default browser */\r\n    public inline function url_open( _url:String ) {\r\n\r\n        module.url_open(_url);\r\n\r\n    } //url_open\r\n\r\n        /** Load bytes from the file path/url given.\r\n            On web a request is sent for the data */\r\n    public inline function data_load( _path:String, ?_options:IODataOptions ) : Promise {\r\n\r\n        return module.data_load( _path, _options );\r\n\r\n    } //data_load\r\n\r\n\r\n        /** Save bytes to the file path/url given.\r\n            On platforms where this doesn't make sense (web) this will do nothing atm */\r\n    public inline function data_save( _path:String, _data:Uint8Array, ?_options:IODataOptions ) : Bool {\r\n\r\n        return module.data_save( _path, _data, _options );\r\n\r\n    } //data_save\r\n\r\n        /** Returns a promise for data, optionally provided by the given provider, and optionally processed by the given processor. */\r\n    public function data_flow<T>( _id:String, ?_processor:Snow->String->T->Promise, ?_provider:Snow->String->Promise ) : Promise {\r\n\r\n        if(_provider == null) _provider = default_provider;\r\n\r\n        return new Promise(function(resolve, reject) {\r\n\r\n            _provider(app, _id).then(\r\n\r\n                function(data) {\r\n                    if(_processor != null) {\r\n                        _processor(app, _id, data).then(resolve, reject);\r\n                    } else {\r\n                        resolve(data);\r\n                    }\r\n                }\r\n\r\n            ).error(reject);\r\n\r\n        }); //promise\r\n\r\n    } //data_flow\r\n\r\n        /** The string slot <-> key:value pairs,\r\n            for the string sync API. */\r\n    var string_slots: Map<Int, Map<String, String> >;\r\n\r\n        /** Returns the path where string_save operates.\r\n            One targets where this is not a path, the path will be prefaced with `< >/`,\r\n            i.e on web targets the path will be `<localstorage>/` followed by the ID. */\r\n    public function string_save_path( _slot:Int = 0 ) : String {\r\n\r\n        return module.string_save_path(_slot);\r\n\r\n    } //string_save_path\r\n\r\n        //:todo: clear() and remove()\r\n\r\n        /** Save a string value by key, with an optional slot.\r\n            To remove a saved key, pass value in as null.\r\n            Works on all targets as a simple save/load mechanism.\r\n            Data saved is plain text but obscured with basic encoding.\r\n            Any further obfuscation can be done on the value prior to saving.\r\n            Returns false if the save failed, errors being logged. */\r\n    public function string_save( _key:String, _value:String, _slot:Int = 0 ) : Bool {\r\n\r\n        var _string_map = string_slots_sync(_slot);\r\n\r\n        var _encoded_key = module.string_slot_encode(_key);\r\n\r\n            //if the value is null, we remove the key\r\n        if(_value == null) {\r\n\r\n            _debug('removing key $_key ($_encoded_key)');\r\n\r\n            _string_map.remove(_encoded_key);\r\n\r\n        } else {\r\n\r\n            var _encoded_value = module.string_slot_encode(_value);\r\n\r\n            _debug('storing key $_key:$_value as $_encoded_key:$_encoded_value');\r\n\r\n            _string_map.set(_encoded_key, _encoded_value);\r\n\r\n        }\r\n\r\n        var _contents = haxe.Serializer.run(_string_map);\r\n            _contents = module.string_slot_encode(_contents);\r\n\r\n        return module.string_slot_save(_slot, _contents);\r\n\r\n    } //string_save\r\n\r\n        /** Load a string value by key, with an optional slot.\r\n            Works on all targets as a simple save/load mechanism.\r\n            Returns the string or null if the key was invalid, or the slot was not found. */\r\n    public function string_load( _key:String, _slot:Int = 0 ) : String {\r\n\r\n        var _string_map = string_slots_sync(_slot);\r\n\r\n        var _encoded_key = module.string_slot_encode(_key);\r\n        var _encoded_value = _string_map.get(_encoded_key);\r\n\r\n        _debug('reading `$_key` as $_encoded_key:$_encoded_value');\r\n\r\n        if(_encoded_value == null) {\r\n            return null;\r\n        }\r\n\r\n        return module.string_slot_decode(_encoded_value);\r\n\r\n    } //string_load\r\n\r\n        /** Destroy a specific string slot, removing all values stored.\r\n            Does not ask for confirmation. Returns true if successful, false otherwise. */\r\n    public function string_destroy(_slot:Int = 0) : Bool {\r\n\r\n        if(string_slots == null) {\r\n            string_slots = new Map();\r\n        } else {\r\n            string_slots.remove(_slot);\r\n        }\r\n\r\n        return module.string_slot_destroy(_slot);\r\n\r\n    } //string_destroy\r\n\r\n//Internal string load/save\r\n\r\n        //check if the string map exists yet,\r\n        //if not, try to load it,\r\n        //if it doesn't exist yet, make it.\r\n        //returns a valid map for the slot\r\n    inline function string_slots_sync( _slot:Int = 0 ) {\r\n\r\n        //not loaded yet?\r\n        if(string_slots == null) {\r\n            string_slots = new Map();\r\n        }\r\n\r\n        var _string_map = string_slots.get(_slot);\r\n\r\n        if(_string_map == null) {\r\n\r\n            var _string = module.string_slot_load(_slot);\r\n            if(_string == null) {\r\n                _string_map = new Map();\r\n            } else {\r\n                _string = module.string_slot_decode(_string);\r\n                _string_map = haxe.Unserializer.run(_string);\r\n            }\r\n\r\n            string_slots.set(_slot, _string_map);\r\n\r\n        }\r\n\r\n        return _string_map;\r\n\r\n    } //string_slots_sync\r\n\r\n//Internal\r\n\r\n        /** The default data flow provider */\r\n    inline function default_provider(_app:Snow, _id:String) return data_load(_id);\r\n\r\n        /** Called by Snow when a system event happens. */\r\n    inline function on_event( _event:SystemEvent ) {\r\n\r\n        module.on_event( _event );\r\n\r\n    } //on_event\r\n\r\n        /** Called by Snow, update any IO related processing */\r\n    inline function update() {\r\n\r\n        module.update();\r\n\r\n    } //update\r\n\r\n        /** Called by Snow, cleans up IO */\r\n    inline function destroy() {\r\n\r\n        module.destroy();\r\n\r\n    } //destroy\r\n\r\n\r\n} //IO\r\n","package snow.system.window;\r\n\r\nimport snow.types.Types;\r\nimport snow.system.window.Windowing;\r\n\r\nimport snow.modules.opengl.GL;\r\n\r\nimport snow.api.Debug.*;\r\n\r\n    //A window has it's own event loop\r\n    //and allows opening and closing windows\r\n@:allow(snow.system.window.Windowing)\r\nclass Window {\r\n\r\n        /** the window id, for tracking events to each window */\r\n    public var id : Int;\r\n        /** the system this window belongs to */\r\n    public var system : Windowing;\r\n        /** the requested window config */\r\n    public var asked_config : WindowConfig;\r\n        /** the actual returned window config */\r\n    public var config : WindowConfig;\r\n        /** the native window handle */\r\n    public var handle : WindowHandle;\r\n\r\n        /** the window event handler callback */\r\n    public var onevent : WindowEvent->Void;\r\n        /** the window render handler callback */\r\n    public var onrender : Window->Void;\r\n\r\n        /** The window title `(read/write)` */\r\n    @:isVar public var title (get,set) : String = 'snow window';\r\n        /** The window bordered state `(read/write)` */\r\n    @:isVar public var bordered (get,set) : Bool = true;\r\n        /** The window grab state `(read/write)` */\r\n    @:isVar public var grab (get,set) : Bool = false;\r\n        /** The window fullscreen state `(read/write)` */\r\n    @:isVar public var fullscreen (get,set) : Bool = false;\r\n\r\n        /** The window position `(read/write)` */\r\n    @:isVar public var x (default,set) : Int = 0;\r\n    @:isVar public var y (default,set) : Int = 0;\r\n    @:isVar public var width (default,set) : Int = 0;\r\n    @:isVar public var height (default,set) : Int = 0;\r\n\r\n        /** The window maximum size `(read/write)` */\r\n    @:isVar public var max_size (get,set) : { x:Int, y:Int };\r\n        /** The window minimum size `(read/write)` */\r\n    @:isVar public var min_size (get,set) : { x:Int, y:Int };\r\n\r\n        /** set this if you want to control when a window calls swap() */\r\n    public var auto_swap : Bool = true;\r\n        /** set this if you want to control when a window calls render() */\r\n    public var auto_render : Bool = true;\r\n        /** A flag for whether this window is open or closed */\r\n    public var closed : Bool = true;\r\n\r\n        //internal minimized flag to avoid rendering when minimized.\r\n        //use on_event for this yourself\r\n    var minimized : Bool = false;\r\n    var internal_position : Bool = false;\r\n    var internal_resize : Bool = false;\r\n\r\n    public function new( _system:Windowing, _config:WindowConfig ) {\r\n\r\n        max_size    = { x:0, y:0 };\r\n        min_size    = { x:0, y:0 };\r\n\r\n        system = _system;\r\n        asked_config = _config;\r\n        config = _config;\r\n\r\n            //default to OS defined window position\r\n        if(config.x == null) {\r\n            config.x = 0x1FFF0000;\r\n        }\r\n\r\n        if(config.y == null) {\r\n            config.y = 0x1FFF0000;\r\n        }\r\n\r\n        system.module.create( system.app.config.render, _config, on_window_created );\r\n\r\n    } //new\r\n\r\n    function on_window_created( _handle:WindowHandle, _id:Int, _configs:{ config:WindowConfig, render_config:RenderConfig } ) : Void {\r\n\r\n        id = _id;\r\n        handle = _handle;\r\n\r\n        if(handle == null) {\r\n            log(\"failed to create window\");\r\n            return;\r\n        }\r\n\r\n        closed = false;\r\n            //store the real config\r\n        config = _configs.config;\r\n            //update the render config in the core\r\n        system.app.config.render = _configs.render_config;\r\n\r\n            //update the position and size\r\n            //because it updates in the config\r\n            internal_position = true;\r\n        x = config.x;\r\n        y = config.y;\r\n            internal_position = false;\r\n\r\n            internal_resize = true;\r\n        width = config.width;\r\n        height = config.height;\r\n            internal_resize = false;\r\n\r\n        #if mobile\r\n        set_fullscreen(fullscreen);\r\n        #end\r\n\r\n        on_event({\r\n            type:WindowEventType.created,\r\n            window_id : _id,\r\n            timestamp : system.app.time,\r\n            event : {}\r\n        });\r\n\r\n        _debug(\"created window with id: \" + id);\r\n        _debug('updating real window config for $id is ' + _configs);\r\n\r\n    } //on_window_created\r\n\r\n    function on_event( _event:WindowEvent ) {\r\n\r\n        _verbose(\"window event \" + id + \" / \" + _event.type + \" / \" + _event.event );\r\n\r\n        switch(_event.type) {\r\n\r\n            case WindowEventType.moved : {\r\n\r\n                    internal_position = true;\r\n                set_position(_event.event.x, _event.event.y);\r\n                    internal_position = false;\r\n\r\n            } //moved\r\n\r\n            case WindowEventType.resized : {\r\n\r\n                    internal_resize = true;\r\n                set_size(_event.event.x, _event.event.y);\r\n                    internal_resize = false;\r\n\r\n            } //resized\r\n\r\n            case WindowEventType.size_changed : {\r\n\r\n                    internal_resize = true;\r\n                set_size(_event.event.x, _event.event.y);\r\n                    internal_resize = false;\r\n\r\n            } //size_changed\r\n\r\n            case WindowEventType.minimized : {\r\n\r\n                minimized = true;\r\n\r\n            } //minimized\r\n\r\n            case WindowEventType.restored : {\r\n\r\n                minimized = false;\r\n\r\n            } //restored\r\n\r\n            default: {}\r\n\r\n        } //switch\r\n\r\n        if(onevent != null) {\r\n            onevent( _event );\r\n        }\r\n\r\n    } //on_event\r\n\r\n    function update() {\r\n\r\n        if(handle != null && !closed) {\r\n            system.module.update_window( this );\r\n        }\r\n\r\n    } //update\r\n\r\n\r\n        /** Called for you automatically, unless auto_render is disabled. */\r\n    public function render() {\r\n\r\n        if(minimized || closed) {\r\n            return;\r\n        }\r\n\r\n        if(handle == null) {\r\n            return;\r\n        }\r\n\r\n        system.module.render( this );\r\n\r\n        if(onrender != null) {\r\n\r\n            onrender( this );\r\n\r\n            if(auto_swap) {\r\n                swap();\r\n            }\r\n\r\n            return;\r\n\r\n        } //has render handler\r\n\r\n        GL.clearColor( 0, 0, 0, 1.0 );\r\n        GL.clear(GL.COLOR_BUFFER_BIT);\r\n\r\n        if(auto_swap) {\r\n            swap();\r\n        }\r\n\r\n    } //render\r\n\r\n        /** Swap the back buffer of the window, call after rendering to update the window view */\r\n    public function swap() {\r\n\r\n        if(handle == null || closed || minimized) {\r\n            return;\r\n        }\r\n\r\n        system.module.swap( this );\r\n\r\n    } //swap\r\n\r\n        /** Destroy the window. To recreate it create must be used, show will not work. */\r\n    public function destroy() {\r\n\r\n        closed = true;\r\n\r\n        if(handle == null) {\r\n            return;\r\n        }\r\n            //remove from the internal list\r\n        system.remove(this);\r\n            //destroy system window\r\n        system.module.destroy_window( this );\r\n            //clear handle as it's invalid\r\n        handle = null;\r\n\r\n    } //destroy\r\n\r\n        /** Close the window, hiding it (not destroying it). Calling show() will unhide it. */\r\n    public function close() {\r\n\r\n        closed = true;\r\n\r\n        if(handle == null) {\r\n            return;\r\n        }\r\n\r\n        system.module.close( this );\r\n\r\n    } //close\r\n\r\n        /** Show the window, unhiding it. If destroyed, nothing happens. */\r\n    public function show() {\r\n\r\n        if(handle == null) {\r\n            return;\r\n        }\r\n\r\n        closed = false;\r\n\r\n        system.module.show( this );\r\n\r\n    } //show\r\n\r\n        /** Display a cross platform message on this window */\r\n    public function simple_message( message:String, title:String=\"\" ) {\r\n\r\n        if(handle == null) {\r\n            return;\r\n        }\r\n\r\n        system.module.simple_message( this, message, title );\r\n\r\n    } //simple_message\r\n\r\n    function get_fullscreen() : Bool {\r\n\r\n        return fullscreen;\r\n\r\n    } //get_fullscreen\r\n\r\n\r\n    function set_fullscreen( _enable:Bool ) {\r\n\r\n        if(handle != null) {\r\n            system.module.fullscreen( this, _enable );\r\n        }\r\n\r\n        return fullscreen = _enable;\r\n\r\n    } //set_fullscreen\r\n\r\n    function get_bordered() : Bool {\r\n\r\n        return bordered;\r\n\r\n    } //get_bordered\r\n\r\n    function get_grab() : Bool {\r\n\r\n        return grab;\r\n\r\n    } //get_grab\r\n\r\n    function get_max_size() : { x:Int, y:Int } {\r\n\r\n        return max_size;\r\n\r\n    } //get_max_size\r\n\r\n    function get_min_size() : { x:Int, y:Int } {\r\n\r\n        return min_size;\r\n\r\n    } //get_min_size\r\n\r\n    function get_title() : String {\r\n\r\n        return title;\r\n\r\n    } //get_title\r\n\r\n    function set_title( _title:String ) {\r\n\r\n        if(handle != null) {\r\n            system.module.set_title( this, _title );\r\n        }\r\n\r\n        return title = _title;\r\n\r\n    } //set_title\r\n\r\n    function set_x( _x:Int ) : Int {\r\n\r\n        x = _x;\r\n\r\n        if(handle != null && !internal_position) {\r\n            system.module.set_position( this, x, y );\r\n        }\r\n\r\n        return x;\r\n\r\n    } //set_x\r\n\r\n    function set_y( _y:Int ) : Int {\r\n\r\n        y = _y;\r\n\r\n        if(handle != null && !internal_position) {\r\n            system.module.set_position( this, x, y );\r\n        }\r\n\r\n        return y;\r\n\r\n    } //set_y\r\n\r\n    function set_width( _width:Int ) : Int {\r\n\r\n        width = _width;\r\n\r\n        if(handle != null && !internal_resize) {\r\n            system.module.set_size( this, width, height );\r\n        }\r\n\r\n        return width;\r\n\r\n    } //set_width\r\n\r\n    function set_height( _height:Int ) : Int {\r\n\r\n        height = _height;\r\n\r\n        if(handle != null && !internal_resize) {\r\n            system.module.set_size( this, width, height );\r\n        }\r\n\r\n        return height;\r\n\r\n    } //set_height\r\n\r\n    public function set_cursor_position( _x:Int, _y:Int ) {\r\n\r\n        if(handle != null && !closed) {\r\n            system.module.set_cursor_position( this, _x, _y );\r\n        }\r\n\r\n    } //set_cursor_position\r\n\r\n    public function set_position( _x:Int, _y:Int ) {\r\n\r\n            //keep the flag\r\n        var last_internal_position_flag = internal_position;\r\n\r\n            //force true\r\n        internal_position = true;\r\n            x = _x;\r\n            y = _y;\r\n        internal_position = last_internal_position_flag;\r\n\r\n            //this is never called\r\n        if(handle != null && !internal_position) {\r\n            system.module.set_position( this, x, y );\r\n        }\r\n\r\n    } //set_position\r\n\r\n    public function set_size( _width:Int, _height:Int ) {\r\n\r\n            //keep the flag\r\n        var last_internal_resize_flag = internal_resize;\r\n\r\n            //force true\r\n        internal_resize = true;\r\n            width = _width;\r\n            height = _height;\r\n        internal_resize = last_internal_resize_flag;\r\n\r\n        if(handle != null && !internal_resize) {\r\n            system.module.set_size( this, _width, _height );\r\n        }\r\n\r\n    } //set_size\r\n\r\n    function set_max_size( _size:{ x:Int, y:Int } ) : { x:Int, y:Int } {\r\n\r\n        if(max_size != null && handle != null) {\r\n            system.module.set_max_size( this, _size.x, _size.y );\r\n        }\r\n\r\n        return max_size = _size;\r\n\r\n    } //set_max_size\r\n\r\n    function set_min_size( _size: { x:Int, y:Int } ) : { x:Int, y:Int } {\r\n\r\n        if(min_size != null && handle != null) {\r\n            system.module.set_min_size( this, _size.x, _size.y );\r\n        }\r\n\r\n        return min_size = _size;\r\n\r\n    } //set_min_size\r\n\r\n    function set_bordered( _bordered:Bool ) : Bool {\r\n\r\n        if(handle != null) {\r\n            system.module.bordered( this, _bordered );\r\n        }\r\n\r\n        return bordered = _bordered;\r\n\r\n    } //set_bordered\r\n\r\n    function set_grab( _grab:Bool ) : Bool {\r\n\r\n        if(handle != null) {\r\n            system.module.grab( this, _grab );\r\n        }\r\n\r\n        return grab = _grab;\r\n\r\n    } //set_grab\r\n\r\n} //Window\r\n","package snow.system.window;\r\n\r\nimport snow.types.Types;\r\nimport snow.system.window.Window;\r\n\r\n#if (!macro && !display && !scribe)\r\n    private typedef WindowingModule = haxe.macro.MacroType<[snow.system.module.Module.assign('Windowing')]>;\r\n#end\r\n\r\n/** The window manager, accessed via `app.window` */\r\n@:allow(snow.Snow)\r\n@:allow(snow.system.window.Window)\r\nclass Windowing {\r\n\r\n        /** The list of windows in this manager */\r\n    public var window_list : Map<Int, Window>;\r\n        /** The list of window handles, pointing to id's in the `window_list` */\r\n    public var window_handles : WindowHandleMap;\r\n        /** The number of windows in this manager */\r\n    public var window_count : Int = 0;\r\n\r\n        /** access to snow for subsystems/windows */\r\n    @:noCompletion public var app : Snow;\r\n        /** The concrete implementation of the window system */\r\n    @:noCompletion public var module : snow.system.module.Windowing;\r\n\r\n\r\n        /** constructed internally, use `app.windowing` */\r\n    function new( _app:Snow ) {\r\n\r\n        app = _app;\r\n        window_list = new Map();\r\n        window_handles = new WindowHandleMap();\r\n\r\n        module = new snow.system.module.Windowing(this);\r\n\r\n        module.init();\r\n\r\n    } //new\r\n\r\n//Public facing API\r\n\r\n        /** Create a window with the given config. */\r\n    public function create( _config:WindowConfig ) : Window {\r\n\r\n        var _window = new Window( this, _config );\r\n\r\n            window_list.set( _window.id, _window );\r\n            window_handles.set( _window.handle, _window.id );\r\n            window_count++;\r\n\r\n            //handle any window system specifics that have to happen\r\n            //to this window when creating it, like enter/leave events\r\n        module.listen( _window );\r\n\r\n            //unless requested not to, give this window to the input\r\n            //system to listen for events and dispatch them as needed\r\n        if(_config.no_input == null || _config.no_input == false) {\r\n            app.input.listen( _window );\r\n        }\r\n\r\n        return _window;\r\n\r\n    } //create\r\n\r\n        /** Remove a window from the system, stopping events, etc.\r\n            Called from window.destroy()! Don't use manually unless manually controlling the list. */\r\n    function remove( _window:Window ) {\r\n\r\n        window_list.remove( _window.id );\r\n        window_handles.remove( _window.handle );\r\n        window_count--;\r\n\r\n        module.unlisten( _window );\r\n\r\n        if(_window.config.no_input == null || _window.config.no_input == false) {\r\n            app.input.unlisten( _window );\r\n        }\r\n\r\n    } //remove\r\n\r\n        /** Get a window instance from an window handle. */\r\n    @:noCompletion public function window_from_handle( _handle:WindowHandle ) : Window {\r\n\r\n        if(window_handles.exists(_handle)) {\r\n            var _id = window_handles.get(_handle);\r\n            return window_list.get(_id);\r\n        }\r\n\r\n        return null;\r\n\r\n    } //window_from_handle\r\n\r\n        /** Get a window instance from an ID. */\r\n    @:noCompletion public function window_from_id( _id:Int ) : Window {\r\n\r\n        return window_list.get(_id);\r\n\r\n    } //window_from_id\r\n\r\n//System helpers\r\n\r\n        /** Toggle vertical refresh. This is not window specific but context wide */\r\n    public function enable_vsync( _enable:Bool ) : Int {\r\n\r\n        return module.system_enable_vsync(_enable);\r\n\r\n    } //enable_vsync\r\n\r\n        /** Toggle the OS cursor. This is not window specific but application wide, when inside a window, the OS cursor is hidden. */\r\n    public function enable_cursor( _enable:Bool ) : Void {\r\n\r\n        module.system_enable_cursor(_enable);\r\n\r\n    } //enable_cursor\r\n\r\n        /** Lock the OS cursor to the foreground window. This hides the cursor and prevents it from leaving, reporting relative coordinates. */\r\n    public function enable_cursor_lock( _enable:Bool ) : Void {\r\n\r\n        module.system_lock_cursor(_enable);\r\n\r\n    } //enable_cursor\r\n\r\n//Desktop API\r\n    //note that these only make sense on some platforms but will\r\n    //try and return valid values either way. Use the window itself for info\r\n\r\n        /** Get the number of displays present */\r\n    public function display_count() : Int {\r\n        return module.display_count();\r\n    } //display_count\r\n\r\n        /** Get the number of display modes present */\r\n    public function display_mode_count( display:Int ) : Int {\r\n        return module.display_mode_count(display);\r\n    } //display_mode_count\r\n\r\n        /** Get the native mode information of the display by index */\r\n    public function display_native_mode( display:Int ) : DisplayMode {\r\n        return module.display_native_mode(display);\r\n    } //display_native_mode\r\n\r\n        /** Get the current mode information of the display by index */\r\n    public function display_current_mode( display:Int ) : DisplayMode {\r\n        return module.display_current_mode(display);\r\n    } //display_current_mode\r\n\r\n        /** Get the information from a specific mode index, the index is obtained by iterating with a `display_mode_count` as the loop value */\r\n    public function display_mode( display:Int, mode_index:Int ) : DisplayMode {\r\n        return module.display_mode(display, mode_index);\r\n    } //display_mode\r\n\r\n        /** Get the bounds of the display by index */\r\n    public function display_bounds( display:Int ) : { x:Int, y:Int, width:Int, height:Int } {\r\n        return module.display_bounds(display);\r\n    } //display_bounds\r\n\r\n        /** Get the name of the display by index, where available */\r\n    public function display_name( display:Int ) : String {\r\n        return module.display_name(display);\r\n    } //display_name\r\n\r\n\r\n//Internal core API\r\n\r\n        /** Called by Snow when a system event is dispatched */\r\n    function on_event( _event:SystemEvent ) {\r\n\r\n        if(_event.type == SystemEventType.window) {\r\n\r\n            var _window_event = _event.window;\r\n\r\n            var _window = window_list.get( _window_event.window_id );\r\n\r\n            if(_window != null) {\r\n                _window.on_event( _window_event );\r\n            }\r\n\r\n        } //only window events\r\n\r\n    } //on_event\r\n\r\n        /** Called by Snow, process any window handling */\r\n    function update() {\r\n\r\n        module.update();\r\n\r\n        for(window in window_list) {\r\n            window.update();\r\n        }\r\n\r\n        for(window in window_list) {\r\n            if(window.auto_render) {\r\n                window.render();\r\n            }\r\n        }\r\n\r\n    } //update\r\n\r\n        /** Called by Snow, destroy everything. */\r\n    function destroy() {\r\n\r\n        module.destroy();\r\n\r\n    } //destroy\r\n\r\n\r\n} //Windowing\r\n\r\n\r\n#if snow_web\r\n\r\n    private typedef WindowHandleMap = Map<WindowHandle, Int>;\r\n\r\n#else\r\n\r\n    private class WindowHandleMap extends haxe.ds.BalancedTree<WindowHandle,Int> {\r\n\r\n        override function compare(k1:WindowHandle, k2:WindowHandle) {\r\n            if(k1 == null) return 1;\r\n            if(k2 == null) return 1;\r\n            if(k1 == k2) return 0;\r\n            if(k1 < k2) return -1;\r\n            return 1;\r\n        }\r\n\r\n    } //WindowHandleMap\r\n\r\n#end\r\n","package snow.types;\r\n\r\n#if !macro\r\n\r\nimport snow.Snow;\r\nimport snow.api.buffers.Uint8Array;\r\n\r\n//asset types\r\n\r\ntypedef Asset      = snow.system.assets.Asset.Asset;\r\ntypedef AssetBytes = snow.system.assets.Asset.AssetBytes;\r\ntypedef AssetText  = snow.system.assets.Asset.AssetText;\r\ntypedef AssetJSON  = snow.system.assets.Asset.AssetJSON;\r\ntypedef AssetImage = snow.system.assets.Asset.AssetImage;\r\n\r\ntypedef Key = snow.system.input.Keycodes.Keycodes;\r\ntypedef Scan = snow.system.input.Keycodes.Scancodes;\r\n\r\nenum Error {\r\n    error(value:Dynamic);\r\n    init(value:Dynamic);\r\n    windowing(value:Dynamic);\r\n    parse(value:Dynamic);\r\n}\r\n\r\n/** A platform identifier string */\r\n@:enum abstract Platform(String) from String to String {\r\n    var platform_windows = 'windows';\r\n    var platform_mac     = 'mac';\r\n    var platform_linux   = 'linux';\r\n    var platform_android = 'android';\r\n    var platform_ios     = 'ios';\r\n    var platform_web     = 'web';\r\n}\r\n\r\n/** A platform identifier string */\r\n@:enum abstract OS(String) from String to String {\r\n    var os_windows = 'windows';\r\n    var os_mac     = 'mac';\r\n    var os_linux   = 'linux';\r\n    var os_android = 'android';\r\n    var os_ios     = 'ios';\r\n}\r\n\r\n/** A type to identify assets when stored as an Asset */\r\n@:enum abstract AssetType(Int) from Int to Int {\r\n\r\n    var unknown = 0;\r\n    var bytes   = 1;\r\n    var text    = 2;\r\n    var json    = 3;\r\n    var image   = 4;\r\n    var audio   = 5;\r\n\r\n    inline function toString() {\r\n        return switch(this) {\r\n            case unknown: 'unknown';\r\n            case bytes:   'bytes';\r\n            case text:    'text';\r\n            case json:    'json';\r\n            case image:   'image';\r\n            case audio:   'audio';\r\n            case _:       '$this';\r\n        }\r\n    } //toString\r\n\r\n} //AssetType\r\n\r\ntypedef IODataOptions = {\r\n\r\n    @:optional var binary:Bool;\r\n\r\n}\r\n\r\n\r\n/** Snow specific configurations, set from build config */\r\ntypedef SnowConfig = {\r\n\r\n        /** whether or not the core should run a loop at all, default: true */\r\n    @:optional var has_loop : Bool;\r\n        /** The default place to find the runtime config file. \r\n            Set this value to a blank string to disable the automatic\r\n            loading of the config json file. default: `config.json` */\r\n    @:optional var config_path : String;\r\n\r\n        /** The application specific package. i.e org.snowkit.snowapp\r\n            This should match the common format above,\r\n            the last part (snowapp) will be used as the app name,\r\n            the first parts (org.snowkit) will be used as the path.\r\n            This means for example, when storing a preference in an OS location,\r\n            it would be stored under <OS user path>/org.snowkit/snowapp/\r\n            This also means that it must obey the rules set out by app stores for bundle ID's,\r\n            general urls, file folder names, and https://wiki.libsdl.org/SDL_GetPrefPath#Remarks\r\n        */\r\n    @:optional var app_package : String;\r\n\r\n} //SnowConfig\r\n\r\n/** The runtime application config info */\r\ntypedef AppConfig = {\r\n\r\n        /** whether or not to create and run a default window, default: true */\r\n    @:optional var has_window   : Bool;\r\n        /** the window config for the default window, if `has_window` is true. default: see `WindowConfig` docs*/\r\n    @:optional var window       : WindowConfig;\r\n\r\n        /** The render config that specifies rendering and context backend specifics.  */\r\n    @:optional var render       : RenderConfig;\r\n\r\n        /** the user specific config, by default, read from a json file at runtime */\r\n    @:optional var runtime      : Dynamic;\r\n        /** config specific to the web target */\r\n    @:optional var web          : AppConfigWeb;\r\n        /** config specific to the native target */\r\n    @:optional var native       : AppConfigNative;\r\n\r\n} //AppConfig\r\n\r\ntypedef AppConfigWeb = {\r\n\r\n        /** If true, right clicking will consume the event on the canvas. `event.preventDefault` is used. default: true*/\r\n    @:optional var no_context_menu : Bool;\r\n\r\n        /** Any Key.* values stored in this array sent to the page will be consumed by snow. `event.preventDefault` is used.\r\n            Keys can be removed or added to the array at runtime. default:left,up,down,right,backspace,tab,delete */\r\n    @:optional var prevent_default_keys : Array<Int>;\r\n        /** If true, mouse wheel events sent to the page will be consumed by snow. `event.preventDefault` is used. default: true*/\r\n    @:optional var prevent_default_mouse_wheel : Bool;\r\n\r\n        /** If true, native fullscreen will be requested from the user.\r\n            If not, the canvas will fill the window size instead.\r\n            Take note : true fullscreen requests only work when driven by a user event (click/keys).\r\n            You cannot force fullscreen on web. default: false */\r\n    @:optional var true_fullscreen : Bool;\r\n\r\n} //AppConfigWeb\r\n\r\ntypedef AppConfigNative = {\r\n\r\n        /** The default length of a single stream buffer in bytes. default:176400, This is ~1 sec in 16 bit mono. */\r\n    @:optional var audio_buffer_length : Int;\r\n\r\n        /** The default number of audio buffers to use for a single stream. Set no less than 2, as it's a queue. See `Audio` docs. default:4 */\r\n    @:optional var audio_buffer_count : Int;\r\n\r\n} //AppConfigNative\r\n\r\ntypedef FileFilter = {\r\n\r\n        /** An extension for the filter. i.e `md`, `txt`, `png` or a special `*` for any file type.  */\r\n    var extension:String;\r\n        /** An optional description for this filter i.e `markdown files`, `text files`, `all files` */\r\n    @:optional var desc:String;\r\n\r\n} //FileFilter\r\n\r\n\r\n/** Information about an image file/data */\r\ntypedef ImageInfo = {\r\n\r\n        /** source asset id */\r\n    var id : String;\r\n        /** image width from source image */\r\n    var width : Int;\r\n        /** image height from source image */\r\n    var height : Int;\r\n        /** The actual width, used when image is automatically padded to POT */\r\n    var width_actual : Int;\r\n        /** The actual height, used when image is automatically padded to POT */\r\n    var height_actual : Int;\r\n        /** used bits per pixel */\r\n    var bpp : Int;\r\n        /** source bits per pixel */\r\n    var bpp_source : Int;\r\n        /** image pixel data */\r\n    var pixels : Uint8Array;\r\n\r\n} //ImageInfo\r\n\r\n/** The type of audio format */\r\n@:enum abstract AudioFormatType(Null<Int>) from Null<Int> to Null<Int> {\r\n\r\n    var unknown  = 0;\r\n    var ogg      = 1;\r\n    var wav      = 2;\r\n    var pcm      = 3;\r\n\r\n} //AudioFormatType\r\n\r\n\r\n    /** The platform specific implementation detail about the audio data */\r\ntypedef AudioDataInfo = {\r\n\r\n        /** the file length in bytes */\r\n    var length : Int;\r\n        /** the pcm uncompressed raw length in bytes */\r\n    var length_pcm : Int;\r\n        /** number of channels */\r\n    var channels : Int;\r\n        /** hz rate */\r\n    var rate : Int;\r\n        /** sound bitrate */\r\n    var bitrate : Int;\r\n        /** bits per sample, 8 / 16 */\r\n    var bits_per_sample : Int;\r\n        /** sound raw data */\r\n    var samples : Uint8Array;\r\n\r\n} //AudioDataInfo\r\n\r\n/** Information about an audio file/data */\r\ntypedef AudioInfo = {\r\n\r\n        /** file source id */\r\n    var id : String;\r\n        /** format. Use AudioFormatType */\r\n    var format : Int;\r\n        /** the platform audio data info */\r\n    var data : AudioDataInfo;\r\n        /** the platform audio handle for later manipulation */\r\n    var handle : AudioHandle;\r\n\r\n} //AudioInfo\r\n\r\n/** Information about an audio portion requested via assets */\r\ntypedef AudioDataBlob = {\r\n\r\n        /** True if the file has reached the end of the data in this blob */\r\n    var bytes : Uint8Array;\r\n        /** The data stored in this blob */\r\n    var complete : Bool;\r\n\r\n} //AudioDataBlob\r\n\r\n\r\n/** Config specific to the rendering context that would be used when creating windows */\r\ntypedef RenderConfig = {\r\n\r\n        /** Whether a stencil buffer should be created. default:false */\r\n    @:optional var depth : Bool;\r\n        /** Whether a stencil buffer should be created. default:false */\r\n    @:optional var stencil : Bool;\r\n        /** a value of `0`, `2`, `4`, `8` or other valid antialiasing flags. default: 0 */\r\n    @:optional var antialiasing : Int;\r\n\r\n        /** set the number of depth bits for the rendering to use. Unless you need to change this, don't. default: system */\r\n    @:optional var depth_bits   : Int;\r\n        /** set the number of red bits for the rendering to use. Unless you need to change this, don't. default: system */\r\n    @:optional var stencil_bits   : Int;\r\n\r\n        /** set the number of red bits for the rendering to use. Unless you need to change this, don't. default: 8 */\r\n    @:optional var red_bits   : Int;\r\n        /** set the number of green bits for the rendering to use. Unless you need to change this, don't. default: 8 */\r\n    @:optional var green_bits   : Int;\r\n        /** set the number of blue bits for the rendering to use. Unless you need to change this, don't. default: 8 */\r\n    @:optional var blue_bits   : Int;\r\n        /** set the number of alpha bits for the rendering to use. Unless you need to change this, don't. default: 8 */\r\n    @:optional var alpha_bits   : Int;\r\n\r\n        /** OpenGL render context specific settings */\r\n    @:optional var opengl : RenderConfigOpenGL;\r\n\r\n} //RenderConfig\r\n\r\n\r\n/** A type of OpenGL context profile to request. see RenderConfigOpenGL for info */\r\n@:enum abstract OpenGLProfile(Int) from Int to Int {\r\n\r\n    var compatibility = 0;\r\n    var core = 1;\r\n\r\n    inline function toString() {\r\n        return switch(this) {\r\n            case compatibility: 'compatibility';\r\n            case core:          'core';\r\n            case _:             '$this';\r\n        }\r\n    } //toString\r\n\r\n} //OpenGLProfile\r\n\r\n\r\n@:noCompletion typedef WindowingConfig = {\r\n    config:WindowConfig,\r\n    render_config:RenderConfig\r\n}\r\n\r\n/** Config specific to an OpenGL rendering context.\r\n    Note that these are hints to the system,\r\n    you must always check the values after initializing\r\n    for what you actually received. The OS/driver decides. */\r\ntypedef RenderConfigOpenGL = {\r\n\r\n        /** The major OpenGL version to request */\r\n    @:optional var major : Int;\r\n        /** The minor OpenGL version to request */\r\n    @:optional var minor : Int;\r\n        /** The OpenGL context profile to request */\r\n    @:optional var profile : OpenGLProfile;\r\n\r\n} //RenderConfigOpenGL\r\n\r\n/** Window configuration information for creating windows */\r\ntypedef WindowConfig = {\r\n\r\n        /** create in fullscreen, default: false, `mobile` true */\r\n    @:optional var fullscreen   : Bool;\r\n        /** If true, the users native desktop resolution will be used for fullscreen instead of the specified window size. default: true */\r\n    @:optional var fullscreen_desktop : Bool;\r\n        /** allow the window to be resized, default: true */\r\n    @:optional var resizable    : Bool;\r\n        /** create as a borderless window, default: false */\r\n    @:optional var borderless   : Bool;\r\n        /** window x at creation. Leave this alone to use the OS default. */\r\n    @:optional var x            : Int;\r\n        /** window y at creation. Leave this alone to use the OS default. */\r\n    @:optional var y            : Int;\r\n        /** window width at creation, default: 960 */\r\n    @:optional var width        : Int;\r\n        /** window height at creation, default: 640 */\r\n    @:optional var height       : Int;\r\n        /** window title, default: 'snow app' */\r\n    @:optional var title        : String;\r\n        /** disables input arriving at/from this window. default: false */\r\n    @:optional var no_input     : Bool;\r\n\r\n} //WindowConfig\r\n\r\n/** A system event */\r\ntypedef SystemEvent = {\r\n\r\n        /** The type of system event this event is. SystemEventType */\r\n    @:optional var type : SystemEventType;\r\n        /** If type is `window` this will be populated, otherwise null */\r\n    @:optional var window : WindowEvent;\r\n        /** If type is `input` this will be populated, otherwise null */\r\n    @:optional var input : InputEvent;\r\n        /** If type is `file` this will be populated, otherwise null */\r\n    @:optional var file : FileEvent;\r\n\r\n} //SystemEvent\r\n\r\n/** A system window event */\r\ntypedef WindowEvent = {\r\n\r\n        /** The type of window event this was. Use WindowEventType */\r\n    @:optional var type : WindowEventType;\r\n        /** The time in seconds that this event occured, useful for deltas */\r\n    @:optional var timestamp : Float;\r\n        /** The window id from which this event originated */\r\n    @:optional var window_id : Int;\r\n        /** The raw platform event data, only useful if you are implementing\r\n            a new platform or lack access to data from the system that snow does not expose */\r\n    @:optional var event : Dynamic;\r\n\r\n} //WindowEvent\r\n\r\n/** A system file watch event */\r\ntypedef FileEvent = {\r\n\r\n        /** The type of file watch event, modify/create/delete. Use FileEventType */\r\n    @:optional var type : FileEventType;\r\n        /** The time in seconds when this event was fired */\r\n    @:optional var timestamp : Float;\r\n        /** The absolute path that was notifying */\r\n    @:optional var path : String;\r\n\r\n} //FileEvent\r\n\r\n/** A system input event */\r\ntypedef InputEvent = {\r\n\r\n        /** The type of input event this was. Use InputEventType */\r\n    @:optional var type : InputEventType;\r\n        /** The time in seconds that this event occured, useful for deltas */\r\n    @:optional var timestamp : Float;\r\n        /** The window id from which this event originated */\r\n    @:optional var window_id : Int;\r\n        /** The raw platform event data, only useful if you are implementing\r\n            a new platform or lack access to data from the system that snow does not expose */\r\n    @:optional var event : Dynamic;\r\n\r\n} //InputEvent\r\n\r\n/** Information about a display mode */\r\ntypedef DisplayMode = {\r\n    format : Int,\r\n    refresh_rate : Int,\r\n    width : Int,\r\n    height : Int\r\n}\r\n\r\n    /** A platform window handle */\r\n#if snow_web\r\n    typedef WindowHandle = js.html.CanvasElement;\r\n#else\r\n    typedef WindowHandle = Null<Float>;\r\n#end //snow_web\r\n\r\n    /** A platform window handle */\r\n#if snow_web\r\n    typedef AudioHandle = Dynamic;\r\n#else\r\n    typedef AudioHandle = Null<Float>;\r\n#end //snow_web\r\n\r\n\r\n\r\n/** A text specific event event type */\r\n@:enum abstract TextEventType(Int) from Int to Int {\r\n\r\n/** An unknown text event */\r\n    var unknown    = 0;\r\n/** An edit text typing event */\r\n    var edit    = 1;\r\n/** An input text typing event */\r\n    var input   = 2;\r\n\r\n    inline function toString() {\r\n        return switch(this) {\r\n            case unknown: 'unknown';\r\n            case edit:    'edit';\r\n            case input:   'input';\r\n            case _:       '$this';\r\n        }\r\n    } //toString\r\n\r\n} //TextEventType\r\n\r\n/** A gamepad device event type */\r\n@:enum abstract GamepadDeviceEventType(Int) from Int to Int {\r\n\r\n/** A unknown device event */\r\n    var unknown             = 0;\r\n/** A device added event */\r\n    var device_added        = 1;\r\n/** A device removed event */\r\n    var device_removed      = 2;\r\n/** A device was remapped */\r\n    var device_remapped     = 3;\r\n\r\n    inline function toString() {\r\n        return switch(this) {\r\n            case unknown:         'unknown';\r\n            case device_added:    'device_added';\r\n            case device_removed:  'device_removed';\r\n            case device_remapped: 'device_remapped';\r\n            case _:               '$this';\r\n        }\r\n    } //toString\r\n\r\n} //GamepadDeviceEventType\r\n\r\n\r\n/** Input modifier state */\r\ntypedef ModState = {\r\n\r\n        /** no modifiers are down */\r\n    var none : Bool;\r\n        /** left shift key is down */\r\n    var lshift : Bool;\r\n        /** right shift key is down */\r\n    var rshift : Bool;\r\n        /** left ctrl key is down */\r\n    var lctrl : Bool;\r\n        /** right ctrl key is down */\r\n    var rctrl : Bool;\r\n        /** left alt/option key is down */\r\n    var lalt : Bool;\r\n        /** right alt/option key is down */\r\n    var ralt : Bool;\r\n        /** left windows/command key is down */\r\n    var lmeta : Bool;\r\n        /** right windows/command key is down */\r\n    var rmeta : Bool;\r\n        /** numlock is enabled */\r\n    var num : Bool;\r\n        /** capslock is enabled */\r\n    var caps : Bool;\r\n        /** mode key is down */\r\n    var mode : Bool;\r\n        /** left or right ctrl key is down */\r\n    var ctrl : Bool;\r\n        /** left or right shift key is down */\r\n    var shift : Bool;\r\n        /** left or right alt/option key is down */\r\n    var alt : Bool;\r\n        /** left or right windows/command key is down */\r\n    var meta : Bool;\r\n\r\n} //ModState\r\n\r\n\r\n//Conversion helpers for native <-> snow events\r\n\r\n@:enum abstract SystemEventType(Int) from Int to Int {\r\n\r\n        //snow core events\r\n        //from platform i.e :\r\n        //se_unknown, se_init, se_ready etc\r\n\r\n        /** An unknown system event */\r\n    var unknown                    = 0;\r\n        /** An internal system init event */\r\n    var init                       = 1;\r\n        /** An internal system ready event */\r\n    var ready                      = 2;\r\n        /** An internal system update event */\r\n    var update                     = 3;\r\n        /** An system shutdown event */\r\n    var shutdown                   = 4;\r\n        /** An system window event */\r\n    var window                     = 5;\r\n        /** An system input event */\r\n    var input                      = 6;\r\n\r\n        //snow application events\r\n\r\n        /** An system quit event. Initiated by user, can be cancelled/ignored */\r\n    var quit                       = 7;\r\n        /** An system terminating event, called by the OS (mobile specific) */\r\n    var app_terminating            = 8;\r\n        /** An system low memory event, clear memory if you can. Called by the OS (mobile specific) */\r\n    var app_lowmemory              = 9;\r\n        /** An event for just before the app enters the background, called by the OS (mobile specific) */\r\n    var app_willenterbackground    = 10;\r\n        /** An event for when the app enters the background, called by the OS (mobile specific) */\r\n    var app_didenterbackground     = 11;\r\n        /** An event for just before the app enters the foreground, called by the OS (mobile specific) */\r\n    var app_willenterforeground    = 12;\r\n        /** An event for when the app enters the foreground, called by the OS (mobile specific) */\r\n    var app_didenterforeground     = 13;\r\n        /** An event for when the a file watch notification occurs */\r\n    var file                       = 14;\r\n\r\n\r\n    inline function toString() {\r\n        return switch(this) {\r\n            case unknown:   'unknown';\r\n            case init:      'init';\r\n            case ready:     'ready';\r\n            case update:    'update';\r\n            case shutdown:  'shutdown';\r\n            case window:    'window';\r\n            case input:     'input';\r\n            case quit:      'quit';\r\n            case app_terminating:           'app_terminating';\r\n            case app_lowmemory:             'app_lowmemory';\r\n            case app_willenterbackground:   'app_willenterbackground';\r\n            case app_didenterbackground:    'app_didenterbackground';\r\n            case app_willenterforeground:   'app_willenterforeground';\r\n            case app_didenterforeground:    'app_didenterforeground';\r\n            case file:      'file';\r\n            case _:         '$this';\r\n        }\r\n    } //toString\r\n\r\n} //SystemEventType\r\n\r\n@:enum abstract WindowEventType(Int) from Int to Int {\r\n\r\n        //window events,\r\n        // from native :\r\n        // we_unknown, we_created, we_shown, we_hidden, we_exposed, we_moved, we_resized, we_size_changed, we_minimized, we_maximized, we_restored, we_enter, we_leave, we_focus_gained, we_focus_lost, we_close, we_destroy\r\n\r\n        /** An unknown window event */\r\n    var unknown          = 0;\r\n        /** A window is created */\r\n    var created          = 1;\r\n        /** A window is shown */\r\n    var shown            = 2;\r\n        /** A window is hidden */\r\n    var hidden           = 3;\r\n        /** A window is exposed */\r\n    var exposed          = 4;\r\n        /** A window is moved */\r\n    var moved            = 5;\r\n        /** A window is resized, by the user or code. */\r\n    var resized          = 6;\r\n        /** A window is resized, by the OS or internals. */\r\n    var size_changed     = 7;\r\n        /** A window is minimized */\r\n    var minimized        = 8;\r\n        /** A window is maximized */\r\n    var maximized        = 9;\r\n        /** A window is restored */\r\n    var restored         = 10;\r\n        /** A window is entered by a mouse */\r\n    var enter            = 11;\r\n        /** A window is left by a mouse */\r\n    var leave            = 12;\r\n        /** A window has gained focus */\r\n    var focus_gained     = 13;\r\n        /** A window has lost focus */\r\n    var focus_lost       = 14;\r\n        /** A window is being closed/hidden */\r\n    var close            = 15;\r\n        /** A window is being destroyed */\r\n    var destroy          = 16;\r\n\r\n    inline function toString() {\r\n        return switch(this) {\r\n            case unknown:       'unknown';\r\n            case created:       'created';\r\n            case shown:         'shown';\r\n            case hidden:        'hidden';\r\n            case exposed:       'exposed';\r\n            case moved:         'moved';\r\n            case resized:       'resized';\r\n            case size_changed:  'size_changed';\r\n            case minimized:     'minimized';\r\n            case maximized:     'maximized';\r\n            case restored:      'restored';\r\n            case enter:         'enter';\r\n            case leave:         'leave';\r\n            case focus_gained:  'focus_gained';\r\n            case focus_lost:    'focus_lost';\r\n            case close:         'close';\r\n            case destroy:       'destroy';\r\n            case _:             '$this';\r\n        }\r\n    } //toString\r\n\r\n} //WindowEvent\r\n\r\n@:enum abstract InputEventType(Int) from Int to Int {\r\n\r\n        //Input events\r\n        //from native :\r\n        //ie_unknown, ie_key, ie_mouse, ie_touch, ie_joystick, ie_controller\r\n\r\n        /** An unknown input event */\r\n    var unknown        = 0;\r\n        /** An keyboard input event */\r\n    var key            = 1;\r\n        /** An mouse input event */\r\n    var mouse          = 2;\r\n        /** An touch input event */\r\n    var touch          = 3;\r\n        /** An joystick input event. On mobile, accellerometer is a joystick (for now) */\r\n    var joystick       = 4;\r\n        /** An controller input event. Use these instead of joystick on desktop. */\r\n    var controller     = 5;\r\n\r\n\r\n    inline function toString() {\r\n        return switch(this) {\r\n            case unknown:       'unknown';\r\n            case key:           'key';\r\n            case mouse:         'mouse';\r\n            case touch:         'touch';\r\n            case joystick:      'joystick';\r\n            case controller:    'controller';\r\n            case _:             '$this';\r\n        }\r\n    } //toString\r\n\r\n} //InputEvent\r\n\r\n@:enum abstract FileEventType(Int) from Int to Int {\r\n\r\n        //File watch events\r\n        //from native :\r\n        //fe_unknown, fe_modify, fe_remove, fe_create, fe_drop\r\n\r\n        /** An unknown watch event */\r\n    var unknown    = 0;\r\n        /** An event for when the a file is modified */\r\n    var modify     = 1;\r\n        /** An event for when the a file is removed */\r\n    var remove     = 2;\r\n        /** An event for when the a file is created */\r\n    var create     = 3;\r\n        /** An event for when the a file is dropped on a window */\r\n    var drop       = 4;\r\n\r\n    inline function toString() {\r\n        return switch(this) {\r\n            case unknown:   'unknown';\r\n            case modify:    'modify';\r\n            case remove:    'remove';\r\n            case create:    'create';\r\n            case drop:      'drop';\r\n            case _:         '$this';\r\n        }\r\n    } //toString\r\n\r\n} //FileEvent\r\n\r\n\r\n#end\r\n","package tusk;\r\n\r\nimport haxe.ds.IntMap;\r\nimport haxe.Serializer;\r\nimport haxe.Unserializer;\r\n\r\n#if editor\r\nimport tusk.editor.EditorEvent;\r\n#end\r\n\r\n/**\r\n * Enum describing the changes that an entity undergoes\r\n */\r\nenum ChangeEvent {\r\n\tEntityAdded;\r\n\tEntityRemoved;\r\n\tComponentAdded(component:Component);\r\n\tComponentRemoved(component:Component);\r\n}\r\n\r\n/**\r\n * Container class for collections of components\r\n */\r\nclass Entity {\t\r\n\tprivate static var nextID:Int = 0;\r\n\r\n\tpublic var name(default, null):String = null;\r\n\r\n\t/**\r\n\t * The ID of this entity, automatically set when it is created\r\n\t */\r\n\tpublic var id(default, null):Int;\r\n\r\n\t/**\r\n\t * What scene this entity currently belongs to\r\n\t */\r\n\tpublic var scene:Scene = null;\r\n\r\n\t/**\r\n\t * All the components that currently belong to this entity\r\n\t */\r\n\tpublic var components:IntMap<Component>;\r\n\r\n    #if editor\r\n    public var componentsChanged:EditorEvent = new EditorEvent();\r\n    #end\r\n\r\n\tpublic function new(scene:Scene, ?name:String, ?components:Array<Component>) {\r\n\t\tthis.name = name;\r\n\t\tthis.components = new IntMap<Component>();\r\n\t\tif(components != null) {\r\n\t\t\tfor(component in components) {\r\n\t\t\t\tthis.components.set(component._tid, component);\r\n\t\t\t}\r\n\t\t}\r\n\t\tid = nextID;\r\n\t\tnextID++;\r\n\t\tthis.scene = scene;\r\n\t\tTusk.addEntity(this, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @param  tid The component type to check\r\n\t * @return     Whether the component type belongs to this entity\r\n\t */\r\n\tpublic function hasType(tid:Int):Bool {\r\n\t\treturn components.exists(tid);\r\n\t}\r\n\r\n\t/**\r\n\t * @param  tid The component to check\r\n\t * @return     Whether the type of component belongs to this entity\r\n\t */\r\n\tpublic function has(component:Component):Bool {\r\n\t\treturn hasType(component._tid);\r\n\t}\r\n\r\n\t/**\r\n\t * @param  tid A component type\r\n\t * @return     The instance of the component attached to this entity\r\n\t *             which has the proper type, or `null` if no such component\r\n\t *             exists.\r\n\t */\r\n\tpublic function get(tid:Int):Component {\r\n\t\treturn components.get(tid);\r\n\t}\r\n\r\n\t/**\r\n\t * @param  component A component to add to the entity. Only one component\r\n\t *                   of each type can be on an entity at once (an exception\r\n\t *                   will be thrown if this is violated).\r\n\t * @return           `this` (useful for chaining)\r\n\t */\r\n\tpublic function push(component:Component):Entity {\r\n\t\tvar componentName:String = Type.getClassName(Type.getClass(component));\r\n\t\tif(has(component)) {\r\n\t\t\tthrow new tusk.debug.Exception(\"Can't add component '\" + componentName + \"' because entity already has it!\");\r\n\t\t}\r\n\t\tcomponents.set(component._tid, component);\r\n\t\tTusk.entityChanged(this, ChangeEvent.ComponentAdded(component));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param  tid  A component type to remove from the entity\r\n\t * @return      `this` (useful for chaining)\r\n\t */\r\n\tpublic function removeType(tid:Int):Entity {\r\n\t\tif(components.remove(tid)) {\r\n\t\t\tvar component:Component = get(tid);\r\n\t\t\tTusk.entityChanged(this, ChangeEvent.ComponentRemoved(component));\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param  component A component to remove from the entity\r\n\t * @return           `this` (useful for chaining)\r\n\t */\r\n\tpublic function remove(component:Component):Entity {\r\n\t\treturn removeType(component._tid);\r\n\t}\r\n\r\n\t/**\r\n\t * Called by the haxe serializer when serializing.\r\n\t * @param the haxe serializer\r\n\t */\r\n\t@:keep\r\n\tfunction hxSerialize(s:Serializer) {\r\n\t\ts.serialize(components);\r\n\t}\r\n\r\n\t/**\r\n\t * Called by the haxe serializer when unserializing.\r\n\t * @param the haxe unserializer\r\n\t */\r\n\t@:keep\r\n\tfunction hxUnserialize(u:Unserializer) {\r\n\t\tcomponents = u.unserialize();\r\n\t}\r\n}","package tusk;\r\n\r\nimport tusk.debug.Exception;\r\nimport tusk.macros.ComponentIndexer;\r\n\r\n/**\r\n * The matcher class implements the low-level logic for determining if an entity matches a system\r\n */\r\nclass Matcher {\r\n\t// TODO: custom matcher callback\r\n\tprivate var includes:Array<Int> = new Array<Int>();\r\n\tprivate var excludes:Array<Int> = new Array<Int>();\r\n\tprivate var customMatcher:Entity->Bool = null;\r\n\r\n\tpublic function new() { }\r\n\t\r\n\t/**\r\n\t * Chainable function for including component requirements\r\n\t * @param  tid the tid of component to include\r\n\t * @return     `this`\r\n\t */\r\n\tpublic function include(tid:Int):Matcher\r\n\t{\r\n\t\tif(excludes.indexOf(tid) >= 0) {\r\n\t\t\tthrow new Exception(\"Can't add component '\" + tid + \"' because it is already in the excludes list!\");\r\n\t\t}\r\n\t\tif(includes.indexOf(tid) < 0) {\r\n\t\t\tincludes.push(tid);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Chainable function for excluding component requirements\r\n\t * @param  tid the tid of component to exclude\r\n\t * @return     `this`\r\n\t */\r\n\tpublic function exclude(tid:Int):Matcher {\r\n\t\tif(includes.indexOf(tid) >= 0) {\r\n\t\t\tthrow new Exception(\"Can't add component '\" + tid + \"' because it is already in the includes list!\");\r\n\t\t}\r\n\t\tif(excludes.indexOf(tid) < 0) {\r\n\t\t\texcludes.push(tid);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allow fine-grained matching functionality by supplying a matching callback function\r\n\t * @param  cb->Bool A callback which takes an entity and returns whether or not it\r\n\t *                  should be matched or not.\r\n\t * @return          `this`\r\n\t */\r\n\tpublic function custom(customMatcher:Entity->Bool):Matcher {\r\n\t\tthis.customMatcher = customMatcher;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determines whether or not a component is included in this matcher\r\n\t * @param  tid the tid of component to check\r\n\t * @return     whether or not the component is included\r\n\t */\r\n\tpublic function isIncluded(tid:Int):Bool {\r\n\t\treturn includes.indexOf(tid) > -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determines whether or not a component is excluded in this matcher\r\n\t * @param  tid the tid of component to check\r\n\t * @return     whether or not the component is excluded\r\n\t */\r\n\tpublic function isExcluded(tid:Int):Bool {\r\n\t\treturn excludes.indexOf(tid) > -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determines whether or not an entity matches this matcher\r\n\t * @param  entity the entity to investigate\r\n\t * @return        whether the entity matches or not\r\n\t */\r\n\tpublic function matchesEntity(entity:Entity):Bool {\r\n\t\tfor(include in includes) {\r\n\t\t\tif(!entity.hasType(include)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(exclude in excludes) {\r\n\t\t\tif(entity.hasType(exclude)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(customMatcher != null) {\r\n\t\t\treturn customMatcher(entity);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a filtered list of entities which match this matcher\r\n\t * @param  entities  the full list of entities to examine\r\n\t * @return           a filtered version of the given entities\r\n\t *                   which match this matcher.\r\n\t */\r\n\tpublic function matchEntities(entities:Array<Entity>):Array<Entity> {\r\n\t\treturn entities.filter(function(entity:Entity):Bool {\r\n\t\t\treturn matchesEntity(entity);\r\n\t\t});\r\n\t}\r\n}","package tusk;\r\n\r\nimport tusk.Game;\r\nimport tusk.debug.Log;\r\nimport tusk.events.*;\r\nimport tusk.modules.*;\r\n\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\n\r\n#if editor\r\nimport tusk.editor.Editor;\r\nimport tusk.editor.EditorEvent;\r\n#end\r\n\r\n#if snow\r\nimport snow.types.Types;\r\nimport snow.modules.opengl.GL;\r\nimport snow.App.AppFixedTimestep;\r\nimport snow.system.window.Window;\r\n#else\r\n@:dox(hide)\r\nclass Window {\r\n    public var title:String;\r\n    public var width:Int;\r\n    public var height:Int;\r\n    public var onrender:Window->Void;\r\n\r\n    public function new() {}\r\n}\r\n@:dox(hide)\r\nclass Snow {\r\n    public var window:Window;\r\n    public function new() {\r\n        window = new Window();\r\n    }\r\n}\r\n@:dox(hide)\r\nclass AppFixedTimestep {\r\n    public var app:Snow;\r\n    public var alpha:Float;\r\n    public function new() {\r\n        alpha = 0.5;\r\n        app = new Snow();\r\n    }\r\n}\r\n@:dox(hide)\r\ntypedef AppConfig = { window:Window }\r\ntypedef ModState = Dynamic;\r\n#end\r\n\r\n/**\r\n * The main application lives here.\r\n *\r\n * It should mostly be a one-way relationship from here to children of the `Game` class\r\n * (width the exception of hooking up events).\r\n *\r\n * Generally responsible for showing the splash screen and emitting events.\r\n */\r\nclass Tusk extends AppFixedTimestep {\r\n    public inline static var version:String = tusk.macros.Version.current();\r\n\r\n    public static var instance:Tusk = null;\r\n\r\n    /**\r\n     * Sound module\r\n     */\r\n    public static var sound:Sound;\r\n\r\n    /**\r\n     * The asset manager\r\n     */\r\n    public static var assets:Assets;\r\n\r\n    /**\r\n     * The current instance of the running game!\r\n     */\r\n    public static var game(default, null):Game;\r\n\r\n    /**\r\n     * The event router\r\n     */\r\n    public static var router:EventRouter;\r\n\r\n    @:noCompletion\r\n    public function new(_game:Game) {\r\n        super();\r\n        router = new EventRouter();\r\n        game = _game;\r\n        instance = this;\r\n    }\r\n\r\n    @:noCompletion\r\n    public static function routeEvent(type:EventType, handler:EventHandler) {\r\n        router.registerHandler(type, handler);\r\n    }\r\n\r\n    @:noCompletion\r\n    public static function unrouteEvent(type:EventType, handler:EventHandler) {\r\n        router.unregisterHandler(type, handler);\r\n    }\r\n\r\n    @:noCompletion\r\n    #if snow override #end function config(config:AppConfig):AppConfig {\r\n        config.window.title = game.title;\r\n        config.window.width = game.width;\r\n        config.window.height = game.height;\r\n        Log.trace(\"game config: \" + config);\r\n        return config;\r\n    }\r\n\r\n    /*private function initialize() {\r\n    }*/\r\n\r\n    #if editor\r\n    public static var scenesChanged:EditorEvent = new EditorEvent();\r\n    #end\r\n\r\n    @:noCompletion\r\n    #if snow override #end public function ready() {\r\n        Log.trace(\"snõw is ready\");\r\n\r\n        // initialize all modules\r\n        sound = new Sound();\r\n        assets = new Assets();\r\n\r\n        Log.trace(\"connecting rendering callback\");\r\n        app.window.onrender = render;\r\n\r\n        #if editor\r\n        Log.trace('setting up editor');\r\n        Editor.init();\r\n        #end\r\n\r\n        Log.trace(\"setting up game\");\r\n        game.setup();\r\n    }\r\n\r\n    @:noCompletion\r\n    #if snow override #end public function update(dt:Float) {\r\n        router.onEvent(EventType.Update, new UpdateEvent(dt));\r\n        #if editor\r\n        for(inspector in tusk.editor.Editor.inspectors) {\r\n            inspector.update();\r\n        }\r\n        #end\r\n    }\r\n\r\n    @:noCompletion\r\n    #if snow override #end public function onkeydown(keycode:Int, scancode:Int, repeat:Bool, mod:ModState, timestamp:Float, window_id:Int) {\r\n        router.onEvent(EventType.KeyDown, new KeyEvent(keycode, scancode, repeat, mod));\r\n    }\r\n\r\n    @:noCompletion\r\n    #if snow override #end public function onkeyup(keycode:Int, scancode:Int, repeat:Bool, mod:ModState, timestamp:Float, window_id:Int) {\r\n        router.onEvent(EventType.KeyUp, new KeyEvent(keycode, scancode, repeat, mod));\r\n    }\r\n\r\n    @:noCompletion\r\n    #if snow override #end public function onmousedown(x:Int, y:Int, button:Int, timestamp:Float, window_id:Int) {\r\n        router.onEvent(EventType.MouseDown, new MouseButtonEvent(x, y, button));\r\n    }\r\n\r\n    @:noCompletion\r\n    #if snow override #end public function onmouseup(x:Int, y:Int, button:Int, timestamp:Float, window_id:Int) {\r\n        router.onEvent(EventType.MouseUp, new MouseButtonEvent(x, y, button));\r\n    }\r\n\r\n    @:noCompletion\r\n    #if snow override #end public function onmousemove(x:Int, y:Int, xrel:Int, yrel:Int, timestamp:Float, window_id:Int) {\r\n        router.onEvent(EventType.MouseMove, new MouseMoveEvent(x, y, xrel, yrel));\r\n    }\r\n\r\n    private function render(window:Window) {\r\n        router.onEvent(EventType.Render, new RenderEvent(this.alpha));\r\n    }\r\n\r\n    public static function pushScene(scene:Scene):Promise<Scene> {\r\n        if(game.currentScenes.indexOf(scene) >= 0) {\r\n            throw new tusk.debug.Exception('Scene is already running!');\r\n        }\r\n        game.currentScenes.push(scene);\r\n\r\n        //scene.sceneDone = new Deferred<Scene>();\r\n        scene.___connectRoutes();\r\n        //router.onEvent(EventType.Load, new LoadEvent(scene));\r\n        scene.onLoad(new LoadEvent(scene));\r\n\r\n        #if editor\r\n        scenesChanged.trigger();\r\n        #end\r\n\r\n        return scene.sceneDone.promise();\r\n    }\r\n\r\n    public static function removeScene(scene:Scene) {\r\n        if(!game.currentScenes.remove(scene)) {\r\n            return;\r\n        }\r\n\r\n        router.onEvent(EventType.Destroy, new DestroyEvent(scene));\r\n        for(processor in scene.processors) {\r\n            processor.___disconnectRoutes();\r\n        }\r\n        scene.___disconnectRoutes();\r\n        for(entity in scene.entities) {\r\n            removeEntity(entity);\r\n        }\r\n        if(!scene.sceneDone.isResolved()) {\r\n            scene.sceneDone.resolve(scene);\r\n        }\r\n\r\n        #if editor\r\n        scenesChanged.trigger();\r\n        #end\r\n    }\r\n\r\n    /**\r\n     * Called in an entity constructor when it is created (to route the events to the processors)\r\n     * @param entity The entity that was just created\r\n     */\r\n    public static function addEntity(entity:Entity, scene:Scene) {\r\n        // update the scene\r\n        if(scene.entities.indexOf(entity) == -1) {\r\n            #if editor\r\n            scene.entitiesChanged.trigger();\r\n            entity.componentsChanged.trigger();\r\n            #end\r\n\r\n            Log.trace(\"Added entity to scene!\");\r\n        }\r\n\r\n        // update the processors\r\n        for(processor in scene.processors) {\r\n            if(processor.entities.indexOf(entity) == -1 && processor.matcher.matchesEntity(entity)) {\r\n                processor.entities.push(entity);\r\n                processor.onEntityChanged(entity, Entity.ChangeEvent.EntityAdded);\r\n                Log.trace(\"Added entity to processor '\" + Type.getClassName(Type.getClass(processor)) + \"'!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called whenever an entity changes (when its component-composition changes) (to route the events to the processors)\r\n     * @param  entity the changed entity\r\n     */\r\n    public static function entityChanged(entity:Entity, event:Entity.ChangeEvent) {\r\n        // update the processors\r\n        for(scene in game.currentScenes) {\r\n            for(processor in scene.processors) {\r\n                if(processor.entities.indexOf(entity) == -1 && processor.matcher.matchesEntity(entity)) {\r\n                    processor.entities.push(entity);\r\n                    processor.onEntityChanged(entity, event);\r\n                    Log.trace(\"Added entity to processor '\" + Type.getClassName(Type.getClass(processor)) + \"'!\");\r\n                }\r\n                else if(processor.entities.indexOf(entity) != -1 && !processor.matcher.matchesEntity(entity)) {\r\n                    processor.onEntityChanged(entity, event);\r\n                    processor.entities.remove(entity);\r\n                    Log.trace(\"Removed entity from processor '\" + Type.getClassName(Type.getClass(processor)) + \"'!\");\r\n                }\r\n            }\r\n        }\r\n        #if editor\r\n        entity.componentsChanged.trigger();\r\n        #end\r\n    }\r\n\r\n    /**\r\n     * Called whenever an entity is destroyed (to route the events to the processors)\r\n     * @param  entity the destroyed entity\r\n     */\r\n    public static function removeEntity(entity:Entity) {\r\n        // update the processors\r\n        for(scene in game.currentScenes) {\r\n            for(processor in scene.processors) {\r\n                if(processor.entities.remove(entity)) {\r\n                    processor.onEntityChanged(entity, Entity.ChangeEvent.EntityRemoved);\r\n                    Log.trace(\"Removed entity from processor '\" + Type.getClassName(Type.getClass(processor)) + \"'!\");\r\n                }\r\n            }\r\n\r\n            // update the game\r\n            if(scene.entities.remove(entity)) {\r\n                #if editor\r\n                scene.entitiesChanged.trigger();\r\n                entity.componentsChanged.trigger();\r\n                #end\r\n                Log.trace(\"Removed entity from scene!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a savegame string\r\n     * @return a string defining the current state of the game\r\n     */\r\n    public static function serialize():String {\r\n        Log.trace(\"Serializing game state...\");\r\n        var s = new haxe.Serializer();\r\n        // TODO: serialize the scenes too!\r\n        /*s.serialize(game.currentScene.processors);\r\n        s.serialize(game.currentScene.entities);*/\r\n        var result:String = s.toString();\r\n        Log.trace(\"Serialized state:\");\r\n        Log.trace(result);\r\n        return result;\r\n    }\r\n}\r\n","package tusk.debug;\r\n\r\nimport haxe.io.Path;\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\nimport haxe.EnumFlags;\r\n\r\n/**\r\n * Generally not used by user-facing code, this `enum` is for tracking\r\n * the type of log that is being written.\r\n */\r\nenum LogFunctions {\r\n\t/**\r\n\t * Show-stopping error\r\n\t */\r\n\tFatal;\r\n\r\n\t/**\r\n\t * Crashes / exceptions\r\n\t */\r\n\tError;\r\n\r\n\t/**\r\n\t * Incorrect behaviour but can continue\r\n\t */\r\n\tWarn;\r\n\r\n\t/**\r\n\t * Indicates correct behaviour\r\n\t */\r\n\tInfo;\r\n\r\n\t/**\r\n\t * Behind-the-scenes poking around\r\n\t */\r\n\tDebug;\r\n\r\n\t/**\r\n\t * Full object tracing for deep inspection\r\n\t */\r\n\tTrace;\r\n}\r\n\r\n/**\r\n * Macros and functions responsible for logging. To enable or disable specific logs, change\r\n * the compile-time definitions.\r\n * \r\n * The following definitions are valid and correspond to\r\n * the macros defined below:\r\n * <ul>\r\n * <li>`log_fatal`\r\n * <li>`log_error`\r\n * <li>`log_warning`\r\n * <li>`log_info`\r\n * <li>`debug`\r\n * <li>`log_trace`\r\n * </ul>\r\n */\r\nclass Log {\r\n\t/**\r\n\t * Replacement for `trace`, this will format the logs depending on the situation.\r\n\t * For example, on web, it will add appropriate colours to each log message in the console.\r\n\t * @param v    the message / object to log\r\n\t * @param func what type of message it is\r\n\t * @param pos  automatically passed by the compiler\r\n\t */\r\n\tpublic static function log(v:Dynamic, func:LogFunctions, ?pos:haxe.PosInfos):Void {\r\n\t\t#if web\r\n\t\t\tvar message = v.toString();\r\n\t\t\tswitch(func) {\r\n\t\t\t\tcase Fatal: {\r\n\t\t\t\t\tuntyped console.log('%cf.' + pos.fileName + ':' + pos.lineNumber + ': ' + message, 'font-weight: bold; font-size: 2em; color: white; background: #A84B38;');\r\n\t\t\t\t\tthrow new String('FATAL EXCEPTION: ' + pos.fileName + ':' + pos.lineNumber + ': ' + message);\r\n\t\t\t\t}\r\n\t\t\t\tcase Error: untyped console.log('%ce.' + pos.fileName + ':' + pos.lineNumber + ': ' + message, 'font-weight: bold; color: white; background: #A84B38;');\r\n\t\t\t\tcase Warn: untyped console.log('%cw.' + pos.fileName + ':' + pos.lineNumber + ': ' + message, 'color: white; background: #EA8220;');\r\n\t\t\t\tcase Info: untyped console.log('%ci.' + pos.fileName + ':' + pos.lineNumber + ': ' + message, 'color: blue;');\r\n\t\t\t\tcase Debug: untyped console.log('%cd.' + pos.fileName + ':' + pos.lineNumber + ': ' + message, 'color: #A84B38;');\r\n\t\t\t\tcase Trace: untyped console.log('%ct.' + pos.fileName + ':' + pos.lineNumber + ': ' + message, 'color: #009700;');\r\n\t\t\t\tdefault: untyped console.log('l.' + pos.fileName + ':' + pos.lineNumber + ': ' + message);\r\n\t\t\t}\r\n\t\t#else\r\n\t\t\ttrace(v, pos);\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Use for show-stopping errors\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function fatal(value:Dynamic):Expr {\r\n\t\t#if log_fatal\r\n\t\t\treturn macro @:pos(Context.currentPos()) tusk.debug.Log.log($value, tusk.debug.Log.LogFunctions.Fatal);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Use for crashes and exceptions, and any other errors that aren't\r\n\t * necessarily show-stopping but require intervention.\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function error(value:Dynamic):Expr {\r\n\t\t#if log_error\r\n\t\t\treturn macro @:pos(Context.currentPos()) tusk.debug.Log.log($value, tusk.debug.Log.LogFunctions.Error);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Use for indicating incorrect behaviour (but execution can be continued).\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function warning(value:Dynamic):Expr {\r\n\t\t#if log_warning\r\n\t\t\treturn macro @:pos(Context.currentPos()) tusk.debug.Log.log($value, tusk.debug.Log.LogFunctions.Warn);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Use to indicate normal behaviour\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function info(value:Dynamic):Expr {\r\n\t\t#if log_info\r\n\t\t\treturn macro @:pos(Context.currentPos()) tusk.debug.Log.log($value, tusk.debug.Log.LogFunctions.Info);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Use for logging behind-the-scenes information.\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function debug(value:Dynamic):Expr {\r\n\t\t#if debug\r\n\t\t\treturn macro @:pos(Context.currentPos()) tusk.debug.Log.log($value, tusk.debug.Log.LogFunctions.Debug);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Used when delving deep into what is going on\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function trace(value:Dynamic):Expr {\r\n\t\t#if log_trace\r\n\t\t\treturn macro @:pos(Context.currentPos()) tusk.debug.Log.log($value, tusk.debug.Log.LogFunctions.Trace);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n}","package tusk.debug;\r\n\r\nimport haxe.CallStack;\r\n\r\n/**\r\n * Any and all exceptions thrown by Tusk will be of this type!\r\n */\r\nclass Exception {\r\n\t/**\r\n\t * Set to `true` to show the (post-target) stack trace\r\n\t * in the output message.\r\n\t */\r\n\tpublic static var showStackTrace:Bool = false;\r\n\r\n\t/**\r\n\t * The message given when the exception was thrown\r\n\t */\r\n\tpublic var message(default, null):String;\r\n\r\n\t/**\r\n\t * The type of exception that was thrown\r\n\t */\r\n\tpublic var type(default, null):ExceptionType;\r\n\r\n\t/**\r\n\t * Whether the exception is fatal or not\r\n\t */\r\n\tpublic var fatal(default, null):Bool;\r\n\r\n\t/**\r\n\t * The callstack at the time the exception was thrown\r\n\t */\r\n\tpublic var stack(default, null):Array<StackItem>;\r\n\r\n\t/**\r\n\t * The Haxe AST position given when the exception was thrown\r\n\t */\r\n\tpublic var pos(default, null):haxe.PosInfos;\r\n\r\n\t/**\r\n\t * Throw a new exception\r\n\t * @param  message A message to attach to the exception\r\n\t */\r\n\tpublic function new(message:String = '', fatal:Bool = false, ?type:ExceptionType, ?pos:haxe.PosInfos) {\r\n\t\tthis.message = message;\r\n\t\tthis.type = type == null ? ExceptionType.Unknown : type;\r\n\t\tthis.fatal = fatal;\r\n\t\tthis.stack = CallStack.callStack();\r\n\t\tthis.pos = pos;\r\n\t}\r\n\r\n\tprivate function translateStackItem(item:StackItem):String {\r\n\t\treturn switch(item) {\r\n\t\t\tcase CFunction: \"in function\";\r\n\t\t\tcase Module(m): \"in module \" + m;\r\n\t\t\tcase FilePos(s, file, line): \"in file '\" + file + \"' at line \" + line + (s == null ? \"\" : (\": \" + translateStackItem(s)));\r\n\t\t\tcase Method(className, method): \"in class '\" + className + \"' in method '\" + method + \"'\";\r\n\t\t\tcase LocalFunction(v): \"in local function (\" + v + \")\";\r\n\t\t\tdefault: \"?\";\r\n\t\t};\r\n\t}\r\n\r\n\tprivate function translateExceptionType(type:ExceptionType):String {\r\n\t\treturn switch(type) {\r\n\t\t\tcase Assert: \"assert\";\r\n\t\t\tcase AssetNotFound: \"asset not found\";\r\n\t\t\tcase FileNotFound: \"file not found\";\r\n\t\t\tcase InvalidAssetType: \"invalid asset type\";\r\n\t\t\tcase NotImplementedYet: \"not implemented yet\";\r\n\t\t\tdefault: \"unknown\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return The exception in a String in human-readable form.\r\n\t */\r\n\tpublic function toString():String {\r\n\t\tvar stackString:Array<String> = stack.map(translateStackItem);\r\n\t\tvar posInfo:String = pos == null ? \"\" : (\" in class: \" + pos.className + \" (\" + pos.fileName + \") in function \" + pos.methodName + \"() at line \" + pos.lineNumber);\r\n\t\treturn (fatal ? \"fatal \" : \"\") + translateExceptionType(type) + \" exception\" + posInfo + \": \" + message + (showStackTrace ? (\"\\nstack trace:\\n  \" + stackString.join(\"\\n  \")) : '');\r\n\t}\r\n}","package tusk.defaults;\r\n\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\nimport tusk.resources.Font;\r\nimport tusk.resources.Texture;\r\n\r\nclass Fonts {\r\n\tpublic static function loadSubatomic_Screen():Promise<Font> {\r\n\t\tif(Tusk.assets.isLoaded(\"Subatomic_Screen.fnt\")) {\r\n\t\t\tvar d:Deferred<Font> = new Deferred<Font>();\r\n\t\t\td.resolve(Tusk.assets.getFont(\"Subatomic_Screen.fnt\"));\r\n\t\t\treturn d.promise();\r\n\t\t}\r\n        return Tusk.assets.loadTexture('Subatomic_Screen.png', haxe.Resource.getBytes('Subatomic_Screen.png')).pipe(function(texture:Texture) {\r\n            return Tusk.assets.loadFont('Subatomic_Screen.fnt', haxe.Resource.getString('Subatomic_Screen.fnt'), texture);\r\n        });\r\n\t}\r\n}","package tusk.defaults;\r\n\r\nimport glm.Mat4;\r\n\r\nimport tusk.resources.Shader;\r\nimport tusk.resources.Material;\r\n\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\nimport snow.modules.opengl.GL.GLBuffer;\r\n#end\r\n\r\nclass Materials {\r\n\tprivate function new() {}\r\n\r\n\tpublic static function loadUnlitColoured():Promise<Material> {\r\n\t\t#if snow\r\n\t\t/*if(Tusk.assets.isLoaded(\"unlit.coloured\")) {\r\n\t\t\tvar d:Deferred<Material> = new Deferred<Material>();\r\n\t\t\td.resolve(Tusk.assets.getMaterial(\"unlit.coloured\"));\r\n\t\t\treturn d.promise();\r\n\t\t}*/\r\n\r\n\t\tvar shader:Shader = new Shader(\"unlit.coloured\",\r\n\t\t\thaxe.Resource.getString(\"unlit.coloured.vert\"),\r\n\t\t\thaxe.Resource.getString(\"unlit.coloured.frag\"));\r\n\t\tvar mat = new Material(\"unlit.coloured\", shader);\r\n\r\n\t\t// setup the attribute flags\r\n\t\tmat.attributeFlags.set(AttributeTypes.Pos3);\r\n\t\tmat.attributeFlags.set(AttributeTypes.Colour4);\r\n\r\n\t\tGL.useProgram(mat.shader.program);\r\n\t\tvar posLocation:Int = mat.shader.getAttributeLocation(\"position\");\r\n\t\tvar colourLocation:Int = mat.shader.getAttributeLocation(\"colour\");\r\n\r\n\t\tmat.onRender = function(setupUniforms:SetupRenderUniformsCallback, vertexBuffer:GLBuffer, vertexCount:Int) {\r\n\t\t\tGL.useProgram(mat.shader.program);\r\n\t\t\tGL.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\r\n\t\t\tsetupUniforms(mat);\r\n\r\n\t\t\tGL.enableVertexAttribArray(posLocation);\r\n\t\t\tGL.enableVertexAttribArray(colourLocation);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer);\r\n\r\n\t\t\tGL.vertexAttribPointer(posLocation, 3, GL.FLOAT, false, 7*4, 0);\r\n\t\t\tGL.vertexAttribPointer(colourLocation, 4, GL.FLOAT, false, 7*4, 3*4);\r\n\r\n\t\t\tGL.drawArrays(GL.TRIANGLES, 0, vertexCount);\r\n\r\n\t\t\tGL.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\r\n\t\t\tGL.disableVertexAttribArray(colourLocation);\r\n\t\t\tGL.disableVertexAttribArray(posLocation);\r\n\t\t\tGL.useProgram(null);\r\n\t\t}\r\n\r\n\t\treturn Tusk.assets.loadMaterial(\"unlit.coloured\", mat);\r\n\t\t#else\r\n\t\treturn null;\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic static function loadUnlitTextured():Promise<Material> {\r\n\t\t#if snow\r\n\t\t/*if(Tusk.assets.isLoaded(\"unlit.textured\")) {\r\n\t\t\tvar d:Deferred<Material> = new Deferred<Material>();\r\n\t\t\td.resolve(Tusk.assets.getMaterial(\"unlit.textured\"));\r\n\t\t\treturn d.promise();\r\n\t\t}*/\r\n\r\n\t\tvar shader:Shader = new Shader(\"unlit.textured\",\r\n\t\t\thaxe.Resource.getString(\"unlit.textured.vert\"),\r\n\t\t\thaxe.Resource.getString(\"unlit.textured.frag\"));\r\n\t\tvar mat = new Material(\"unlit.textured\", shader);\r\n\r\n\t\t// setup the attribute flags\r\n\t\tmat.attributeFlags.set(AttributeTypes.Pos3);\r\n\t\tmat.attributeFlags.set(AttributeTypes.UV);\r\n\r\n\t\tGL.useProgram(mat.shader.program);\r\n\t\tvar posLocation:Int = mat.shader.getAttributeLocation(\"position\");\r\n\t\tvar uvLocation:Int = mat.shader.getAttributeLocation(\"uv\");\r\n\r\n\t\tmat.onRender = function(setupUniforms:SetupRenderUniformsCallback, vertexBuffer:GLBuffer, vertexCount:Int) {\r\n\t\t\tGL.useProgram(mat.shader.program);\r\n\t\t\tGL.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\r\n\t\t\tif(mat.textures != null && mat.textures.length > 0) {\r\n\t\t\t\tGL.activeTexture(GL.TEXTURE0);\r\n\t\t\t\tGL.bindTexture(GL.TEXTURE_2D, mat.textures[0].texture);\r\n\t\t\t}\r\n\r\n\t\t\tsetupUniforms(mat);\r\n\r\n\t\t\tGL.enableVertexAttribArray(posLocation);\r\n\t\t\tGL.enableVertexAttribArray(uvLocation);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer);\r\n\r\n\t\t\tGL.vertexAttribPointer(posLocation, 3, GL.FLOAT, false, 5*4, 0);\r\n\t\t\tGL.vertexAttribPointer(uvLocation, 2, GL.FLOAT, false, 5*4, 3*4);\r\n\r\n\t\t\tGL.drawArrays(GL.TRIANGLES, 0, vertexCount);\r\n\r\n\t\t\tGL.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\r\n\t\t\tGL.disableVertexAttribArray(posLocation);\r\n\t\t\tGL.disableVertexAttribArray(uvLocation);\r\n\t\t\tGL.useProgram(null);\r\n\t\t}\r\n\r\n\t\treturn Tusk.assets.loadMaterial(\"unlit.textured\", mat);\r\n\t\t#else\r\n\t\treturn null;\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic static function loadEffectFadeout():Promise<Material> {\r\n\t\t#if snow\r\n\t\t/*if(Tusk.assets.isLoaded(\"effect.fadeout\")) {\r\n\t\t\tvar d:Deferred<Material> = new Deferred<Material>();\r\n\t\t\td.resolve(Tusk.assets.getMaterial(\"effect.fadeout\"));\r\n\t\t\treturn d.promise();\r\n\t\t}*/\r\n\r\n\t\tvar shader:Shader = new Shader(\"effect.fadeout\",\r\n\t\t\thaxe.Resource.getString(\"unlit.textured.vert\"),\r\n\t\t\thaxe.Resource.getString(\"effect.fadeout.frag\"));\r\n\t\tvar mat = new Material(\"effect.fadeout\", shader);\r\n\r\n\t\t// setup the attribute flags\r\n\t\tmat.attributeFlags.set(AttributeTypes.Pos3);\r\n\t\tmat.attributeFlags.set(AttributeTypes.UV);\r\n\r\n\t\tGL.useProgram(mat.shader.program);\r\n\t\tvar posLocation:Int = mat.shader.getAttributeLocation(\"position\");\r\n\r\n\t\tmat.onRender = function(setupUniforms:SetupRenderUniformsCallback, vertexBuffer:GLBuffer, vertexCount:Int) {\r\n\t\t\tGL.useProgram(mat.shader.program);\r\n\t\t\tGL.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\r\n\t\t\tsetupUniforms(mat);\r\n\r\n\t\t\tGL.enableVertexAttribArray(posLocation);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer);\r\n\r\n\t\t\tGL.vertexAttribPointer(posLocation, 3, GL.FLOAT, false, 5*4, 0);\r\n\r\n\t\t\tGL.drawArrays(GL.TRIANGLES, 0, vertexCount);\r\n\r\n\t\t\tGL.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\r\n\t\t\tGL.disableVertexAttribArray(posLocation);\r\n\t\t\tGL.useProgram(null);\r\n\t\t}\r\n\r\n\t\treturn Tusk.assets.loadMaterial(\"effect.fadeout\", mat);\r\n\t\t#else\r\n\t\treturn null;\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic static function loadEffectCircleOut():Promise<Material> {\r\n\t\t#if snow\r\n\t\t/*if(Tusk.assets.isLoaded(\"effect.circleout\")) {\r\n\t\t\tvar d:Deferred<Material> = new Deferred<Material>();\r\n\t\t\td.resolve(Tusk.assets.getMaterial(\"effect.circleout\"));\r\n\t\t\treturn d.promise();\r\n\t\t}*/\r\n\r\n\t\tvar shader:Shader = new Shader(\"effect.circleout\",\r\n\t\t\thaxe.Resource.getString(\"unlit.textured.vert\"),\r\n\t\t\thaxe.Resource.getString(\"effect.circleout.frag\"));\r\n\t\tvar mat = new Material(\"effect.circleout\", shader);\r\n\r\n\t\t// setup the attribute flags\r\n\t\tmat.attributeFlags.set(AttributeTypes.Pos3);\r\n\t\tmat.attributeFlags.set(AttributeTypes.UV);\r\n\r\n\t\tGL.useProgram(mat.shader.program);\r\n\t\tvar posLocation:Int = mat.shader.getAttributeLocation(\"position\");\r\n\r\n\t\t//mat.onRender = function(projectionMatrix:Mat4, viewMatrix:Mat4, modelMatrix:Mat4, vertexBuffer:GLBuffer, vertexCount:Int) {\r\n\t\tmat.onRender = function(setupUniforms:SetupRenderUniformsCallback, vertexBuffer:GLBuffer, vertexCount:Int) {\r\n\t\t\tGL.useProgram(mat.shader.program);\r\n\t\t\tGL.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\r\n\t\t\tsetupUniforms(mat);\r\n\r\n\t\t\tGL.enableVertexAttribArray(posLocation);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer);\r\n\r\n\t\t\tGL.vertexAttribPointer(posLocation, 3, GL.FLOAT, false, 5*4, 0);\r\n\r\n\t\t\tGL.drawArrays(GL.TRIANGLES, 0, vertexCount);\r\n\r\n\t\t\tGL.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\r\n\t\t\tGL.disableVertexAttribArray(posLocation);\r\n\t\t\tGL.useProgram(null);\r\n\t\t}\r\n\r\n\t\treturn Tusk.assets.loadMaterial(\"effect.circleout\", mat);\r\n\t\t#else\r\n\t\treturn null;\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic static function loadTextBasic():Promise<Material> {\r\n\t\t#if snow\r\n\t\t/*if(Tusk.assets.isLoaded(\"text.basic\")) {\r\n\t\t\tvar d:Deferred<Material> = new Deferred<Material>();\r\n\t\t\td.resolve(Tusk.assets.getMaterial(\"text.basic\"));\r\n\t\t\treturn d.promise();\r\n\t\t}*/\r\n\r\n\t\tvar shader:Shader = new Shader(\"text.basic\",\r\n\t\t\thaxe.Resource.getString(\"unlit.textured.coloured.vert\"),\r\n\t\t\thaxe.Resource.getString(\"unlit.textured.coloured.frag\"));\r\n\t\tvar mat = new Material(\"text.basic\", shader);\r\n\r\n\t\t// setup the attribute flags\r\n\t\tmat.attributeFlags.set(AttributeTypes.Pos3);\r\n\t\tmat.attributeFlags.set(AttributeTypes.UV);\r\n\r\n\t\tGL.useProgram(mat.shader.program);\r\n\t\tvar posLocation:Int = mat.shader.getAttributeLocation(\"position\");\r\n\t\tvar uvLocation:Int = mat.shader.getAttributeLocation(\"uv\");\r\n\r\n\t\tmat.onRender = function(setupUniforms:SetupRenderUniformsCallback, vertexBuffer:GLBuffer, vertexCount:Int) {\r\n\t\t\tGL.useProgram(mat.shader.program);\r\n\t\t\tGL.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\r\n\t\t\tif(mat.textures != null && mat.textures.length > 0) {\r\n\t\t\t\tGL.activeTexture(GL.TEXTURE0);\r\n\t\t\t\tGL.bindTexture(GL.TEXTURE_2D, mat.textures[0].texture);\r\n\t\t\t}\r\n\r\n\t\t\tsetupUniforms(mat);\r\n\r\n\t\t\tGL.enableVertexAttribArray(posLocation);\r\n\t\t\tGL.enableVertexAttribArray(uvLocation);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer);\r\n\r\n\t\t\tGL.vertexAttribPointer(posLocation, 3, GL.FLOAT, false, 5*4, 0);\r\n\t\t\tGL.vertexAttribPointer(uvLocation, 2, GL.FLOAT, false, 5*4, 3*4);\r\n\r\n\t\t\tGL.drawArrays(GL.TRIANGLES, 0, vertexCount);\r\n\r\n\t\t\tGL.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\r\n\t\t\tGL.disableVertexAttribArray(uvLocation);\r\n\t\t\tGL.disableVertexAttribArray(posLocation);\r\n\t\t\tGL.useProgram(null);\r\n\t\t}\r\n\r\n\t\treturn Tusk.assets.loadMaterial(\"text.basic\", mat);\r\n\t\t#else\r\n\t\treturn null;\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic static function loadParticlesUntextured():Promise<Material> {\r\n\t\t#if snow\r\n\t\t/*if(Tusk.assets.isLoaded(\"particles.untextured\")) {\r\n\t\t\tvar d:Deferred<Material> = new Deferred<Material>();\r\n\t\t\td.resolve(Tusk.assets.getMaterial(\"particles.untextured\"));\r\n\t\t\treturn d.promise();\r\n\t\t}*/\r\n\r\n\t\tvar shader:Shader = new Shader(\"particles.untextured\",\r\n\t\t\thaxe.Resource.getString(\"particles.untextured.vert\"),\r\n\t\t\thaxe.Resource.getString(\"particles.untextured.frag\"));\r\n\t\tvar mat = new Material(\"particles.untextured\", shader);\r\n\r\n\t\t// setup the attribute flags\r\n\t\tmat.attributeFlags.set(AttributeTypes.Pos3);\r\n\t\tmat.attributeFlags.set(AttributeTypes.Colour4);\r\n\r\n\t\tGL.useProgram(mat.shader.program);\r\n\t\tvar posLocation:Int = mat.shader.getAttributeLocation(\"position\");\r\n\t\tvar colourLocation:Int = mat.shader.getAttributeLocation(\"colour\");\r\n\t\tvar sizeLocation:Int = mat.shader.getAttributeLocation(\"pointSize\");\r\n\r\n\t\tmat.onRender = function(setupUniforms:SetupRenderUniformsCallback, vertexBuffer:GLBuffer, vertexCount:Int) {\r\n\t\t\tGL.useProgram(mat.shader.program);\r\n\t\t\tGL.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\r\n\t\t\tsetupUniforms(mat);\r\n\r\n\t\t\tGL.enableVertexAttribArray(posLocation);\r\n\t\t\tGL.enableVertexAttribArray(colourLocation);\r\n\t\t\tGL.enableVertexAttribArray(sizeLocation);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer);\r\n\r\n\t\t\tGL.vertexAttribPointer(posLocation, 3, GL.FLOAT, false, 8*4, 0);\r\n\t\t\tGL.vertexAttribPointer(colourLocation, 4, GL.FLOAT, false, 8*4, 3*4);\r\n\t\t\tGL.vertexAttribPointer(sizeLocation, 1, GL.FLOAT, false, 8*4, 7*4);\r\n\r\n\t\t\tGL.drawArrays(GL.POINTS, 0, vertexCount);\r\n\r\n\t\t\t//GL.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\r\n\t\t\tGL.disableVertexAttribArray(sizeLocation);\r\n\t\t\tGL.disableVertexAttribArray(colourLocation);\r\n\t\t\tGL.disableVertexAttribArray(posLocation);\r\n\t\t\tGL.useProgram(null);\r\n\t\t}\r\n\r\n\t\treturn Tusk.assets.loadMaterial(\"particles.untextured\", mat);\r\n\t\t#else\r\n\t\treturn null;\r\n\t\t#end\r\n\t}\r\n}","package tusk.defaults;\r\n\r\nimport tusk.resources.Mesh;\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\n\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\n\r\nclass Primitives {\r\n\tprivate function new(){}\r\n\r\n\tpublic static function loadTextMesh():Promise<Mesh> {\r\n\t\tif(Tusk.assets.isLoaded(\"text\")) {\r\n\t\t\tvar d:Deferred<Mesh> = new Deferred<Mesh>();\r\n\t\t\td.resolve(Tusk.assets.getMesh(\"text\"));\r\n\t\t\treturn d.promise();\r\n\t\t}\r\n\r\n\t\tvar m:Mesh = new Mesh(\"text\");\r\n\t\tm.vertices = new Array<Vec3>();\r\n\t\tm.uvs = new Array<Vec2>();\r\n\t\treturn Tusk.assets.loadMesh(\"text\", m);\r\n\t}\r\n\r\n\tpublic static function loadQuad(unitSize:Float=1.0):Promise<Mesh> {\r\n\t\tif(Tusk.assets.isLoaded(\"quad\")) {\r\n\t\t\tvar d:Deferred<Mesh> = new Deferred<Mesh>();\r\n\t\t\td.resolve(Tusk.assets.getMesh(\"quad\"));\r\n\t\t\treturn d.promise();\r\n\t\t}\r\n\r\n\t\tvar m:Mesh = new Mesh(\"quad\");\r\n\r\n\t\tm.vertices = new Array<Vec3>();\r\n\t\tm.vertices.push(new Vec3(-0.5 * unitSize, -0.5 * unitSize));\r\n\t\tm.vertices.push(new Vec3( 0.5 * unitSize, -0.5 * unitSize));\r\n\t\tm.vertices.push(new Vec3( 0.5 * unitSize,  0.5 * unitSize));\r\n\r\n\t\tm.vertices.push(new Vec3( 0.5 * unitSize,  0.5 * unitSize));\r\n\t\tm.vertices.push(new Vec3(-0.5 * unitSize,  0.5 * unitSize));\r\n\t\tm.vertices.push(new Vec3(-0.5 * unitSize, -0.5 * unitSize));\r\n\r\n\t\tm.uvs = new Array<Vec2>();\r\n\t\tm.uvs.push(new Vec2(0.0, 1.0));\r\n\t\tm.uvs.push(new Vec2(1.0, 1.0));\r\n\t\tm.uvs.push(new Vec2(1.0, 0.0));\r\n\r\n\t\tm.uvs.push(new Vec2(1.0, 0.0));\r\n\t\tm.uvs.push(new Vec2(0.0, 0.0));\r\n\t\tm.uvs.push(new Vec2(0.0, 1.0));\r\n\r\n\t\treturn Tusk.assets.loadMesh(\"quad\", m);\r\n\t}\r\n}","package tusk.defaults.scenes;\r\n\r\nimport tusk.debug.Log;\r\n\r\nimport promhx.Promise;\r\nimport promhx.Stream;\r\n\r\nimport tusk.lib.comp.Camera2DComponent;\r\nimport tusk.lib.comp.CircleEffectComponent;\r\nimport tusk.lib.comp.MaterialComponent;\r\nimport tusk.lib.comp.MeshComponent;\r\nimport tusk.lib.comp.SoundComponent;\r\nimport tusk.lib.comp.SplashScreen_ShakeComponent;\r\nimport tusk.lib.comp.TextComponent;\r\nimport tusk.lib.comp.TimedPromiseComponent;\r\nimport tusk.lib.comp.TransformComponent;\r\nimport tusk.lib.comp.ParticleSystemComponent;\r\nimport tusk.lib.proc.Camera2DProcessor;\r\nimport tusk.lib.proc.CircleEffectRendererProcessor;\r\nimport tusk.lib.proc.MaterialProcessor;\r\nimport tusk.lib.proc.MeshProcessor;\r\nimport tusk.lib.proc.Renderer2DProcessor;\r\nimport tusk.lib.proc.SplashScreen_RoarShakeProcessor;\r\nimport tusk.lib.proc.TextProcessor;\r\nimport tusk.lib.proc.TimedPromiseProcessor;\r\nimport tusk.lib.proc.TransformProcessor;\r\nimport tusk.lib.proc.ParticleSystemProcessor;\r\n\r\nimport tusk.resources.Mesh;\r\nimport tusk.resources.Material;\r\nimport tusk.resources.Font;\r\nimport tusk.resources.Texture;\r\nimport tusk.resources.Sound;\r\n\r\nimport tusk.events.LoadEvent;\r\n\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\nimport glm.Vec4;\r\nimport glm.Quat;\r\n\r\nclass SplashScreen extends Scene {\r\n\tpublic function new() { super(\"Tusk Splash Screen\"); }\r\n\r\n\toverride public function onLoad(event:LoadEvent) {\r\n\t\tif(event.scene != this) return;\r\n\t\tLog.info(\"Loading splash screen..\");\r\n\r\n\t\t// load the resources\r\n\t\tPromise.when(\r\n\t\t\ttusk.defaults.Primitives.loadQuad(),\r\n\t\t\ttusk.defaults.Primitives.loadTextMesh(),\r\n\t\t\ttusk.defaults.Materials.loadUnlitTextured(),\r\n\t\t\ttusk.defaults.Fonts.loadSubatomic_Screen(),\r\n\t\t\ttusk.defaults.Materials.loadTextBasic(),\r\n\t\t\tTusk.assets.loadTexture('blazingmammothgames.png', haxe.Resource.getBytes('blazingmammothgames.png')),\r\n\t\t\tTusk.assets.loadSound('assets/sounds/blazingmammothgames.ogg'),\r\n\t\t\ttusk.defaults.Materials.loadEffectCircleOut(),\r\n\t\t\ttusk.defaults.Materials.loadParticlesUntextured()\r\n\t\t).then(function(quad:Mesh, textMesh:Mesh, mat:Material, font:Font, fontMat:Material, logo:Texture, roar:Sound, circleOutMat:Material, particlesMat:Material) {\r\n\t\t\t// set the material's texture\r\n\t\t\tmat.textures = new Array<Texture>();\r\n\t\t\tmat.textures.push(logo);\r\n\t\t\tfontMat.textures = new Array<Texture>();\r\n\t\t\tfontMat.textures.push(font.texture);\r\n\r\n\t\t\t// load processors\r\n\t\t\tthis.useProcessor(new TimedPromiseProcessor());\r\n\t\t\tthis.useProcessor(new SplashScreen_RoarShakeProcessor());\r\n\t\t\tthis.useProcessor(new tusk.lib.proc.SoundProcessor());\r\n\t\t\tthis.useProcessor(new MaterialProcessor());\r\n\t\t\tthis.useProcessor(new Camera2DProcessor());\r\n\t\t\tthis.useProcessor(new TransformProcessor());\r\n\t\t\tthis.useProcessor(new TextProcessor());\r\n\t\t\tthis.useProcessor(new MeshProcessor());\r\n\t\t\tthis.useProcessor(new Renderer2DProcessor(new Vec4(0.25, 0.25, 0.25, 1.0)));\r\n\t\t\tthis.useProcessor(new ParticleSystemProcessor(new Vec4(0, 0, 0, 1), false));\r\n\t\t\tthis.useProcessor(new CircleEffectRendererProcessor());\r\n\r\n\t\t\t// create the camera\r\n\t\t\tvar w:Float = Tusk.instance.app.window.width;\r\n\t\t\tvar h:Float = Tusk.instance.app.window.height;\r\n\t\t\tentities.push(new Entity(this, 'Camera', [\r\n\t\t\t\tnew TransformComponent(),\r\n\t\t\t\tnew Camera2DComponent(new Vec2(w, h) / -2.0, new Vec2(w, h) / 2.0, -100, 100)\r\n\t\t\t]));\r\n\r\n\t\t\t// create the logo\r\n\t\t\tvar logoEnt:Entity = new Entity(this, 'Logo', [\r\n\t\t\t\tnew TransformComponent(new Vec3(), Quat.identity(), new Vec3(256, 256, 256)),\r\n\t\t\t\tnew MeshComponent(quad.path),\r\n\t\t\t\tnew MaterialComponent(mat.path)\r\n\t\t\t]);\r\n\t\t\tentities.push(logoEnt);\r\n\r\n\t\t\t// create the text\r\n\t\t\tentities.push(new Entity(this, 'Logo Text', [\r\n\t\t\t\tnew TransformComponent(new Vec3(0, -96, 0.05), Quat.identity(), new Vec3(3, 3, 3)),\r\n\t\t\t\tnew MeshComponent(textMesh.path),\r\n\t\t\t\tnew MaterialComponent(fontMat.path),\r\n\t\t\t\tnew TextComponent(font, 'Blazing Mammoth Games', TextAlign.Centre,\r\n\t\t\t\t\tnew Vec4(1, 1, 1, 1))\r\n\t\t\t]));\r\n\r\n\t\t\t// create the snow!\r\n\t\t\tvar psc:ParticleSystemComponent = new ParticleSystemComponent(1000, 10);\r\n\t\t\tpsc.customUpdater = function(particle:Particle, pc:ParticleSystemComponent, dt:Float) {\r\n\t\t\t\t// accelerate it due to gravity\r\n\t\t\t\tparticle.vel.x = Math.sin(2 * Math.PI * particle.t * 0.2 + (4 * Math.PI * particle.seed)) * 32;\r\n\t\t\t\tparticle.vel.y = -40;\r\n\t\t\t\tparticle.vel.z = 0;\r\n\r\n\t\t\t\t// move the particle along\r\n\t\t\t\tparticle.lastPos.set(particle.pos.x, particle.pos.y, particle.pos.z);\r\n\t\t\t\tparticle.pos.x += particle.vel.x * dt;\r\n\t\t\t\tparticle.pos.y += particle.vel.y * dt;\r\n\t\t\t\tparticle.pos.z += particle.vel.z * dt;\r\n\t\t\t}\r\n\t\t\tentities.push(new Entity(this, 'Particle System', [\r\n\t\t\t\tnew TransformComponent(new Vec3(0, Tusk.instance.app.window.height / 2, 0), Quat.identity(), new Vec3(2, 2, 2)),\r\n\t\t\t\tpsc,\r\n\t\t\t\tnew MaterialComponent(particlesMat.path)\r\n\t\t\t]));\r\n\r\n\t\t\t// create the circle effect\r\n\t\t\tvar cec:CircleEffectComponent = new CircleEffectComponent(true);\r\n\t\t\tentities.push(new Entity(this, 'Circle Effect', [\r\n\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0.1), Quat.identity(), new Vec3(1024, 1024, 1024)),\r\n\t\t\t\tnew MeshComponent(quad.path),\r\n\t\t\t\tnew MaterialComponent(circleOutMat.path),\r\n\t\t\t\tcec\r\n\t\t\t]));\r\n\t\t\tcec.done.pipe(function(_) {\r\n\t\t\t\tif(!sceneDone.isResolved()) {\r\n\t\t\t\t\tlogoEnt.push(new SplashScreen_ShakeComponent());\r\n\t\t\t\t\tlogoEnt.push(new SoundComponent(roar.path, true));\r\n\t\t\t\t\tvar timer:TimedPromiseComponent = new TimedPromiseComponent(4.297);\r\n\t\t\t\t\tentities.push(new Entity(this, 'Timer', [timer]));\r\n\t\t\t\t\treturn timer.done;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\tif(!sceneDone.isResolved()) {\r\n\t\t\t\t\tcec.t = 0;\r\n\t\t\t\t\tcec.circleIn = false;\r\n\t\t\t\t\tcec.reset();\r\n\t\t\t\t\treturn cec.done;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}).then(function(_) {\r\n\t\t\t\tif(!sceneDone.isResolved()) {\r\n\t\t\t\t\tsceneDone.resolve(this);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t});\r\n\r\n\t\t\t// tell the processors we've started\r\n\t\t\tTusk.router.onEvent(tusk.events.EventType.Start);\r\n\t\t});\r\n\t}\r\n\r\n\toverride public function onKeyDown(event:tusk.events.KeyEvent) {\r\n\t\t#if snow\r\n\t\tif(event.keyCode == tusk.events.KeyEvent.Key.escape) {\r\n\t\t\tsceneDone.resolve(this);\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n}","package tusk.defaults.scenes;\r\n\r\nimport tusk.debug.Log;\r\n\r\nimport promhx.Promise;\r\nimport promhx.Stream;\r\n\r\nimport tusk.lib.comp.Camera2DComponent;\r\nimport tusk.lib.comp.FadeEffectComponent;\r\nimport tusk.lib.comp.MaterialComponent;\r\nimport tusk.lib.comp.MeshComponent;\r\nimport tusk.lib.comp.SoundComponent;\r\nimport tusk.lib.comp.TimedPromiseComponent;\r\nimport tusk.lib.comp.TransformComponent;\r\nimport tusk.lib.proc.Camera2DProcessor;\r\nimport tusk.lib.proc.FadeEffectRendererProcessor;\r\nimport tusk.lib.proc.MaterialProcessor;\r\nimport tusk.lib.proc.MeshProcessor;\r\nimport tusk.lib.proc.Renderer2DProcessor;\r\nimport tusk.lib.proc.TimedPromiseProcessor;\r\nimport tusk.lib.proc.TransformProcessor;\r\n\r\nimport tusk.resources.Mesh;\r\nimport tusk.resources.Material;\r\nimport tusk.resources.Texture;\r\n\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\nimport glm.Vec4;\r\nimport glm.Quat;\r\n\r\nclass TechScreen extends Scene {\r\n\tpublic function new() { super(\"Technology\"); }\r\n\r\n\toverride public function onLoad(_) {\r\n\t\tLog.info(\"Loading tech screen...\");\r\n\r\n\t\t// load the resources\r\n\t\tPromise.when(\r\n\t\t\ttusk.defaults.Primitives.loadQuad(),\r\n\t\t\ttusk.defaults.Materials.loadUnlitTextured(),\r\n\t\t\tTusk.assets.loadTexture('technologies.png', haxe.Resource.getBytes('technologies.png')),\r\n\t\t\ttusk.defaults.Materials.loadEffectFadeout()\r\n\t\t).then(function(quad:Mesh, mat:Material, screen:Texture, fadeOutMat:Material) {\r\n\t\t\t// set the material's texture\r\n\t\t\tmat.textures = new Array<Texture>();\r\n\t\t\tmat.textures.push(screen);\r\n\r\n\t\t\t// load processors\r\n\t\t\tthis.useProcessor(new TimedPromiseProcessor());\r\n\t\t\tthis.useProcessor(new MeshProcessor());\r\n\t\t\tthis.useProcessor(new MaterialProcessor());\r\n\t\t\tthis.useProcessor(new Camera2DProcessor());\r\n\t\t\tthis.useProcessor(new TransformProcessor());\r\n\t\t\tthis.useProcessor(new Renderer2DProcessor(new Vec4(1.0, 0.0, 0.0, 1.0)));\r\n\t\t\tthis.useProcessor(new FadeEffectRendererProcessor());\r\n\r\n\t\t\t// create the camera\r\n\t\t\tvar w:Float = Tusk.instance.app.window.width;\r\n\t\t\tvar h:Float = Tusk.instance.app.window.height;\r\n\t\t\tentities.push(new Entity(this, 'Camera', [\r\n\t\t\t\tnew TransformComponent(),\r\n\t\t\t\tnew Camera2DComponent(new Vec2(w, h) / -2.0, new Vec2(w, h) / 2.0, -100, 100)\r\n\t\t\t]));\r\n\r\n\t\t\t// create the screen\r\n\t\t\tvar imageEntity:Entity = new Entity(this, 'Image', [\r\n\t\t\t\tnew TransformComponent(new Vec3(), Quat.identity(), new Vec3(1024, 1024, 1024)),\r\n\t\t\t\tnew MeshComponent(quad.path),\r\n\t\t\t\tnew MaterialComponent(mat.path),\r\n\t\t\t]);\r\n\t\t\tentities.push(imageEntity);\r\n\r\n\t\t\tvar fec:FadeEffectComponent = new FadeEffectComponent(true);\r\n\t\t\tentities.push(new Entity(this, 'Fader', [\r\n\t\t\t\tnew TransformComponent(new Vec3(0, 0, 0.1), Quat.identity(), new Vec3(1024, 1024, 1024)),\r\n\t\t\t\tnew MeshComponent(quad.path),\r\n\t\t\t\tnew MaterialComponent(fadeOutMat.path),\r\n\t\t\t\tfec\r\n\t\t\t]));\r\n\t\t\tfec.done.pipe(function(_) {\r\n\t\t\t\tif(!sceneDone.isResolved()) {\r\n\t\t\t\t\tvar timer:TimedPromiseComponent = new TimedPromiseComponent(3.0);\r\n\t\t\t\t\tentities.push(new Entity(this, 'Timer', [timer]));\r\n\t\t\t\t\treturn timer.done;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}).pipe(function(_) {\r\n\t\t\t\tif(!sceneDone.isResolved()) {\r\n\t\t\t\t\tfec.t = 0;\r\n\t\t\t\t\tfec.fadeIn = false;\r\n\t\t\t\t\tfec.reset();\r\n\t\t\t\t\treturn fec.done;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}).then(function(_) {\r\n\t\t\t\tif(!sceneDone.isResolved()) {\r\n\t\t\t\t\tsceneDone.resolve(this);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t});\r\n\r\n\t\t\t// tell the processors we've started\r\n\t\t\tTusk.router.onEvent(tusk.events.EventType.Start);\r\n\t\t});\r\n\t}\r\n\r\n\toverride public function onKeyDown(event:tusk.events.KeyEvent) {\r\n\t\t#if snow\r\n\t\tif(event.keyCode == tusk.events.KeyEvent.Key.escape) {\r\n\t\t\tsceneDone.resolve(this);\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n}","package tusk.events;\r\n\r\nclass Event {\r\n\tpublic function new(){}\r\n}","package tusk.events;\r\n\r\n/**\r\n * Passed to handles when the destroy event is called\r\n */\r\nclass DestroyEvent extends Event {\r\n\tpublic function new(scene:tusk.Scene) {\r\n\t\tthis.scene = scene;\r\n\t\tsuper();\r\n\t}\r\n\tpublic var scene:tusk.Scene;\r\n}","package tusk.events;\r\n\r\nimport tusk.debug.Exception;\r\nimport tusk.debug.Log;\r\nimport haxe.ds.EnumValueMap;\r\nimport tusk.events.*;\r\n\r\n/**\r\n * This class sends events to connected listeners. Listeners can\r\n * connect by registering themselves as handlers.\r\n */\r\nclass EventRouter {\r\n\tprivate var handlers:EnumValueMap<EventType, Array<EventHandler>> = new EnumValueMap<EventType, Array<EventHandler>>();\r\n\tpublic function new() {}\r\n\r\n\t/**\r\n\t * Use this function to start listening to events\r\n\t * @param type    what type of event to register the handler for\r\n\t * @param handler function that will be called when event `type` happens\r\n\t */\r\n\tpublic function registerHandler(type:EventType, handler:EventHandler):Void {\r\n\t\tif(handler == null) {\r\n\t\t\tthrow new Exception('Event handler cannot be null!');\r\n\t\t}\r\n\t\tif(!handlers.exists(type)) {\r\n\t\t\thandlers.set(type, new Array<EventHandler>());\r\n\t\t}\r\n\t\thandlers.get(type).push(handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Use this function to stop listening to events\r\n\t * @param type    what type of event to register the handler for\r\n\t * @param handler function that will be called when event `type` happens\r\n\t */\r\n\tpublic function unregisterHandler(type:EventType, handler:EventHandler) {\r\n\t\tif(!handlers.exists(type)) return;\r\n\t\thandlers.get(type).remove(handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Calling this function will fire events to all connected listeners\r\n\t * @param type what type of event to register the handler for\r\n\t * @param data           an Events typedef containing event information\r\n\t */\r\n\tpublic function onEvent(type:EventType, ?data:Event) {\r\n\t\tif(!handlers.exists(type)) return;\r\n\t\tvar handlerArray:Array<EventHandler> = handlers.get(type);\r\n\t\tfor(handler in handlerArray) {\r\n\t\t\thandler(data);\r\n\t\t}\r\n\t}\r\n}","package tusk.events;\r\n\r\n#if snow\r\ntypedef Key = snow.system.input.Keycodes.Keycodes;\r\ntypedef Scan = snow.system.input.Keycodes.Scancodes;\r\ntypedef ModState = snow.types.Types.ModState;\r\n#else\r\ntypedef Key = Dynamic;\r\ntypedef Scan = Dynamic;\r\ntypedef ModState = Dynamic;\r\n#end\r\n\r\nclass KeyEvent extends Event {\r\n\tpublic var keyCode:Int;\r\n\tpublic var scanCode:Int;\r\n\tpublic var repeat:Bool;\r\n\tpublic var mod:ModState;\r\n\t\r\n\tpublic function new(keyCode:Int, scanCode:Int, repeat:Bool, mod:ModState) {\r\n\t\tthis.keyCode = keyCode;\r\n\t\tthis.scanCode = scanCode;\r\n\t\tthis.repeat = repeat;\r\n\t\tthis.mod = mod;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.events;\r\n\r\n/**\r\n * Passed to handles when the engine has loaded\r\n */\r\nclass LoadEvent extends Event {\r\n\tpublic var scene:tusk.Scene;\r\n\r\n\tpublic function new(scene:tusk.Scene) {\r\n\t\tthis.scene = scene;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.events;\r\n\r\nimport glm.Vec2;\r\n\r\nclass MouseButtonEvent extends Event {\r\n\tpublic var pos:Vec2;\r\n\tpublic var button:Int;\r\n\t\r\n\tpublic function new(x:Int, y:Int, button:Int) {\r\n\t\tthis.pos = new Vec2(x, y);\r\n\t\tthis.button = button;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.events;\r\n\r\nimport glm.Vec2;\r\n\r\nclass MouseMoveEvent extends Event {\r\n\tpublic var pos:Vec2;\r\n\tpublic var delta:Vec2;\r\n\t\r\n\tpublic function new(x:Int, y:Int, xrel:Int, yrel:Int) {\r\n\t\tthis.pos = new Vec2(x, y);\r\n\t\tthis.delta = new Vec2(xrel, yrel);\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.events;\r\n\r\n/**\r\n * Passed to handles when the render event is called\r\n */\r\nclass RenderEvent extends Event {\r\n\t/**\r\n\t * The fraction between the 'current' and 'previous' states.\r\n\t * **NOTE**: tusk uses fixed timesteps! That means you **will**\r\n\t * have to use this parameter for displaying visuals, or things\r\n\t * will definitely jerk around!\r\n\t * @see http://gafferongames.com/game-physics/fix-your-timestep/\r\n\t */\r\n\tpublic var alpha:Float;\r\n\r\n\tpublic function new(alpha:Float) {\r\n\t\tthis.alpha = alpha;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.events;\r\n\r\n/**\r\n * Passed to handles when the start event is called\r\n */\r\nclass StartEvent extends Event {\r\n\t\r\n}","package tusk.events;\r\n\r\n/**\r\n * Passed to handles when the update event is called\r\n */\r\nclass UpdateEvent extends Event {\r\n\t/**\r\n\t * The time between frames, in seconds\r\n\t */\r\n\tpublic var dt:Float;\r\n\t\r\n\tpublic function new(dt:Float) {\r\n\t\tthis.dt = dt;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.Component;\r\nimport glm.Mat4;\r\nimport glm.Vec3;\r\nimport glm.Vec2;\r\n\r\n/**\r\n * A tusk standard libary component for defining a camera\r\n */\r\nclass Camera2DComponent extends Component {\r\n\t/**\r\n\t * The combined projection and view matrices for this camera\r\n\t */\r\n\t@:dontSerialize\r\n\tpublic var projectionMatrix:Mat4 = new Mat4(1.0);\r\n\tpublic var projectionMatrixDirty:Bool = true;\r\n\r\n\t@:dontSerialize\r\n\tpublic var viewMatrix:Mat4 = new Mat4(1.0);\r\n\tpublic var viewMatrixDirty:Bool = true;\r\n\r\n\tpublic var min:Vec2;\r\n\tpublic var max:Vec2;\r\n\r\n\tpublic var near:Float;\r\n\tpublic var far:Float;\r\n\r\n\tpublic function new(min:Vec2, max:Vec2, near:Float=-100, far:Float=100) {\r\n\t\tthis.min  = min;\r\n\t\tthis.max  = max;\r\n\t\tthis.near = near;\r\n\t\tthis.far  = far;\r\n\t\tprojectionMatrixDirty = true;\r\n\t\tviewMatrixDirty = true;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.PromiseComponent;\r\nimport promhx.Deferred;\r\n\r\nimport glm.Vec2;\r\n\r\nclass CircleEffectComponent extends PromiseComponent {\r\n\tpublic var t:Float = 0;\r\n\tpublic var circleIn:Bool = true;\r\n\r\n\tpublic function new(circleIn:Bool) {\r\n\t\tthis.circleIn = circleIn;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nclass CustomUniformsComponent extends Component {\r\n\tpublic var setUniforms:Void->Void;\r\n\r\n\tpublic function new(setUniforms:Void->Void) {\r\n\t\tthis.setUniforms = setUniforms;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.PromiseComponent;\r\nimport promhx.Deferred;\r\n\r\nimport glm.Vec2;\r\n\r\nclass FadeEffectComponent extends PromiseComponent {\r\n\tpublic var t:Float = 0;\r\n\tpublic var fadeIn:Bool = true;\r\n\r\n\tpublic function new(fadeIn:Bool) {\r\n\t\tthis.fadeIn = fadeIn;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.Component;\r\nimport tusk.resources.Material;\r\n\r\n/**\r\n * A tusk standard libary component for defining a material\r\n */\r\nclass MaterialComponent extends Component {\r\n\tpublic var path:String;\r\n\t@:dontSerialize\r\n\tpublic var material:Material;\r\n\r\n\tpublic function new(?path:String, ?material:Material) {\r\n\t\tthis.path = material == null ? path : material.path;\r\n\t\tthis.material = material;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.Component;\r\nimport tusk.resources.Mesh;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\nimport snow.modules.opengl.GL.GLBuffer;\r\n#else\r\ntypedef GLBuffer = Int;\r\n#end\r\n\r\n/**\r\n * A tusk standard libary component for defining a mesh\r\n */\r\nclass MeshComponent extends Component {\r\n\tpublic var path:String;\r\n\t@:dontSerialize\r\n\tpublic var mesh:Mesh;\r\n\r\n\t@:dontSerialize\r\n\tpublic var vertexBuffer:GLBuffer = #if snow null #else 0 #end;\r\n\tpublic var bufferDirty:Bool = true;\r\n\r\n\tpublic function new(?path:String, ?mesh:Mesh) {\r\n\t\tthis.path = mesh == null ? path : mesh.path;\r\n\t\tthis.mesh = mesh;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.Component;\r\nimport tusk.resources.Mesh;\r\n\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\nimport glm.Vec4;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\nimport snow.modules.opengl.GL.GLBuffer;\r\nimport snow.api.buffers.Float32Array;\r\n#else\r\nimport tusk.lib.comp.MeshComponent.GLBuffer;\r\ntypedef Float32Array = Array<Float>;\r\n#end\r\n\r\ntypedef CustomParticleUpdater = Particle->ParticleSystemComponent->Float->Void;\r\n\r\nclass Particle {\r\n\tpublic var alive:Bool = false;\r\n\tpublic var vel:Vec3 = new Vec3();\r\n\tpublic var lifeTime:Float = 1;\r\n\tpublic var t:Float = 0;\r\n\t\r\n\tpublic var pos:Vec3 = new Vec3();\r\n\tpublic var lastPos:Vec3 = new Vec3();\r\n\tpublic var colour:Vec4 = new Vec4();\r\n\tpublic var lastColour:Vec4 = new Vec4();\r\n\tpublic var size:Float = 1;\r\n\tpublic var lastSize:Float = 1;\r\n\r\n\tpublic var seed:Float = 0;\r\n\r\n\tpublic function new(){}\r\n}\r\n\r\nclass ParticleSystemComponent extends Component {\r\n\tpublic var particleCount:Int = 0;\r\n\tpublic var particles:Array<Particle> = null;\r\n\r\n\tpublic var emissionRate:Float = 100; // particles / second\r\n\tpublic var lifeTime:Vec2 = new Vec2(5, 10); // lifetime min / max\r\n\r\n\tpublic var startColour:Vec4 = new Vec4(1, 1, 1, 0.75);\r\n\tpublic var endColour:Vec4 = new Vec4(1, 1, 1, 0.5);\r\n\r\n\tpublic var startSize:Float = 2;\r\n\tpublic var endSize:Float = 2;\r\n\r\n\tpublic var startPositionRange:Vec3 = new Vec3(256, 0, 0);\r\n\tpublic var startVelocityMin:Vec3 = new Vec3(0, 0, 0);\r\n\tpublic var startVelocityMax:Vec3 = new Vec3(0, 0, 0);\r\n\tpublic var gravity:Vec3 = new Vec3(0, -10, 0);\r\n\r\n\tpublic var preSimulateTime:Float = 0;\r\n\tpublic var customUpdater:CustomParticleUpdater = null;\r\n\r\n\t@:dontSerialize\r\n\tpublic var emissionAccumulator:Float = 0;\r\n\r\n\t@:dontSerialize\r\n\tpublic var bufferData:Float32Array;\r\n\r\n\t@:dontSerialize\r\n\tpublic var vertexBuffer:GLBuffer = #if snow null #else 0 #end;\r\n\r\n\tpublic function new(particleCount:Int, preSimulateTime:Float) {\r\n\t\tthis.particleCount = particleCount;\r\n\t\tthis.preSimulateTime = preSimulateTime;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.PromiseComponent;\r\nimport tusk.resources.Sound;\r\n\r\n/**\r\n * A tusk standard libary component for defining a sound\r\n */\r\nclass SoundComponent extends PromiseComponent {\r\n\tpublic var play:Bool = false;\r\n\tpublic var stop:Bool = false;\r\n\r\n\tpublic var playing:Bool = false;\r\n\tpublic var path:String = \"\";\r\n\r\n\tpublic function new(path:String, play:Bool) {\r\n\t\tthis.path = path;\r\n\t\tthis.play = play;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.Component;\r\nimport tusk.resources.Sound;\r\n\r\nclass SplashScreen_ShakeComponent extends Component {\r\n\tpublic var shakeDelayTimer:Float = 0.5;\r\n\tpublic var shaking:Bool = true;\r\n\tpublic var t:Float = 0;\r\n\r\n\tpublic function new() {\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.Component;\r\nimport tusk.resources.Font;\r\n\r\nimport glm.Vec4;\r\n\r\nenum TextAlign {\r\n\tLeft;\r\n\tCentre;\r\n\tRight;\r\n}\r\n\r\nenum TextVerticalAlign {\r\n\tTop;\r\n\tCentre;\r\n\tBottom;\r\n}\r\n\r\nclass TextComponent extends Component {\r\n\tpublic var text(default, set):String = \"\";\r\n\tpublic function set_text(t:String):String {\r\n\t\ttextDirty = true;\r\n\t\treturn text = t;\r\n\t}\r\n\tpublic var textDirty:Bool = true;\r\n\r\n\tpublic var font:Font;\r\n\tpublic var align:TextAlign;\r\n\tpublic var valign:TextVerticalAlign;\r\n\tpublic var colour:Vec4;\r\n\r\n\tpublic function new(font:Font, text:String, ?align:TextAlign, ?valign:TextVerticalAlign, ?colour:Vec4) {\r\n\t\tthis.font = font;\r\n\t\tthis.text = text;\r\n\t\tthis.align = align == null ? TextAlign.Left : align;\r\n\t\tthis.valign = valign == null ? TextVerticalAlign.Top : valign;\r\n\t\tthis.colour = colour == null ? new Vec4(0, 0, 0, 1) : colour;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.PromiseComponent;\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\n\r\nclass TimedPromiseComponent extends PromiseComponent {\r\n\tpublic var t:Float = 0;\r\n\tpublic var wait:Float = 0;\r\n\r\n\tpublic function new(wait:Float) {\r\n\t\tthis.wait = wait;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.comp;\r\n\r\nimport tusk.Component;\r\nimport glm.Quat;\r\nimport glm.Vec3;\r\nimport glm.Mat4;\r\n\r\n/**\r\n * A tusk standard libary component for defining a transform\r\n */\r\nclass TransformComponent extends Component {\r\n\t// the current values\r\n\tpublic var position:Vec3 = new Vec3(0.0);\r\n\tpublic var rotation:Quat = Quat.identity();\r\n\tpublic var scale:Vec3 = new Vec3(1.0);\r\n\r\n\t// the most recent rendered values, for interpolation\r\n\tpublic var lastPosition:Vec3 = new Vec3(0.0);\r\n\tpublic var lastRotation:Quat = Quat.identity();\r\n\tpublic var lastScale:Vec3 = new Vec3(1.0);\r\n\r\n\t@:dontSerialize\r\n\tpublic var modelMatrix:Mat4 = new Mat4(1.0);\r\n\t//public var modelMatrixDirty:Bool = true;\r\n\r\n\tpublic function new(?position:Vec3, ?rotation:Quat, ?scale:Vec3) {\r\n\t\tif(position != null) this.position = position;\r\n\t\tif(rotation != null) this.rotation = rotation;\r\n\t\tif(scale != null) this.scale = scale;\r\n\r\n\t\tlastPosition = this.position;\r\n\t\tlastRotation = this.rotation;\r\n\t\tlastScale = this.scale;\r\n\t\tsuper();\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Component;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nimport haxe.ds.IntMap;\r\n\r\nimport glm.Projection;\r\nimport glm.Mat3;\r\nimport glm.Mat4;\r\nimport glm.GLM;\r\n\r\n/**\r\n * Processor which fills out camera matrices for the renderer\r\n */\r\nclass Camera2DProcessor extends Processor {\r\n\t// keep a list of all the cameras for the renderer to use\r\n\tpublic static var cameras:Array<Camera2DComponent> = new Array<Camera2DComponent>();\r\n\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(Camera2DComponent.tid).include(TransformComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\r\n\toverride public function onEntityChanged(entity:Entity, event:Entity.ChangeEvent):Void {\r\n\t\tvar added:Bool = switch(event) {\r\n\t\t\tcase Entity.ChangeEvent.EntityAdded: true;\r\n\t\t\tcase Entity.ChangeEvent.ComponentAdded(c): c._tid == Camera2DComponent.tid;\r\n\t\t\tcase Entity.ChangeEvent.EntityRemoved: false;\r\n\t\t\tcase Entity.ChangeEvent.ComponentRemoved(c): false;\r\n\t\t}\r\n\t\tif(added) {\r\n\t\t\tcameras.push(cast entity.get(Camera2DComponent.tid));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcameras.remove(cast entity.get(Camera2DComponent.tid));\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function onUpdate(data:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\t// get the relevant components\r\n\t\t\tvar camera:Camera2DComponent = cast entity.get(Camera2DComponent.tid);\r\n\t\t\tvar transform:TransformComponent = cast entity.get(TransformComponent.tid);\r\n\r\n\t\t\t// check if the projection-view matrix is dirty\r\n\t\t\t/*if(transform.position != transform.lastPosition || transform.rotation != transform.lastRotation) {\r\n\t\t\t\tcamera.viewMatrixDirty = true;\r\n\t\t\t}*/\r\n\r\n\t\t\t// if we need to update the projection matrix, do so\r\n\t\t\tif(camera.projectionMatrixDirty) {\r\n\t\t\t\tcamera.projectionMatrix = Projection.ortho(camera.min.x, camera.max.x, camera.min.y, camera.max.y, camera.near, camera.far);\r\n\t\t\t\tcamera.projectionMatrixDirty = false;\r\n\t\t\t}\r\n\r\n\t\t\t// if we need to update the view matrix, do so\r\n\t\t\tif(camera.viewMatrixDirty) {\r\n\t\t\t\tcamera.viewMatrix = GLM.translate(-1 * transform.position) * Mat4.fromMat3(Mat3.fromQuat(transform.rotation));\r\n\t\t\t\tcamera.viewMatrixDirty = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Component;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nimport tusk.resources.Mesh;\r\nimport tusk.resources.Material;\r\n\r\nimport haxe.ds.IntMap;\r\n\r\nimport glm.Projection;\r\nimport glm.Vec4;\r\nimport glm.Mat3;\r\nimport glm.Mat4;\r\nimport glm.GLM;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\n#end\r\n\r\n/**\r\n * Processor which fills out camera matrices for the renderer\r\n */\r\nclass CircleEffectRendererProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(MaterialComponent.tid).include(MeshComponent.tid).include(CircleEffectComponent.tid).include(TransformComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\r\n\toverride public function onUpdate(data:UpdateEvent) {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar circleEffect:CircleEffectComponent = cast entity.get(CircleEffectComponent.tid);\r\n\t\t\tcircleEffect.t += data.dt;\r\n\r\n\t\t\tif(circleEffect.t >= 1.0 && !circleEffect.done.isResolved()) {\r\n\t\t\t\tcircleEffect.finish();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function onRender(data:RenderEvent) {\r\n\t\tfor(camera in Camera2DProcessor.cameras) {\r\n\t\t\tfor(entity in entities) {\r\n\t\t\t\t// get our components\r\n\t\t\t\tvar transform:TransformComponent = cast entity.get(TransformComponent.tid);\r\n\t\t\t\tvar mesh:MeshComponent = cast entity.get(MeshComponent.tid);\r\n\t\t\t\tvar material:MaterialComponent = cast entity.get(MaterialComponent.tid);\r\n\t\t\t\tvar circleEffect:CircleEffectComponent = cast entity.get(CircleEffectComponent.tid);\r\n\r\n\t\t\t\tif(mesh.mesh == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render!\r\n\t\t\t\tmaterial.material.onRender(function(mat:Material) {\r\n\t\t\t\t\tmat.setMat4(\"projection\", camera.projectionMatrix);\r\n\t\t\t\t\tmat.setMat4(\"view\", camera.viewMatrix);\r\n\t\t\t\t\tmat.setMat4(\"model\", transform.modelMatrix);\r\n\t\t\t\t\tmaterial.material.setVec2('resolutionCenter',\r\n\t\t\t\t\t\tnew glm.Vec2(Tusk.instance.app.window.width, Tusk.instance.app.window.height) / 2.0);\r\n\t\t\t\t\tmaterial.material.setFloat('circleDistance',\r\n\t\t\t\t\t\ttusk.math.Ease.InOutCubic(circleEffect.circleIn ? circleEffect.t : (1.0 - circleEffect.t), 0, 1024, 1.0));\r\n\t\t\t\t}, mesh.vertexBuffer, mesh.mesh.vertices.length);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Component;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nimport tusk.resources.Mesh;\r\nimport tusk.resources.Material;\r\n\r\nimport haxe.ds.IntMap;\r\n\r\nimport glm.Projection;\r\nimport glm.Vec4;\r\nimport glm.Mat3;\r\nimport glm.Mat4;\r\nimport glm.GLM;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\n#end\r\n\r\n/**\r\n * Processor which fills out camera matrices for the renderer\r\n */\r\nclass FadeEffectRendererProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(MaterialComponent.tid).include(MeshComponent.tid).include(FadeEffectComponent.tid).include(TransformComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\r\n\toverride public function onUpdate(data:UpdateEvent) {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar fadeEffect:FadeEffectComponent = cast entity.get(FadeEffectComponent.tid);\r\n\t\t\tfadeEffect.t += data.dt;\r\n\r\n\t\t\tif(fadeEffect.t >= 1.0 && !fadeEffect.done.isResolved()) {\r\n\t\t\t\tfadeEffect.finish();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function onRender(data:RenderEvent) {\r\n\t\tfor(camera in Camera2DProcessor.cameras) {\r\n\t\t\tfor(entity in entities) {\r\n\t\t\t\t// get our components\r\n\t\t\t\tvar transform:TransformComponent = cast entity.get(TransformComponent.tid);\r\n\t\t\t\tvar mesh:MeshComponent = cast entity.get(MeshComponent.tid);\r\n\t\t\t\tvar material:MaterialComponent = cast entity.get(MaterialComponent.tid);\r\n\t\t\t\tvar fadeEffect:FadeEffectComponent = cast entity.get(FadeEffectComponent.tid);\r\n\r\n\t\t\t\tif(mesh.mesh == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render!\r\n\t\t\t\tmaterial.material.onRender(function(mat:Material) {\r\n\t\t\t\t\tmat.setMat4(\"projection\", camera.projectionMatrix);\r\n\t\t\t\t\tmat.setMat4(\"view\", camera.viewMatrix);\r\n\t\t\t\t\tmat.setMat4(\"model\", transform.modelMatrix);\r\n\t\t\t\t\tmaterial.material.setFloat('fadeAlpha',\r\n\t\t\t\t\t\ttusk.math.Ease.InOutCubic(fadeEffect.fadeIn ? (1.0 - fadeEffect.t) : fadeEffect.t, 0, 1, 1.0));\r\n\t\t\t\t}, mesh.vertexBuffer, mesh.mesh.vertices.length);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nclass MaterialProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(MaterialComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\r\n\toverride public function onEntityChanged(entity:Entity, event:Entity.ChangeEvent):Void {\r\n\t\tvar add:Bool = switch(event) {\r\n\t\t\tcase Entity.ChangeEvent.EntityAdded: true;\r\n\t\t\tcase Entity.ChangeEvent.ComponentAdded(_): true;\r\n\t\t\tdefault: false;\r\n\t\t}\r\n\t\tif(add) {\r\n\t\t\tvar mc:MaterialComponent = cast entity.get(MaterialComponent.tid);\r\n\t\t\tif(mc.material == null) {\r\n\t\t\t\tmc.material = Tusk.assets.getMaterial(mc.path);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nimport tusk.resources.Material;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\n#end\r\n\r\nclass MeshProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(MeshComponent.tid).include(MaterialComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\r\n\toverride public function onUpdate(event:UpdateEvent) {\r\n\t\t#if snow\r\n\t\tfor(entity in entities) {\r\n\t\t\t// get our components\r\n\t\t\tvar mesh:MeshComponent = cast entity.get(MeshComponent.tid);\r\n\t\t\tvar mat:MaterialComponent = cast entity.get(MaterialComponent.tid);\r\n\t\t\tif(mesh.mesh == null) {\r\n\t\t\t\tmesh.mesh = Tusk.assets.getMesh(mesh.path);\r\n\t\t\t}\r\n\r\n\t\t\t// build the mesh buffer if that is necessary\r\n\t\t\tif(mesh.bufferDirty || mesh.vertexBuffer == null) {\r\n\t\t\t\tmesh.vertexBuffer = GL.createBuffer();\r\n\t\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, mesh.vertexBuffer);\r\n\t\t\t\tvar data:Array<Float> = new Array<Float>();\r\n\t\t\t\tfor(i in 0...mesh.mesh.vertices.length) {\r\n\t\t\t\t\t// add the position\r\n\t\t\t\t\tif(mat.material.attributeFlags.has(AttributeTypes.Pos3)) {\r\n\t\t\t\t\t\tdata.push(mesh.mesh.vertices[i].x);\r\n\t\t\t\t\t\tdata.push(mesh.mesh.vertices[i].y);\r\n\t\t\t\t\t\tdata.push(mesh.mesh.vertices[i].z);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// add the uvs\r\n\t\t\t\t\tif(mat.material.attributeFlags.has(AttributeTypes.UV)) {\r\n\t\t\t\t\t\tdata.push(mesh.mesh.uvs[i].x);\r\n\t\t\t\t\t\tdata.push(mesh.mesh.uvs[i].y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// add the colour\r\n\t\t\t\t\tif(mat.material.attributeFlags.has(AttributeTypes.Colour4)) {\r\n\t\t\t\t\t\tdata.push(mesh.mesh.colours[i].r);\r\n\t\t\t\t\t\tdata.push(mesh.mesh.colours[i].g);\r\n\t\t\t\t\t\tdata.push(mesh.mesh.colours[i].b);\r\n\t\t\t\t\t\tdata.push(mesh.mesh.colours[i].a);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tGL.bufferData(GL.ARRAY_BUFFER, new snow.api.buffers.Float32Array(data), GL.STATIC_DRAW);\r\n\t\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\r\n\t\t\t\tmesh.bufferDirty = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Component;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.MaterialComponent;\r\nimport tusk.lib.comp.ParticleSystemComponent;\r\nimport tusk.lib.comp.ParticleSystemComponent.Particle;\r\nimport tusk.lib.comp.TransformComponent;\r\n\r\nimport tusk.resources.Material;\r\n\r\nimport haxe.ds.IntMap;\r\n\r\nimport glm.Projection;\r\nimport glm.Vec4;\r\nimport glm.Mat3;\r\nimport glm.Mat4;\r\nimport glm.GLM;\r\n\r\nimport tusk.math.Random;\r\nimport tusk.math.Lerp;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\n#end\r\n\r\nclass ParticleSystemProcessor extends Processor {\r\n\tprivate var clearColour:Vec4 = new Vec4(0.25, 0.25, 0.25, 1.0);\r\n\tpublic var doClear:Bool = true;\r\n\r\n\tpublic function new(?clearColour:Vec4, ?doClear:Bool, ?entities:Array<Entity>) {\r\n\t\tif(clearColour != null) this.clearColour = clearColour;\r\n\t\tif(doClear != null) this.doClear = doClear;\r\n\t\tmatcher = new Matcher().include(MaterialComponent.tid).include(ParticleSystemComponent.tid).include(TransformComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\r\n\tprivate function simulate(pc:ParticleSystemComponent, dt:Float) {\r\n\t\t// figure out emission\r\n\t\tvar particlesToEmit:Int = Std.int(pc.emissionRate * dt);\r\n\t\tif(pc.emissionAccumulator >= 1.0) {\r\n\t\t\tparticlesToEmit += 1;\r\n\t\t\tpc.emissionAccumulator -= 1.0;\r\n\t\t}\r\n\t\tpc.emissionAccumulator += (pc.emissionRate * dt) - particlesToEmit;\r\n\r\n\t\tfor(particle in pc.particles) {\r\n\t\t\tif(particle.alive) {\r\n\t\t\t\t// update the time\r\n\t\t\t\tparticle.t += dt;\r\n\t\t\t\tif(particle.t >= particle.lifeTime) {\r\n\t\t\t\t\tparticle.alive = false;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// use a custom update if one is specified\r\n\t\t\t\tif(pc.customUpdater != null) {\r\n\t\t\t\t\tpc.customUpdater(particle, pc, dt);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// accelerate it due to gravity\r\n\t\t\t\t\tparticle.vel.x += pc.gravity.x * dt;\r\n\t\t\t\t\tparticle.vel.y += pc.gravity.y * dt;\r\n\t\t\t\t\tparticle.vel.z += pc.gravity.z * dt;\r\n\r\n\t\t\t\t\t// move the particle along\r\n\t\t\t\t\tparticle.lastPos.set(particle.pos.x, particle.pos.y, particle.pos.z);\r\n\t\t\t\t\tparticle.pos.x += particle.vel.x * dt;\r\n\t\t\t\t\tparticle.pos.y += particle.vel.y * dt;\r\n\t\t\t\t\tparticle.pos.z += particle.vel.z * dt;\r\n\r\n\t\t\t\t\t// change its colour\r\n\t\t\t\t\tparticle.lastColour = particle.colour.clone();\r\n\t\t\t\t\tparticle.colour = pc.startColour.clone().lerp(pc.endColour, particle.t / particle.lifeTime);\r\n\r\n\t\t\t\t\t// change its size\r\n\t\t\t\t\tparticle.lastSize = particle.size;\r\n\t\t\t\t\tparticle.size = Lerp.LerpF(pc.startSize, pc.endSize, particle.t / particle.lifeTime);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// see if we need to bring a particle alive!\r\n\t\t\telse if(particlesToEmit > 0) {\r\n\t\t\t\t// yup, we need a new particle!\r\n\t\t\t\t// bring it to life!\r\n\t\t\t\tparticle.alive = true;\r\n\r\n\t\t\t\t// randomly set its position\r\n\t\t\t\tparticle.pos.x = Random.float(-pc.startPositionRange.x, pc.startPositionRange.x);\r\n\t\t\t\tparticle.pos.y = Random.float(-pc.startPositionRange.y, pc.startPositionRange.y);\r\n\t\t\t\tparticle.pos.z = Random.float(-pc.startPositionRange.z, pc.startPositionRange.z);\r\n\t\t\t\tparticle.lastPos = particle.pos.clone();\r\n\r\n\t\t\t\t// randomly set its velocity\r\n\t\t\t\tparticle.vel.x = Random.float(pc.startVelocityMin.x, pc.startVelocityMax.x);\r\n\t\t\t\tparticle.vel.y = Random.float(pc.startVelocityMin.y, pc.startVelocityMax.y);\r\n\t\t\t\tparticle.vel.z = Random.float(pc.startVelocityMin.z, pc.startVelocityMax.z);\r\n\r\n\t\t\t\t// set up its colour\r\n\t\t\t\tparticle.colour = pc.startColour.clone();\r\n\t\t\t\tparticle.lastColour = particle.colour.clone();\r\n\r\n\t\t\t\t// set up its size\r\n\t\t\t\tparticle.size = pc.startSize;\r\n\t\t\t\tparticle.lastSize = particle.size;\r\n\r\n\t\t\t\t// set up it's lifespan\r\n\t\t\t\tparticle.t = 0;\r\n\t\t\t\tparticle.lifeTime = Random.float(pc.lifeTime.x, pc.lifeTime.y);\r\n\r\n\t\t\t\t// give it a random seed\r\n\t\t\t\tparticle.seed = Random.float(0, 1);\r\n\r\n\t\t\t\t// we emitted a particle, so don't emit any more this frame!\r\n\t\t\t\tparticlesToEmit -= 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function onUpdate(event:UpdateEvent) {\r\n\t\t#if snow\r\n\t\tfor(entity in entities) {\r\n\t\t\t// get our components\r\n\t\t\tvar pc:ParticleSystemComponent = cast entity.get(ParticleSystemComponent.tid);\r\n\t\t\tvar mat:MaterialComponent = cast entity.get(MaterialComponent.tid);\r\n\r\n\t\t\t// build the mesh buffer if that is necessary\r\n\t\t\tif(pc.vertexBuffer == null) {\r\n\t\t\t\tpc.vertexBuffer = GL.createBuffer();\r\n\t\t\t}\r\n\r\n\t\t\t// build the particles if they're empty\r\n\t\t\tif(pc.particles == null) {\r\n\t\t\t\t// one particle object per particle\r\n\t\t\t\tpc.particles = new Array<Particle>();\r\n\t\t\t\tfor(i in 0...pc.particleCount) {\r\n\t\t\t\t\tpc.particles.push(new Particle());\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// pre-simulate!\r\n\t\t\t\tvar t:Float = 0;\r\n\t\t\t\tvar dt:Float = event.dt;\r\n\t\t\t\twhile(t < pc.preSimulateTime) {\r\n\t\t\t\t\tsimulate(pc, dt);\r\n\t\t\t\t\tt += dt;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// equals 8 float values sent to the shader per particle\r\n\t\t\t\tpc.bufferData = new snow.api.buffers.Float32Array([for(i in 0...(pc.particleCount * 8)) 0.0]);\r\n\t\t\t}\r\n\r\n\t\t\t// update the particles\r\n\t\t\tsimulate(pc, event.dt);\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\r\n\toverride public function onRender(event:RenderEvent) {\r\n\t\t#if snow\r\n\t\tGL.disable(GL.DEPTH_TEST);\r\n\t\tGL.enable(GL.BLEND);\r\n\t\tGL.depthFunc(GL.LESS);\r\n\t\tGL.viewport(0, 0, Tusk.instance.app.window.width, Tusk.instance.app.window.height);\r\n\t\tGL.clearColor(clearColour.r, clearColour.g, clearColour.b, clearColour.a);\r\n\t\tif(doClear) {\r\n\t\t\tGL.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\r\n\t\t}\r\n\r\n\t\tfor(camera in Camera2DProcessor.cameras) {\r\n\t\t\tfor(entity in entities) {\r\n\t\t\t\t// get our components\r\n\t\t\t\tvar transform:TransformComponent = cast entity.get(TransformComponent.tid);\r\n\t\t\t\tvar pc:ParticleSystemComponent = cast entity.get(ParticleSystemComponent.tid);\r\n\t\t\t\tvar material:MaterialComponent = cast entity.get(MaterialComponent.tid);\r\n\r\n\t\t\t\t// make sure we have a mesh to work with\r\n\t\t\t\tif(pc.bufferData == null || pc.vertexBuffer == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// update the buffer data\r\n\t\t\t\tfor(i in 0...pc.particleCount)  {\r\n\t\t\t\t\tvar pi:Int = i * 8;\r\n\t\t\t\t\tif(pc.particles[i].alive) {\r\n\t\t\t\t\t\t// position!\r\n\t\t\t\t\t\tpc.bufferData[pi + 0] = Lerp.LerpF(pc.particles[i].lastPos.x, pc.particles[i].pos.x, event.alpha);\r\n\t\t\t\t\t\tpc.bufferData[pi + 1] = Lerp.LerpF(pc.particles[i].lastPos.y, pc.particles[i].pos.y, event.alpha);\r\n\t\t\t\t\t\tpc.bufferData[pi + 2] = Lerp.LerpF(pc.particles[i].lastPos.z, pc.particles[i].pos.z, event.alpha);\r\n\r\n\t\t\t\t\t\t// colour!\r\n\t\t\t\t\t\tpc.bufferData[pi + 3] = Lerp.LerpF(pc.particles[i].lastColour.r, pc.particles[i].colour.r, event.alpha);\r\n\t\t\t\t\t\tpc.bufferData[pi + 4] = Lerp.LerpF(pc.particles[i].lastColour.g, pc.particles[i].colour.g, event.alpha);\r\n\t\t\t\t\t\tpc.bufferData[pi + 5] = Lerp.LerpF(pc.particles[i].lastColour.b, pc.particles[i].colour.b, event.alpha);\r\n\t\t\t\t\t\tpc.bufferData[pi + 6] = Lerp.LerpF(pc.particles[i].lastColour.a, pc.particles[i].colour.a, event.alpha);\r\n\r\n\t\t\t\t\t\t// size!\r\n\t\t\t\t\t\tpc.bufferData[pi + 7] = Lerp.LerpF(pc.particles[i].lastSize, pc.particles[i].size, event.alpha);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// it's dead jim!\r\n\t\t\t\t\t\tpc.bufferData[pi + 0] = 0;\r\n\t\t\t\t\t\tpc.bufferData[pi + 1] = 0;\r\n\t\t\t\t\t\tpc.bufferData[pi + 2] = 0;\r\n\t\t\t\t\t\tpc.bufferData[pi + 3] = 0;\r\n\t\t\t\t\t\tpc.bufferData[pi + 4] = 0;\r\n\t\t\t\t\t\tpc.bufferData[pi + 5] = 0;\r\n\t\t\t\t\t\tpc.bufferData[pi + 6] = 0;\r\n\t\t\t\t\t\tpc.bufferData[pi + 7] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// now update the vertex buffer\r\n\t\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, pc.vertexBuffer);\r\n\t\t\t\tGL.bufferData(GL.ARRAY_BUFFER, pc.bufferData, GL.DYNAMIC_DRAW);\r\n\t\t\t\tGL.bindBuffer(GL.ARRAY_BUFFER, null);\r\n\r\n\t\t\t\t// render!\r\n\t\t\t\tmaterial.material.onRender(function(mat:Material) {\r\n\t\t\t\t\tmat.setMat4(\"projection\", camera.projectionMatrix);\r\n\t\t\t\t\tmat.setMat4(\"view\", camera.viewMatrix);\r\n\t\t\t\t\tmat.setMat4(\"model\", transform.modelMatrix);\r\n\t\t\t\t}, pc.vertexBuffer, pc.particles.length);\r\n\t\t\t}\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Component;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nimport tusk.resources.Mesh;\r\nimport tusk.resources.Material;\r\n\r\nimport haxe.ds.IntMap;\r\n\r\nimport glm.Projection;\r\nimport glm.Vec4;\r\nimport glm.Mat3;\r\nimport glm.Mat4;\r\nimport glm.GLM;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\n#end\r\n\r\n/**\r\n * Processor which fills out camera matrices for the renderer\r\n */\r\nclass Renderer2DProcessor extends Processor {\r\n\tprivate var clearColour:Vec4 = new Vec4(1.0, 1.0, 1.0, 1.0);\r\n\r\n\tpublic function new(?clearColour:Vec4, ?entities:Array<Entity>) {\r\n\t\tif(clearColour != null) this.clearColour = clearColour;\r\n\t\tmatcher = new Matcher().include(MaterialComponent.tid).include(MeshComponent.tid).include(TransformComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\r\n\toverride public function onRender(event:RenderEvent) {\r\n\t\t// sort our entities based on depth\r\n\t\t// TODO: sort somewhere else that is less expensive!!\r\n\t\tentities.sort(function(a:Entity, b:Entity):Int {\r\n\t\t\tvar ta:TransformComponent = cast a.get(TransformComponent.tid);\r\n\t\t\tvar tb:TransformComponent = cast b.get(TransformComponent.tid);\r\n\t\t\tif(ta.position.z == tb.position.z) return 0;\r\n\t\t\treturn ta.position.z < tb.position.z ? 1 : -1;\r\n\t\t});\r\n\r\n\t\t#if snow\r\n\t\tGL.disable(GL.DEPTH_TEST);\r\n\t\tGL.enable(GL.BLEND);\r\n\t\tGL.depthFunc(GL.LESS);\r\n\t\tGL.viewport(0, 0, Tusk.instance.app.window.width, Tusk.instance.app.window.height);\r\n\t\tGL.clearColor(clearColour.r, clearColour.g, clearColour.b, clearColour.a);\r\n\t\tGL.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\r\n\r\n\t\tfor(camera in Camera2DProcessor.cameras) {\r\n\t\t\tfor(entity in entities) {\r\n\t\t\t\t// get our components\r\n\t\t\t\tvar transform:TransformComponent = cast entity.get(TransformComponent.tid);\r\n\t\t\t\tvar mesh:MeshComponent = cast entity.get(MeshComponent.tid);\r\n\t\t\t\tvar material:MaterialComponent = cast entity.get(MaterialComponent.tid);\r\n\r\n\t\t\t\tif(mesh.mesh == null || mesh.vertexBuffer == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render!\r\n\t\t\t\tmaterial.material.onRender(function(mat:Material) {\r\n\t\t\t\t\tmat.setMat4(\"projection\", camera.projectionMatrix);\r\n\t\t\t\t\tmat.setMat4(\"view\", camera.viewMatrix);\r\n\t\t\t\t\tmat.setMat4(\"model\", transform.modelMatrix);\r\n\r\n\t\t\t\t\tif(mat.textures != null && mat.textures.length > 0) {\r\n\t\t\t\t\t\tmat.setTexture(\"texture\", 0);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(entity.hasType(TextComponent.tid)) {\r\n\t\t\t\t\t\tvar tc:TextComponent = cast entity.get(TextComponent.tid);\r\n\t\t\t\t\t\t//js.Lib.debug();\r\n\t\t\t\t\t\tmat.setVec4(\"colour\", tc.colour);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(entity.hasType(CustomUniformsComponent.tid)) {\r\n\t\t\t\t\t\tvar customUniforms:CustomUniformsComponent = cast entity.get(CustomUniformsComponent.tid);\r\n\t\t\t\t\t\tcustomUniforms.setUniforms();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, mesh.vertexBuffer, mesh.mesh.vertices.length);\r\n\t\t\t}\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nimport tusk.resources.Sound;\r\n\r\nclass SoundProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(SoundComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(data:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar s:SoundComponent = cast entity.get(SoundComponent.tid);\r\n\r\n\t\t\tif(!s.playing && s.play) {\r\n\t\t\t\tvar sound:Sound = Tusk.assets.getSound(s.path);\r\n\t\t\t\tTusk.sound.play(sound);\r\n\t\t\t\tsound.onEnd = function() {\r\n\t\t\t\t\ts.playing = false;\r\n\t\t\t\t\ts.finish();\r\n\t\t\t\t}\r\n\t\t\t\ts.play = false;\r\n\t\t\t\ts.playing = true;\r\n\t\t\t}\r\n\t\t\telse if(s.playing && s.stop) {\r\n\t\t\t\tvar sound:Sound = Tusk.assets.getSound(s.path);\r\n\t\t\t\tTusk.sound.stop(sound);\r\n\t\t\t\ts.stop = false;\r\n\t\t\t\ts.playing = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nclass SplashScreen_RoarShakeProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(TransformComponent.tid).include(MeshComponent.tid).include(SplashScreen_ShakeComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(data:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar t:TransformComponent = cast entity.get(TransformComponent.tid);\r\n\t\t\tvar s:SplashScreen_ShakeComponent = cast entity.get(SplashScreen_ShakeComponent.tid);\r\n\r\n\t\t\tif(s.shakeDelayTimer > 0) {\r\n\t\t\t\ts.shakeDelayTimer -= data.dt;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(s.shaking) {\r\n\t\t\t\ts.t += data.dt;\r\n\t\t\t\t// use a fancy \"tween\" function to adjust the amplitude\r\n\t\t\t\tvar a:Float = -0.1490 * Math.pow(s.t, 4) + 1.2605\r\n\t\t\t\t\t* Math.pow(s.t, 3) - 3.6256 * Math.pow(s.t, 2)\r\n\t\t\t\t\t+ 3.6298 * s.t - 0.1685;\r\n\r\n\t\t\t\t// store the old position\r\n\t\t\t\tt.lastPosition = t.position;\r\n\r\n\t\t\t\tif(s.t >= 3.297) {\r\n\t\t\t\t\ts.shaking = false;\r\n\t\t\t\t\tt.position.x = 0;\r\n\t\t\t\t\tt.position.y = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// move it!\r\n\t\t\t\t\tt.position.x = (Math.random() * 2 - 1) * 10 * a;\r\n\t\t\t\t\tt.position.y = (Math.random() * 2 - 1) * 10 * a;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.lib.comp.TextComponent.TextAlign.Left;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nimport glm.Vec3;\r\nimport glm.Vec2;\r\nimport tusk.resources.Font.FontChar;\r\n\r\nclass TextProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(MeshComponent.tid).include(TextComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\r\n\toverride public function onUpdate(event:UpdateEvent) {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar text:TextComponent = cast entity.get(TextComponent.tid);\r\n\t\t\tif(text.textDirty) {\r\n\t\t\t\tvar mesh:MeshComponent = cast entity.get(MeshComponent.tid);\r\n\t\t\t\tmesh.bufferDirty = true;\r\n\t\t\t\tif(mesh.mesh == null) {\r\n\t\t\t\t\tmesh.mesh = Tusk.assets.getMesh(mesh.path);\r\n\t\t\t\t}\r\n\t\t\t\tmesh.mesh.vertices = new Array<Vec3>();\r\n\t\t\t\tmesh.mesh.uvs = new Array<Vec2>();\r\n\r\n\t\t\t\t// split it into lines\r\n\t\t\t\tvar lines:Array<String> = text.text.split('\\n');\r\n\t\t\t\tvar offsets:Array<Float> = new Array<Float>();\r\n\t\t\t\tvar yPos:Float = 0;\r\n\t\t\t\tfor(line in lines) {\r\n\t\t\t\t\t// deal with alignment\r\n\t\t\t\t\tvar textWidth:Float = 0;\r\n\t\t\t\t\tfor(i in 0...line.length) {\r\n\t\t\t\t\t\tvar code:Int = line.charCodeAt(i);\r\n\t\t\t\t\t\tvar char:FontChar = text.font.chars.get(code);\r\n\t\t\t\t\t\ttextWidth += char.xAdvance;\r\n\t\t\t\t\t}\r\n\t\t\t\t\toffsets.push(switch(text.align) {\r\n\t\t\t\t\t\tcase Left: 0;\r\n\t\t\t\t\t\tcase Right: -textWidth;\r\n\t\t\t\t\t\tcase Centre: -textWidth / 2.0;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar yPos:Float = switch(text.valign) {\r\n\t\t\t\t\tcase Top: 0;\r\n\t\t\t\t\tcase Bottom: lines.length * text.font.baseLine;\r\n\t\t\t\t\tcase Centre: (lines.length * text.font.baseLine) / 2.0;\r\n\t\t\t\t};\r\n\t\t\t\tfor(j in 0...lines.length) {\r\n\t\t\t\t\tvar line:String = lines[j];\r\n\t\t\t\t\tvar xPos:Float = offsets[j];\r\n\t\t\t\t\tvar yTop:Float = yPos + text.font.baseLine;\r\n\r\n\t\t\t\t\tfor(i in 0...line.length) {\r\n\t\t\t\t\t\tvar code:Int = line.charCodeAt(i);\r\n\t\t\t\t\t\tvar char:FontChar = text.font.chars.get(code);\r\n\t\t\t\t\t\tvar offset:Vec3 = new Vec3(\r\n\t\t\t\t\t\t\tchar.offset.x,\r\n\t\t\t\t\t\t\tyTop - char.size.y - char.offset.y,\r\n\t\t\t\t\t\t\t0);\r\n\r\n\t\t\t\t\t\t//    2\r\n\t\t\t\t\t\t//  / |\r\n\t\t\t\t\t\t// 0--1\r\n\t\t\t\t\t\tmesh.mesh.vertices.push(new Vec3(xPos, yPos) + offset);\r\n\t\t\t\t\t\tmesh.mesh.uvs.push(new Vec2(char.minUV.x, char.maxUV.y));\r\n\t\t\t\t\t\tmesh.mesh.vertices.push(new Vec3(xPos + char.size.x, yPos) + offset);\r\n\t\t\t\t\t\tmesh.mesh.uvs.push(new Vec2(char.maxUV.x, char.maxUV.y));\r\n\t\t\t\t\t\tmesh.mesh.vertices.push(new Vec3(xPos + char.size.x, yPos + char.size.y) + offset);\r\n\t\t\t\t\t\tmesh.mesh.uvs.push(new Vec2(char.maxUV.x, char.minUV.y));\r\n\r\n\t\t\t\t\t\t// 1--0\r\n\t\t\t\t\t\t// | /  \r\n\t\t\t\t\t\t// 2   \r\n\t\t\t\t\t\tmesh.mesh.vertices.push(new Vec3(xPos + char.size.x, yPos + char.size.y) + offset);\r\n\t\t\t\t\t\tmesh.mesh.uvs.push(new Vec2(char.maxUV.x, char.minUV.y));\r\n\t\t\t\t\t\tmesh.mesh.vertices.push(new Vec3(xPos, yPos + char.size.y) + offset);\r\n\t\t\t\t\t\tmesh.mesh.uvs.push(new Vec2(char.minUV.x, char.minUV.y));\r\n\t\t\t\t\t\tmesh.mesh.vertices.push(new Vec3(xPos, yPos) + offset);\r\n\t\t\t\t\t\tmesh.mesh.uvs.push(new Vec2(char.minUV.x, char.maxUV.y));\r\n\r\n\t\t\t\t\t\txPos += char.xAdvance;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tyPos -= text.font.baseLine;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Log.info('Text is ${xPos} units big');\r\n\t\t\t\t//Log.info('There are ${mesh.mesh.vertices.length} vertices in the text mesh!');\r\n\t\t\t\ttext.textDirty = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nclass TimedPromiseProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(TimedPromiseComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\t\r\n\toverride public function onUpdate(data:UpdateEvent):Void {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar t:TimedPromiseComponent = cast entity.get(TimedPromiseComponent.tid);\r\n\r\n\t\t\tt.t += data.dt;\r\n\t\t\tif(t.t >= t.wait && !t.done.isResolved()) {\r\n\t\t\t\tt.finish();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package tusk.lib.proc;\r\n\r\nimport tusk.debug.Log;\r\nimport tusk.Matcher;\r\nimport tusk.Processor;\r\nimport tusk.events.*;\r\nimport tusk.lib.comp.*;\r\n\r\nimport glm.GLM;\r\nimport glm.Mat3;\r\nimport glm.Mat4;\r\n\r\nusing tusk.math.Lerp;\r\n\r\nclass TransformProcessor extends Processor {\r\n\tpublic function new(?entities:Array<Entity>) {\r\n\t\tmatcher = new Matcher().include(TransformComponent.tid);\r\n\t\tsuper(entities);\r\n\t}\r\n\r\n\toverride public function onRender(data:RenderEvent) {\r\n\t\tfor(entity in entities) {\r\n\t\t\tvar t:TransformComponent = cast entity.get(TransformComponent.tid);\r\n\r\n\t\t\t// update the model matrix using alpha interpolation\r\n\t\t\tt.modelMatrix =\r\n\t\t\t\t  GLM.translate(t.lastPosition.LerpV3(t.position, data.alpha))\r\n\t\t\t\t* GLM.scale(t.lastScale.LerpV3(t.scale, data.alpha));\r\n\t\t}\r\n\t}\r\n}","package tusk.math;\r\n\r\nclass Ease {\r\n\tpublic static function InQuad(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c*(t/=d)*t + b;\r\n\t}\r\n\r\n\tpublic static function OutQuad(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn -c *(t/=d)*(t-2) + b;\r\n\t}\r\n\r\n\tpublic static function InOutQuad(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tif ((t/=d/2) < 1) return c/2*t*t + b;\r\n\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\r\n\t}\r\n\r\n\tpublic static function InCubic(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c*(t/=d)*t*t + b;\r\n\t}\r\n\r\n\tpublic static function OutCubic(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c*((t=t/d-1)*t*t + 1) + b;\r\n\t}\r\n\r\n\tpublic static function InOutCubic(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tif ((t/=d/2) < 1) return c/2*t*t*t + b;\r\n\t\treturn c/2*((t-=2)*t*t + 2) + b;\r\n\t}\r\n\r\n\tpublic static function InQuart(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c*(t/=d)*t*t*t + b;\r\n\t}\r\n\r\n\tpublic static function OutQuart(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn -c * ((t=t/d-1)*t*t*t - 1) + b;\r\n\t}\r\n\r\n\tpublic static function InOutQuart(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tif ((t/=d/2) < 1) return c/2*t*t*t*t + b;\r\n\t\treturn -c/2 * ((t-=2)*t*t*t - 2) + b;\r\n\t}\r\n\r\n\tpublic static function InQuint(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c*(t/=d)*t*t*t*t + b;\r\n\t}\r\n\r\n\tpublic static function OutQuint(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c*((t=t/d-1)*t*t*t*t + 1) + b;\r\n\t}\r\n\r\n\tpublic static function InOutQuint(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tif ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;\r\n\t\treturn c/2*((t-=2)*t*t*t*t + 2) + b;\r\n\t}\r\n\r\n\tpublic static function InSine(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn -c * Math.cos(t/d * (Math.PI/2)) + c + b;\r\n\t}\r\n\r\n\tpublic static function OutSine(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c * Math.sin(t/d * (Math.PI/2)) + b;\r\n\t}\r\n\r\n\tpublic static function InOutSine(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;\r\n\t}\r\n\r\n\tpublic static function InExpo(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;\r\n\t}\r\n\r\n\tpublic static function OutExpo(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;\r\n\t}\r\n\r\n\tpublic static function InOutExpo(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tif (t==0) return b;\r\n\t\tif (t==d) return b+c;\r\n\t\tif ((t/=d/2) < 1) return c/2 * Math.pow(2, 10 * (t - 1)) + b;\r\n\t\treturn c/2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n\t}\r\n\r\n\tpublic static function InCirc(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn -c * (Math.sqrt(1 - (t/=d)*t) - 1) + b;\r\n\t}\r\n\r\n\tpublic static function OutCirc(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c * Math.sqrt(1 - (t=t/d-1)*t) + b;\r\n\t}\r\n\r\n\tpublic static function InOutCirc(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tif ((t/=d/2) < 1) return -c/2 * (Math.sqrt(1 - t*t) - 1) + b;\r\n\t\treturn c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;\r\n\t}\r\n\r\n\tpublic static function InElastic(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tvar s:Float=1.70158;var p:Float=0;var a:Float=c;\r\n\t\tif (t==0) return b;  if ((t/=d)==1) return b+c;  p=d*.3;\r\n\t\tif (a < Math.abs(c)) { a=c; var s:Float=p/4; }\r\n\t\telse var s = p/(2*Math.PI) * Math.asin (c/a);\r\n\t\treturn -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;\r\n\t}\r\n\r\n\tpublic static function OutElastic(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tvar s:Float=1.70158;var p:Float=0;var a:Float=c;\r\n\t\tif (t==0) return b;  if ((t/=d)==1) return b+c;  p=d*.3;\r\n\t\tif (a < Math.abs(c)) { a=c; var s:Float=p/4; }\r\n\t\telse var s = p/(2*Math.PI) * Math.asin (c/a);\r\n\t\treturn a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*(2*Math.PI)/p ) + c + b;\r\n\t}\r\n\r\n\tpublic static function InOutElastic(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tvar s:Float=1.70158;var p:Float=0;var a:Float=c;\r\n\t\tif (t==0) return b;  if ((t/=d/2)==2) return b+c;  p=d*(.3*1.5);\r\n\t\tif (a < Math.abs(c)) { a=c; var s:Float=p/4; }\r\n\t\telse var s = p/(2*Math.PI) * Math.asin (c/a);\r\n\t\tif (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;\r\n\t\treturn a*Math.pow(2,-10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )*.5 + c + b;\r\n\t}\r\n\r\n\tpublic static function InBack(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tvar s:Float = 1.70158;\r\n\t\treturn c*(t/=d)*t*((s+1)*t - s) + b;\r\n\t}\r\n\r\n\tpublic static function OutBack(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tvar s:Float = 1.70158;\r\n\t\treturn c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;\r\n\t}\r\n\r\n\tpublic static function InOutBack(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tvar s:Float = 1.70158;\r\n\t\tif ((t/=d/2) < 1) return c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;\r\n\t\treturn c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;\r\n\t}\r\n\r\n\tpublic static function InBounce(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c - OutBounce(d-t, b, c, d) + b;\r\n\t}\r\n\r\n\tpublic static function OutBounce(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tif ((t/=d) < (1/2.75)) {\r\n\t\t\treturn c*(7.5625*t*t) + b;\r\n\t\t} else if (t < (2/2.75)) {\r\n\t\t\treturn c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;\r\n\t\t} else if (t < (2.5/2.75)) {\r\n\t\t\treturn c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;\r\n\t\t} else {\r\n\t\t\treturn c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function InOutBounce(t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\tif (t < d/2) return InBounce(t*2, 0, c, d) * .5 + b;\r\n\t\treturn OutBounce(t*2-d, 0, c, d) * .5 + c*.5 + b;\r\n\t}\r\n}","package tusk.math;\r\n\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\nimport glm.Vec4;\r\n\r\nclass Lerp {\r\n\tpublic static function LerpF(a:Float, b:Float, t:Float):Float {\r\n\t\treturn a + t * (b - a);\r\n\t}\r\n\r\n\tpublic static function LerpV2(a:Vec2, b:Vec2, t:Float):Vec2 {\r\n\t\ta.x = LerpF(a.x, b.x, t);\r\n\t\ta.y = LerpF(a.y, b.y, t);\r\n\t\treturn a;\r\n\t}\r\n\r\n\tpublic static function LerpV3(a:Vec3, b:Vec3, t:Float):Vec3 {\r\n\t\ta.x = LerpF(a.x, b.x, t);\r\n\t\ta.y = LerpF(a.y, b.y, t);\r\n\t\ta.z = LerpF(a.z, b.z, t);\r\n\t\treturn a;\r\n\t}\r\n\r\n\tpublic static function LerpV4(a:Vec4, b:Vec4, t:Float):Vec4 {\r\n\t\ta.x = LerpF(a.x, b.x, t);\r\n\t\ta.y = LerpF(a.y, b.y, t);\r\n\t\ta.z = LerpF(a.z, b.z, t);\r\n\t\ta.w = LerpF(a.w, b.w, t);\r\n\t\treturn a;\r\n\t}\r\n}","package tusk.math;\r\n\r\n/**\r\n * Various tools used to extend functionality in math\r\n */\r\nclass MathTools {\r\n\t/**\r\n\t * \"Clamp\" a number to a specific range so that is never less than `min` nor greater than `max`\r\n\t * @param  x   The number to clamp\r\n\t * @param  min The minimum value that can be returned\r\n\t * @param  max The maximum value that can be returned\r\n\t * @return     The clamped number\r\n\t */\r\n\tpublic static function clamp(x:Float, min:Float, max:Float):Float {\r\n\t\treturn Math.min(max, Math.max(min, x));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert an angle in radians to its equivalent in degrees\r\n\t * @param  x The angle to convert\r\n\t * @return   The angle in degrees\r\n\t */\r\n\tpublic static function toDeg(x:Float):Float {\r\n\t\treturn x * 180 / Math.PI;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Convert an angle in degrees to its equivalent in radians\r\n\t * @param  x The angle to convert\r\n\t * @return   The angle in radians\r\n\t */\r\n\tpublic static function toRad(x:Float):Float {\r\n\t\treturn x * Math.PI / 180;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the absolute value of a number\r\n\t * @param  x The number to process\r\n\t * @return   `|x|`\r\n\t */\r\n\tpublic static function abs(x:Float):Float {\r\n\t\treturn Math.abs(x);\r\n\t}\r\n}","package tusk.math;\r\n\r\n/**\r\n * Static functions for generating random values\r\n */\r\nclass Random\r\n{\r\n\t/**\r\n\t * Flip a coin\r\n\t * @return Random `true` or `false`\r\n\t */\r\n\tpublic static inline function bool():Bool\r\n\t{\r\n\t\treturn Math.random() < 0.5;\r\n\t}\r\n\r\n\t/**\r\n\t * Return a random integer between 'from' and 'to', inclusive.\r\n\t * @param  from The minimum value to return\r\n\t * @param  to   The maximum value to return\r\n\t * @return      The random result\r\n\t */\r\n\tpublic static inline function int(from:Int, to:Int):Int\r\n\t{\r\n\t\treturn from + Math.floor(((to - from + 1) * Math.random()));\r\n\t}\r\n\r\n\t/**\r\n\t * Return a random float between 'from' and 'to', inclusive.\r\n\t * @param  from The minimum value to return\r\n\t * @param  to   The maximum value to return\r\n\t * @return      The random result\r\n\t */\r\n\tpublic static inline function float(from:Float, to:Float):Float\r\n\t{\r\n\t\treturn from + ((to - from) * Math.random());\r\n\t}\r\n}","package tusk.modules;\r\n\r\nimport haxe.ds.StringMap;\r\nimport haxe.io.Bytes;\r\n\r\nimport promhx.Promise;\r\nimport promhx.Deferred;\r\n\r\nimport tusk.debug.*;\r\n\r\nimport tusk.resources.*;\r\n\r\n@:partials(\r\n\ttusk.modules.partials.Textures,\r\n\ttusk.modules.partials.Sounds,\r\n\ttusk.modules.partials.Materials,\r\n\ttusk.modules.partials.Meshes,\r\n\ttusk.modules.partials.Fonts,\r\n\ttusk.modules.partials.Texts)\r\nclass Assets implements partials.Partial {\r\n\tprivate var assets:StringMap<Asset> = new StringMap<Asset>();\r\n\r\n\t@:allow(tusk.Tusk)\r\n\tprivate function new() {}\r\n\r\n\t/**\r\n\t * Utility for determining if an asset has been loaded\r\n\t * @param  path the path of the asset file\r\n\t * @return      whether it has been loaded or not\r\n\t */\r\n\tpublic function isLoaded(path:String):Bool {\r\n\t\tvar exists:Bool = assets.exists(path);\r\n\t\treturn exists;\r\n\t}\r\n}","package partials;\r\n\r\n/**\r\n * Implement this interface to indicate that part of the class is defined somewhere else.\r\n */\r\n@:autoBuild(partials.Partials.process())\r\ninterface Partial {\r\n\t\r\n}","package tusk.modules.partials;\r\n\r\nclass Textures implements partials.Partial {\r\n\t/**\r\n\t * Load a texture. If the texture has already been\r\n\t *  loaded, will return the instance of that texture.\r\n\t * @param  path the path of the texture asset file\r\n\t * @return      A promise which, when fulfilled with return the loaded texture\r\n\t */\r\n\tpublic function loadTexture(path:String, ?bytes:Bytes):Promise<Texture> {\r\n\t\tvar def = new Deferred<Texture>();\r\n\t\tvar promise = def.promise();\r\n\r\n\t\t// check to see if it's already been loaded\r\n\t\tif(isLoaded(path)) {\r\n\t\t\tdef.resolve(getTexture(path));\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\t#if snow\r\n\t\tvar snowPromise:snow.api.Promise;\r\n\r\n\t\tif(bytes == null) {\r\n\t\t\t// load from path\r\n\t\t\tsnowPromise = Tusk.instance.app.assets.image(path);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// load from bytes\r\n\t\t\tsnowPromise = Tusk.instance.app.assets.image_from_bytes(path, snow.api.buffers.Uint8Array.fromBytes(bytes));\r\n\t\t}\r\n\t\t// resolve the promise\r\n\t\tsnowPromise.then(\r\n\t\t\tfunction(image:snow.system.assets.Asset.AssetImage) {\r\n\t\t\t\tvar texture:tusk.resources.Texture = new tusk.resources.Texture(path, image);\r\n\t\t\t\tassets.set(path, texture);\r\n\t\t\t\tdef.resolve(texture);\r\n\t\t\t},\r\n\t\t\tfunction(image:snow.system.assets.Asset.AssetImage) {\r\n\t\t\t\tdef.throwError(new Exception('Unable to load texture \\'${path}\\'!', ExceptionType.FileNotFound));\r\n\t\t\t}\r\n\t\t);\r\n\t\t#else\r\n\t\tdef.throwError(new Exception('Texture loading isn\\'t supported without snow!'));\r\n\t\t#end\r\n\r\n\t\treturn promise;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the instance of an already loaded texture\r\n\t * @param  path the texture path\r\n\t * @return      the previously-loaded texture\r\n\t * @throws tusk.debug.Exception if the texture hasn't been loaded, or if `path` points\r\n\t *                              to an asset which isn't a texture\r\n\t */\r\n\tpublic function getTexture(path:String):Texture {\r\n\t\tif(!assets.exists(path)) {\r\n\t\t\tthrow new Exception('Texture \\'${path}\\' hasn\\'t been loaded yet!', ExceptionType.AssetNotFound);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn cast(assets.get(path), Texture);\r\n\t\t}\r\n\t\tcatch(e:String) {\r\n\t\t\tthrow new Exception('Asset \\'${path}\\' isn\\'t a texture!', ExceptionType.InvalidAssetType);\r\n\t\t}\r\n\t}\r\n}","package tusk.modules.partials;\r\n\r\nclass Sounds implements partials.Partial {\r\n\t/**\r\n\t * Load a sound. If the sound has already been loaded, will return the instance\r\n\t * of that sound.\r\n\t * @param  path the path of the sound asset file\r\n\t * @return      A promise which, when fulfilled with return the loaded sound\r\n\t */\r\n\tpublic function loadSound(path:String):Promise<Sound> {\r\n\t\tvar def = new Deferred<Sound>();\r\n\t\tvar promise = def.promise();\r\n\r\n\t\t// check to see if it's already been loaded\r\n\t\tif(isLoaded(path)) {\r\n\t\t\tdef.resolve(getSound(path));\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\t#if snow\r\n\t\t// it must not have been loaded. Load it!\r\n\t\tTusk.sound.load(path,\r\n\t\t\tfunction(snd:snow.system.audio.Sound) {\r\n\t\t\t\tvar sound:Sound = new Sound(path, snd);\r\n\t\t\t\tassets.set(path, sound);\r\n\t\t\t\tdef.resolve(sound);\r\n\t\t\t},\r\n\t\t\tfunction(snd:snow.system.audio.Sound) {\r\n\t\t\t\tdef.throwError(new Exception('Unable to load sound \\'${path}\\'!', ExceptionType.FileNotFound));\r\n\t\t\t}\r\n\t\t);\r\n\t\t#else\r\n\t\tdef.throwError(new Exception(\"Sound loading isn't supported without snow!\"));\r\n\t\t#end\r\n\r\n\t\treturn promise;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the instance of an already loaded sound\r\n\t * @param  path the sound path\r\n\t * @return      the previously-loaded sound\r\n\t * @throws tusk.debug.Exception if the sound hasn't been loaded, or if `path` points\r\n\t *                              to an asset which isn't a sound\r\n\t */\r\n\tpublic function getSound(path:String):Sound {\r\n\t\tif(!assets.exists(path)) {\r\n\t\t\tthrow new Exception('Sound \\'${path}\\' hasn\\'t been loaded yet!', ExceptionType.AssetNotFound);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn cast(assets.get(path), Sound);\r\n\t\t}\r\n\t\tcatch(e:String) {\r\n\t\t\tthrow new Exception('Asset \\'${path}\\' isn\\'t a sound!', ExceptionType.InvalidAssetType);\r\n\t\t}\r\n\t}\r\n}","package tusk.modules.partials;\r\n\r\nimport tusk.resources.*;\r\n\r\nclass Materials implements partials.Partial {\r\n\tpublic function loadMaterial(path:String, ?material:Material):Promise<Material> {\r\n\t\tvar def:Deferred<Material> = new Deferred<Material>();\r\n\t\tvar promise = def.promise();\r\n\r\n\t\tif(material != null) {\r\n\t\t\t// the material exists! add it straight away\r\n\t\t\tassets.set(path, material);\r\n\t\t\tdef.resolve(material);\r\n\t\t\treturn promise;\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: load materials from file!\r\n\t\tthrow new tusk.debug.Exception(tusk.debug.ExceptionType.NotImplementedYet);\r\n\t}\r\n\r\n\tpublic function getMaterial(path:String):Material {\r\n\t\tif(!assets.exists(path)) {\r\n\t\t\tthrow new Exception('Material \\'${path}\\' hasn\\'t been loaded yet!', ExceptionType.AssetNotFound);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn cast(assets.get(path), Material);\r\n\t\t}\r\n\t\tcatch(e:String) {\r\n\t\t\tthrow new Exception('Asset \\'${path}\\' isn\\'t a material!', ExceptionType.InvalidAssetType);\r\n\t\t}\r\n\t}\r\n}","package tusk.modules.partials;\r\n\r\nimport tusk.resources.*;\r\n\r\nclass Meshes implements partials.Partial {\r\n\tpublic function loadMesh(path:String, ?mesh:Mesh):Promise<Mesh> {\r\n\t\tvar def:Deferred<Mesh> = new Deferred<Mesh>();\r\n\t\tvar promise = def.promise();\r\n\r\n\t\tif(mesh != null) {\r\n\t\t\t// the mesh exists! add it straight away\r\n\t\t\tassets.set(path, mesh);\r\n\t\t\tdef.resolve(mesh);\r\n\t\t\treturn promise;\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: load meshes from file!\r\n\t\tthrow new tusk.debug.Exception(tusk.debug.ExceptionType.NotImplementedYet);\r\n\t}\r\n\r\n\tpublic function getMesh(path:String):Mesh {\r\n\t\tif(!assets.exists(path)) {\r\n\t\t\tthrow new Exception('Mesh \\'${path}\\' hasn\\'t been loaded yet!', ExceptionType.AssetNotFound);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn cast(assets.get(path), Mesh);\r\n\t\t}\r\n\t\tcatch(e:String) {\r\n\t\t\tthrow new Exception('Asset \\'${path}\\' isn\\'t a mesh!', ExceptionType.InvalidAssetType);\r\n\t\t}\r\n\t}\r\n}","package tusk.modules.partials;\r\n\r\nimport tusk.resources.*;\r\n\r\nclass Fonts implements partials.Partial {\r\n\r\n\tpublic function loadFont(path:String, ?fntContents:String, ?texture:Texture):Promise<Font> {\r\n\t\tvar def:Deferred<Font> = new Deferred<Font>();\r\n\t\tvar promise = def.promise();\r\n\r\n\t\t// check to see if it's already been loaded\r\n\t\tif(isLoaded(path)) {\r\n\t\t\tdef.resolve(getFont(path));\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\t#if snow\r\n\t\tvar snowPromise:snow.api.Promise;\r\n\r\n\t\tif(fntContents == null) {\r\n\t\t\t// load from path\r\n\t\t\tsnowPromise = Tusk.instance.app.assets.text(path);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// load from string\r\n\t\t\tsnowPromise = new snow.api.Promise(function(resolve, reject) {\r\n\t\t\t\tresolve(fntContents);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// resolve the promise\r\n\t\tsnowPromise.then(\r\n\t\t \tfunction(contents:String) {\r\n\t\t\t\t// process the contents into a font\r\n\t\t\t\tFont.load(path, contents, texture).then(function(font:Font) {\r\n\t\t\t\t\t// store it\r\n\t\t\t\t\tassets.set(path, font);\r\n\t\t\t\t\tdef.resolve(font);\r\n\t\t\t\t}).catchError(function(err:Dynamic) {\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tfunction(contents:String) {\r\n\t\t\t\tdef.throwError(new Exception('Unable to load font \\'${path}\\'!', ExceptionType.FileNotFound));\r\n\t\t\t}\r\n\t\t);\r\n\t\t#else\r\n\t\tdef.throwError(new Exception('Font loading isn\\'t supported without snow!'));\r\n\t\t#end\r\n\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tpublic function getFont(path:String):Font {\r\n\t\tif(!assets.exists(path)) {\r\n\t\t\tthrow new Exception('Font \\'${path}\\' hasn\\'t been loaded yet!', ExceptionType.AssetNotFound);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn cast(assets.get(path), Font);\r\n\t\t}\r\n\t\tcatch(e:String) {\r\n\t\t\tthrow new Exception('Asset \\'${path}\\' isn\\'t a font!', ExceptionType.InvalidAssetType);\r\n\t\t}\r\n\t}\r\n}","package tusk.modules.partials;\r\n\r\nimport tusk.resources.*;\r\n\r\nclass Texts implements partials.Partial {\r\n\r\n\tpublic function loadText(path:String, ?contents:String):Promise<Text> {\r\n\t\tvar def:Deferred<Text> = new Deferred<Text>();\r\n\t\tvar promise = def.promise();\r\n\r\n\t\t// check to see if it's already been loaded\r\n\t\tif(isLoaded(path)) {\r\n\t\t\tdef.resolve(getText(path));\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\t#if snow\r\n\t\tvar snowPromise:snow.api.Promise;\r\n\r\n\t\tif(contents == null) {\r\n\t\t\t// load from path\r\n\t\t\tsnowPromise = Tusk.instance.app.assets.text(path);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// load from string\r\n\t\t\tsnowPromise = new snow.api.Promise(function(resolve, reject) {\r\n\t\t\t\tresolve(contents);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// resolve the promise\r\n\t\tsnowPromise.then(\r\n\t\t \tfunction(snowText:snow.system.assets.Asset.AssetText) {\r\n\t\t \t\tvar text:Text = new Text(path, snowText.text);\r\n\t\t\t\tassets.set(path, text);\r\n\t\t\t\tdef.resolve(text);\r\n\t\t\t},\r\n\t\t\tfunction(contents:snow.system.assets.Asset.AssetText) {\r\n\t\t\t\tdef.throwError(new Exception('Unable to load text \\'${path}\\'!', ExceptionType.FileNotFound));\r\n\t\t\t}\r\n\t\t);\r\n\t\t#else\r\n\t\tdef.throwError(new Exception('Text loading isn\\'t supported without snow!'));\r\n\t\t#end\r\n\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tpublic function getText(path:String):Text {\r\n\t\tif(!assets.exists(path)) {\r\n\t\t\tthrow new Exception('Text \\'${path}\\' hasn\\'t been loaded yet!', ExceptionType.AssetNotFound);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn cast(assets.get(path), Text);\r\n\t\t}\r\n\t\tcatch(e:String) {\r\n\t\t\tthrow new Exception('Asset \\'${path}\\' isn\\'t a text!', ExceptionType.InvalidAssetType);\r\n\t\t}\r\n\t}\r\n}","package tusk.modules;\r\n\r\nimport tusk.debug.Log;\r\n\r\n/**\r\n * Responsible for loading, unloading, and playing sounds in tusk\r\n */\r\nclass Sound {\r\n\t@:allow(tusk.Tusk)\r\n\tprivate function new() {}\r\n\r\n\t/**\r\n\t * Loads a sound, and alerts a callback when it has loaded\r\n\t * @param  path            the relative filename of the sound to load\r\n\t * @param  onLoadComplete  a callback of the form `Void->Void` which takes the sound ID and is called\r\n\t *                         when the sound has finished loading\r\n\t */\r\n\t@:allow(tusk.modules.Assets)\r\n    #if snow\r\n    private function load(path:String, onLoadComplete:snow.system.audio.Sound->Void, onError:snow.system.audio.Sound->Void) {\r\n\t\tTusk.instance.app.audio.create(path, path)\r\n\t\t\t.then(function(sound:snow.system.audio.Sound) {\r\n\t\t\t\tLog.trace(\"Loaded sound: \" + path);\r\n\t\t\t\tonLoadComplete(sound);\r\n\t\t\t}, function(sound:snow.system.audio.Sound) {\r\n\t\t\t\t//Log.error(\"Failed to load sound: \" + path);\r\n\t\t\t\tonError(sound);\r\n\t\t\t});\r\n    }\r\n    #else\r\n    private function load(path:String, onLoadComplete:Dynamic->Void, onError:Dynamic->Void){}\r\n\t#end\r\n\r\n    /**\r\n     * Plays a loaded sound\r\n     * @param  id the string-based ID of the sound\r\n     */\r\n    public function play(sound:tusk.resources.Sound) {\r\n    \t#if snow\r\n        Tusk.instance.app.audio.play(sound.path);\r\n        #end\r\n    }\r\n\r\n    public function stop(sound:tusk.resources.Sound) {\r\n    \t#if snow\r\n    \tTusk.instance.app.audio.stop(sound.path);\r\n    \t#end\r\n    }\r\n}","package tusk.modules.tiled;\r\n\r\nimport haxe.Json;\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\nimport glm.Vec4;\r\nimport promhx.Promise;\r\nimport tusk.resources.Mesh;\r\nimport tusk.debug.Log;\r\n\r\n@:enum abstract TileMapOrientation(String) {\r\n\tvar Orthogonal = 'orthogonal';\r\n\tvar Isometric = 'isometric';\r\n\tvar Staggered = 'staggered';\r\n}\r\n\r\n@:enum abstract TileMapRenderOrder(String) {\r\n\tvar RightDown = 'right-down';\r\n\tvar RightUp = 'right-up';\r\n\tvar LeftDown = 'left-down';\r\n\tvar LeftUp = 'left-up';\r\n}\r\n\r\nclass TileMap {\r\n\tpublic var width:Int;\r\n\tpublic var height:Int;\r\n\tpublic var tilewidth:Int;\r\n\tpublic var tileheight:Int;\r\n\tpublic var orientation:TileMapOrientation;\r\n\tpublic var layers:Array<Layer>;\r\n\tpublic var tilesets:Array<TileSet>;\r\n\tpublic var backgroundcolor:Vec4;\r\n\tpublic var renderorder:TileMapRenderOrder;\r\n\tpublic var properties:Dynamic;\r\n\tpublic var nextobjectid:Int;\r\n\tpublic var version:Int;\r\n\r\n\tpublic function new(){}\r\n\r\n\tpublic static function fromJSON(json:String):TileMap {\r\n\t\tvar tm:TileMap = cast Json.parse(json);\r\n\t\treturn tm;\r\n\t}\r\n\r\n\tpublic static function buildMesh(tm:TileMap, path:String, zSpacing:Float=0.1):Promise<Mesh> {\r\n\t\tvar m:Mesh = new Mesh(path);\r\n\t\tm.vertices = new Array<Vec3>();\r\n\t\tm.uvs = new Array<Vec2>();\r\n\r\n\t\t// figure out the tiles\r\n\t\t// only deal with singular tilesets for now\r\n\t\tif(tm.tilesets.length != 1) {\r\n\t\t\tthrow new tusk.debug.Exception('TileMap loader can only deal with singular tilesets for now!');\r\n\t\t}\r\n\t\tvar tileSize:Vec2 = new Vec2(tm.tilesets[0].tilewidth, tm.tilesets[0].tileheight);\r\n\t\tvar tileSizeInUV:Vec2 = new Vec2(\r\n\t\t\ttm.tilesets[0].tilewidth / tm.tilesets[0].imagewidth,\r\n\t\t\ttm.tilesets[0].tileheight / tm.tilesets[0].imageheight\r\n\t\t);\r\n\t\tvar tileUVBases:Array<Vec2> = new Array<Vec2>();\r\n\t\ttileUVBases.push(null); // the 'empty' tile\r\n\t\t// build the tileset!\r\n\t\tvar tilePos:Vec2 = new Vec2(0, 0);\r\n\t\twhile(tilePos.y < tm.tilesets[0].imageheight) {\r\n\t\t\ttilePos.x = 0;\r\n\t\t\twhile(tilePos.x < tm.tilesets[0].imagewidth) {\r\n\t\t\t\ttileUVBases.push(new Vec2(\r\n\t\t\t\t\ttilePos.x / tm.tilesets[0].imagewidth,\r\n\t\t\t\t\ttilePos.y / tm.tilesets[0].imageheight\r\n\t\t\t\t));\r\n\t\t\t\ttilePos.x += tm.tilesets[0].tilewidth;\r\n\t\t\t}\r\n\t\t\ttilePos.y += tm.tilesets[0].tileheight;\r\n\t\t}\r\n\r\n\t\t// now build the actual vertices\r\n\t\tvar pos:Vec3 = new Vec3(0, 0, 0);\r\n\t\tfor(layer in tm.layers) {\r\n\t\t\tif(layer.type != tusk.modules.tiled.Layer.LayerType.Tile) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// now build the layer!\r\n\t\t\tpos.x = 0;\r\n\t\t\tpos.y = (layer.height - 1) * tileSize.y;\r\n\t\t\tfor(gid in layer.data) {\r\n\t\t\t\t// skip empty tiles\r\n\t\t\t\tif(gid != 0) {\r\n\t\t\t\t\t//    2\r\n\t\t\t\t\t//  / |\r\n\t\t\t\t\t// 0--1\r\n\t\t\t\t\tm.vertices.push(new Vec3(pos.x, pos.y, pos.z));\r\n\t\t\t\t\tm.uvs.push(new Vec2(tileUVBases[gid].x, tileUVBases[gid].y + tileSizeInUV.y));\r\n\r\n\t\t\t\t\tm.vertices.push(new Vec3(pos.x + tileSize.x, pos.y, pos.z));\r\n\t\t\t\t\tm.uvs.push(new Vec2(tileUVBases[gid].x + tileSizeInUV.x, tileUVBases[gid].y + tileSizeInUV.y));\r\n\r\n\t\t\t\t\tm.vertices.push(new Vec3(pos.x + tileSize.x, pos.y + tileSize.y, pos.z));\r\n\t\t\t\t\tm.uvs.push(new Vec2(tileUVBases[gid].x + tileSizeInUV.x, tileUVBases[gid].y));\r\n\r\n\t\t\t\t\t// 1--0\r\n\t\t\t\t\t// | /  \r\n\t\t\t\t\t// 2   \r\n\t\t\t\t\tm.vertices.push(new Vec3(pos.x + tileSize.x, pos.y + tileSize.y, pos.z));\r\n\t\t\t\t\tm.uvs.push(new Vec2(tileUVBases[gid].x + tileSizeInUV.x, tileUVBases[gid].y));\r\n\r\n\t\t\t\t\tm.vertices.push(new Vec3(pos.x, pos.y + tileSize.y, pos.z));\r\n\t\t\t\t\tm.uvs.push(new Vec2(tileUVBases[gid].x, tileUVBases[gid].y));\r\n\r\n\t\t\t\t\tm.vertices.push(new Vec3(pos.x, pos.y, pos.z));\r\n\t\t\t\t\tm.uvs.push(new Vec2(tileUVBases[gid].x, tileUVBases[gid].y + tileSizeInUV.y));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpos.x += tileSize.x;\r\n\t\t\t\tif(pos.x >= (layer.width * tileSize.x)) {\r\n\t\t\t\t\tpos.x = 0;\r\n\t\t\t\t\tpos.y -= tileSize.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpos.z += zSpacing;\r\n\t\t}\r\n\r\n\t\treturn Tusk.assets.loadMesh(path, m);\r\n\t}\r\n}","package tusk.resources;\r\n\r\nclass Asset {\r\n\t/**\r\n\t * The asset's path, used as its identifier\r\n\t */\r\n\tpublic var path(default, null):String;\r\n\r\n\tpublic function new(path:String) {\r\n\t\tthis.path = path;\r\n\t}\r\n}","package tusk.resources;\r\n\r\nimport haxe.io.Path;\r\nimport haxe.ds.IntMap;\r\n\r\nimport glm.Vec2;\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\n\r\nusing StringTools;\r\n\r\nclass FontChar {\r\n\tpublic var id:Int;\r\n\tpublic var minUV:Vec2 = new Vec2();\r\n\tpublic var maxUV:Vec2 = new Vec2();\r\n\tpublic var size:Vec2 = new Vec2();\r\n\tpublic var offset:Vec2 = new Vec2();\r\n\tpublic var xAdvance:Float;\r\n\r\n\tpublic function new(){}\r\n}\r\n\r\nclass Font extends Asset {\r\n\tpublic var face:String;\r\n\tpublic var size:Float;\r\n\r\n\tpublic var lineHeight:Float;\r\n\tpublic var baseLine:Float;\r\n\r\n\tpublic var imageWidth:Float;\r\n\tpublic var imageHeight:Float;\r\n\tpublic var imageFileName:String;\r\n\tpublic var texture(default, null):Texture;\r\n\r\n\tpublic var chars(default, null):IntMap<FontChar> = new IntMap<FontChar>();\r\n\r\n\t#if snow\r\n\tpublic static function load(path:String, contents:String, ?texture:Texture):Promise<Font> {\r\n\t\tvar def:Deferred<Font> = new Deferred<Font>();\r\n\t\tvar promise = def.promise();\r\n\t\tvar font:Font = new Font(path);\r\n\r\n\t\tvar lines:Array<String> = contents.split('\\n');\r\n\t\tfor(line in lines) {\r\n\t\t\tvar parts:Array<String> = line.split(' ');\r\n\t\t\tif(parts.length < 1) continue;\r\n\t\t\tswitch(parts[0]) {\r\n\t\t\t\tcase 'info': {\r\n\t\t\t\t\tfor(infoPart in parts) {\r\n\t\t\t\t\t\tvar infoValue:Array<String> = infoPart.split('=');\r\n\t\t\t\t\t\tif(infoValue.length != 2) continue;\r\n\t\t\t\t\t\tswitch(infoValue[0]) {\r\n\t\t\t\t\t\t\tcase 'face': font.face = infoValue[1];\r\n\t\t\t\t\t\t\tcase 'size': font.size = Std.parseFloat(infoValue[1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcase 'common': {\r\n\t\t\t\t\tfor(commonPart in parts) {\r\n\t\t\t\t\t\tvar commonValue:Array<String> = commonPart.split('=');\r\n\t\t\t\t\t\tif(commonValue.length != 2) continue;\r\n\t\t\t\t\t\tswitch(commonValue[0]) {\r\n\t\t\t\t\t\t\tcase 'lineHeight': font.lineHeight = Std.parseFloat(commonValue[1]);\r\n\t\t\t\t\t\t\tcase 'base': font.baseLine = Std.parseFloat(commonValue[1]);\r\n\t\t\t\t\t\t\tcase 'scaleW': font.imageWidth = Std.parseFloat(commonValue[1]);\r\n\t\t\t\t\t\t\tcase 'scaleH': font.imageHeight = Std.parseFloat(commonValue[1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcase 'page': {\r\n\t\t\t\t\tfor(charPart in parts) {\r\n\t\t\t\t\t\tvar pageValue:Array<String> = charPart.split('=');\r\n\t\t\t\t\t\tif(pageValue.length != 2) continue;\r\n\t\t\t\t\t\tswitch(pageValue[0]) {\r\n\t\t\t\t\t\t\tcase 'file': font.imageFileName = pageValue[1].replace('\"', '');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcase 'char': {\r\n\t\t\t\t\tvar char:FontChar = new FontChar();\r\n\t\t\t\t\tfor(part in parts) {\r\n\t\t\t\t\t\tvar charValue:Array<String> = part.split('=');\r\n\t\t\t\t\t\tif(charValue.length != 2) continue;\r\n\t\t\t\t\t\tswitch(charValue[0]) {\r\n\t\t\t\t\t\t\tcase 'id': char.id = Std.parseInt(charValue[1]);\r\n\t\t\t\t\t\t\tcase 'x': char.minUV.x = Std.parseFloat(charValue[1]) / font.imageWidth;\r\n\t\t\t\t\t\t\tcase 'y': char.minUV.y = Std.parseFloat(charValue[1]) / font.imageHeight;\r\n\t\t\t\t\t\t\tcase 'width': char.size.x = Std.parseFloat(charValue[1]);\r\n\t\t\t\t\t\t\tcase 'height': char.size.y = Std.parseFloat(charValue[1]);\r\n\t\t\t\t\t\t\tcase 'xoffset': char.offset.x = Std.parseFloat(charValue[1]);\r\n\t\t\t\t\t\t\tcase 'yoffset': char.offset.y = Std.parseFloat(charValue[1]);\r\n\t\t\t\t\t\t\tcase 'xadvance': char.xAdvance = Std.parseFloat(charValue[1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchar.maxUV = char.minUV.clone().addVec2(\r\n\t\t\t\t\t\tnew Vec2(char.size.x / font.imageWidth, char.size.y / font.imageHeight));\r\n\t\t\t\t\tfont.chars.set(char.id, char);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ok, font information should be loaded\r\n\t\t// now load the texture\r\n\t\t/*if(texture == null) {\r\n\t\t\tvar basePath:String = Path.directory(path);\r\n\t\t\tvar texturePath:String = Path.join([basePath, font.imageFileName]);\r\n\t\t\tTusk.assets.loadTexture(texturePath).then(function(fontTexture:Texture) {\r\n\t\t\t\tfont.texture = fontTexture;\r\n\t\t\t\tdef.resolve(font);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {*/\r\n\t\tif(texture != null) {\r\n\t\t\tfont.texture = texture;\r\n\t\t\tdef.resolve(font);\r\n\t\t}\r\n\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tprivate function new(path:String) {\r\n\t\tsuper(path);\r\n\t}\r\n\t#else\r\n\tprivate function new(path:String) {\r\n\t\tsuper(path);\r\n\t}\r\n\t#end\r\n}","package tusk.resources;\r\n\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\nimport glm.Vec4;\r\nimport glm.Mat4;\r\n\r\nimport haxe.EnumFlags;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\nimport snow.modules.opengl.GL.GLBuffer;\r\n#end\r\n\r\ntypedef SetupRenderUniformsCallback = Material->Void;\r\n#if snow\r\ntypedef RenderCallback = SetupRenderUniformsCallback->GLBuffer->Int->Void;\r\n#else\r\ntypedef RenderCallback = SetupRenderUniformsCallback->Int->Int->Void;\r\n#end\r\n\r\nenum AttributeTypes {\r\n\tPos3;\r\n\tUV;\r\n\tColour4;\r\n}\r\n\r\n/**\r\n * Defines a material\r\n */\r\nclass Material extends Asset {\r\n\t/**\r\n\t * The shader that the material uses\r\n\t */\r\n\tpublic var shader(default, null):Shader;\r\n\r\n\t/**\r\n\t * A callback function to be used when rendering this material\r\n\t */\r\n\tpublic var onRender:RenderCallback = null;\r\n\r\n\t/**\r\n\t * An array of textures used by the material\r\n\t */\r\n\tpublic var textures:Array<Texture> = null;\r\n\r\n\t/**\r\n\t * Keep track of what types of common attributes the material has, for\r\n\t * the normal mesh processor.\r\n\t */\r\n\tpublic var attributeFlags:EnumFlags<AttributeTypes> = new EnumFlags<AttributeTypes>();\r\n\r\n\tpublic function clone(newPath:String):Material {\r\n\t\tvar m:Material = new Material(newPath, this.shader);\r\n\t\tm.onRender = this.onRender;\r\n\t\tif(this.textures != null) {\r\n\t\t\tm.textures = new Array<Texture>();\r\n\t\t\tfor(texture in this.textures) {\r\n\t\t\t\tm.textures.push(texture);\r\n\t\t\t}\r\n\t\t}\r\n\t\tm.attributeFlags = this.attributeFlags;\r\n\t\treturn m;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new material!\r\n\t * @param  shader The material's shader. If not compiled, the material will compile it automatically.\r\n\t */\r\n\tpublic function new(path:String, shader:Shader) {\r\n\t\tsuper(path);\r\n\t\tthis.shader = shader;\r\n\t\tif(this.shader.program == null) {\r\n\t\t\tthis.shader.compile();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setFloat(name:String, v:Float) {\r\n\t\t#if snow\r\n\t\tvar location:GLUniformLocation = shader.getUniformLocation(name);\r\n\t\tGL.uniform1f(location, v);\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic function setVec2(name:String, vec:Vec2) {\r\n\t\t#if snow\r\n\t\tvar location:GLUniformLocation = shader.getUniformLocation(name);\r\n\t\tGL.uniform2f(location, vec.x, vec.y);\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic function setVec3(name:String, vec:Vec3) {\r\n\t\t#if snow\r\n\t\tvar location:GLUniformLocation = shader.getUniformLocation(name);\r\n\t\tGL.uniform3f(location, vec.x, vec.y, vec.z);\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic function setVec4(name:String, vec:Vec4) {\r\n\t\t#if snow\r\n\t\tvar location:GLUniformLocation = shader.getUniformLocation(name);\r\n\t\tGL.uniform4f(location, vec.x, vec.y, vec.z, vec.w);\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Set a uniform matrix4x4 on the material\r\n\t * @param name      The name of the uniform representing the matrix\r\n\t * @param matrix    The matrix data (4x4!)\r\n\t * @param transpose Whether the matrix should be transposed or not\r\n\t */\r\n\tpublic function setMat4(name:String, matrix:Mat4, transpose:Bool = false) {\r\n\t\t#if snow\r\n\t\tvar location:GLUniformLocation = shader.getUniformLocation(name);\r\n\t\tGL.uniformMatrix4fv(location, transpose, new snow.api.buffers.Float32Array(matrix.toArrayColMajor()));\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Uses GL to set a texture in the shaders\r\n\t * @param name the name of the texture to set\r\n\t * @param ndx  which slot to place it in\r\n\t */\r\n\tpublic function setTexture(name:String, ndx:Int) {\r\n\t\t#if snow\r\n\t\tvar location:GLUniformLocation = shader.getUniformLocation(name);\r\n\t\tGL.uniform1i(location, ndx);\r\n\t\t#end\r\n\t}\r\n}","package tusk.resources;\r\n\r\nimport glm.Vec2;\r\nimport glm.Vec3;\r\nimport glm.Vec4;\r\n\r\nclass Mesh extends Asset {\r\n\tpublic var vertices:Array<Vec3>;\r\n\tpublic var uvs:Array<Vec2>;\r\n\tpublic var colours:Array<Vec4>;\r\n\r\n\tpublic function new(path:String) {\r\n\t\tsuper(path);\r\n\t}\r\n\r\n\tpublic function clone(newPath:String):Mesh {\r\n\t\tvar m:Mesh = new Mesh(newPath);\r\n\t\tif(vertices != null) {\r\n\t\t\tm.vertices = new Array<Vec3>();\r\n\t\t\tfor(vertex in vertices) {\r\n\t\t\t\tm.vertices.push(vertex.clone());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(uvs != null) {\r\n\t\t\tm.uvs = new Array<Vec2>();\r\n\t\t\tfor(uv in uvs) {\r\n\t\t\t\tm.uvs.push(uv.clone());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(colours != null) {\r\n\t\t\tm.colours = new Array<Vec4>();\r\n\t\t\tfor(colour in colours) {\r\n\t\t\t\tm.colours.push(colour.clone());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn m;\r\n\t}\r\n}","package tusk.resources;\r\n\r\nimport tusk.debug.Exception;\r\nimport tusk.debug.Log;\r\n\r\n#if snow\r\nimport snow.modules.opengl.GL;\r\n#else\r\n@:dox(hide)\r\ntypedef GLProgram = String;\r\n@:dox(hide)\r\ntypedef GLUniformLocation = Int;\r\n#end\r\n\r\n/**\r\n * Defines a GL shader\r\n */\r\nclass Shader extends Asset {\r\n\t/**\r\n\t * The vertex shader source\r\n\t * After changing this, don't forget to recompile!\r\n\t */\r\n\tpublic var vertSrc:String;\r\n\r\n\t/**\r\n\t * The fragment shader source\r\n\t * After changing this, don't forget to recompile!\r\n\t */\r\n\tpublic var fragSrc:String;\r\n\r\n\t/**\r\n\t * The program that this shader compiled into\r\n\t */\r\n\tpublic var program(default, null):GLProgram;\r\n\r\n\t/**\r\n\t * Construct a new shader with the given vertex and fragment sources.\r\n\t * **Note:** you must compile this to use it!\r\n\t * @param  path     an identifier for the shader\r\n\t * @param  ?vertSrc a string containing the vertex shader source\r\n\t * @param  ?fragSrc a string containing the fragment shader source\r\n\t */\r\n\tpublic function new(path:String, ?vertSrc:String, ?fragSrc:String) {\r\n\t\tsuper(path);\r\n\t\tthis.vertSrc = vertSrc;\r\n\t\tthis.fragSrc = fragSrc;\r\n\t}\r\n\r\n\t/**\r\n\t * Compiles the shader\r\n\t * @return [description]\r\n\t */\r\n\tpublic function compile():GLProgram {\r\n\t\t#if snow\r\n\t\tif(vertSrc == null) {\r\n\t\t\tthrow new Exception(\"Error compiling shader '\" + path + \"'.vertex: source must be set first!\");\r\n\t\t}\r\n\t\tif(fragSrc == null) {\r\n\t\t\tthrow new Exception(\"Error compiling shader '\" + path + \"'.fragment: source must be set first!\");\r\n\t\t}\r\n\r\n\t\tLog.trace(\"Compiling shader '\" + path + \"' components...\");\r\n\r\n\t\tvar vShader:GLShader = GL.createShader(GL.VERTEX_SHADER);\r\n\t\tGL.shaderSource(vShader, vertSrc);\r\n\t\tGL.compileShader(vShader);\r\n\t\tif(GL.getShaderParameter(vShader, GL.COMPILE_STATUS) == 0) {\r\n\t\t\tthrow new Exception(\"Error compiling shader '\" + path + \"'.vertex:\\n\" + GL.getShaderInfoLog(vShader));\r\n\t\t}\r\n\r\n\t\tvar fShader:GLShader = GL.createShader(GL.FRAGMENT_SHADER);\r\n\t\tGL.shaderSource(fShader, fragSrc);\r\n\t\tGL.compileShader(fShader);\r\n\t\tif(GL.getShaderParameter(fShader, GL.COMPILE_STATUS) == 0) {\r\n\t\t\tthrow new Exception(\"Error compiling shader '\" + path + \"'.fragment:\\n\" + GL.getShaderInfoLog(fShader));\r\n\t\t}\r\n\r\n\t\tLog.trace(\"Shader '\" + path + \"' components compiled!\");\r\n\t\tLog.trace(\"Linking shader '\" + path + \"' components...\");\r\n\r\n\t\tprogram = GL.createProgram();\r\n\t\tGL.attachShader(program, vShader);\r\n\t\tGL.attachShader(program, fShader);\r\n\t\tGL.linkProgram(program);\r\n\t\tif(GL.getProgramParameter(program, GL.LINK_STATUS) == 0) {\r\n\t\t\tthrow new Exception(\"Error linking shader '\" + path + \"': \" + GL.getProgramInfoLog(program));\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\t\t#else\r\n\t\treturn \"\";\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Get's the location of the specified attribute in the compiled shader\r\n\t * @param  attribute the name of the attribute (matching its spelling in the shader source) to find\r\n\t * @return           the locatino of the attribute in the program\r\n\t */\r\n\tpublic function getAttributeLocation(attribute:String):Int {\r\n\t\t#if snow\r\n\t\tif(program == null) {\r\n\t\t\tthrow new Exception(\"Shader '\"+path+\"' must be compiled before attribute '\"+attribute+\"' can be accessed!\");\r\n\t\t}\r\n\t\treturn GL.getAttribLocation(program, attribute);\r\n\t\t#else\r\n\t\treturn 0;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Get's the location of the specified uniform in the compiled shader\r\n\t * @param  uniform  the name of the uniform (matching its spelling in the shader source) to find\r\n\t * @return          the locatino of the uniform in the program\r\n\t */\r\n\tpublic function getUniformLocation(uniform:String):GLUniformLocation {\r\n\t\t#if snow\r\n\t\tif(program == null) {\r\n\t\t\tthrow new Exception(\"Shader '\"+path+\"' must be compiled before uniform '\"+uniform+\"' can be accessed!\");\r\n\t\t}\r\n\t\treturn GL.getUniformLocation(program, uniform);\r\n\t\t#else\r\n\t\treturn 0;\r\n\t\t#end\r\n\t}\r\n}","package tusk.resources;\r\n\r\nclass Sound extends Asset {\r\n\t#if snow\r\n\tprivate var sound:snow.system.audio.Sound;\r\n\t#end\r\n\r\n\t#if snow\r\n\tpublic function new(path:String, sound:snow.system.audio.Sound) {\r\n\t\tsuper(path);\r\n\t\tthis.sound = sound;\r\n\t}\r\n\t#else\r\n\tpublic function new(path:String, sound:Dynamic) {\r\n\t\tsuper(path);\r\n\t}\r\n\t#end\r\n\r\n\t/**\r\n\t * Callback to be used when the sound is finished playing\r\n\t */\r\n    public var onEnd(default, set):Void->Void = null;\r\n    #if snow\r\n    private var onEndHandler:snow.system.audio.Sound->Void;\r\n    #end\r\n    public function set_onEnd(cb:Void->Void) {\r\n    \t#if snow\r\n    \tif(cb != null) {\r\n    \t\tonEndHandler = function(_) { cb(); };\r\n    \t\tsound.on('end', onEndHandler);\r\n    \t}\r\n    \telse {\r\n    \t\tsound.off('end', onEndHandler);\r\n    \t}\r\n    \t#end\r\n    \treturn onEnd = cb;\r\n    }\r\n}","package tusk.resources;\r\n\r\nclass Text extends Asset {\r\n\tpublic var text:String;\r\n\r\n\tpublic function new(path:String, ?text:String) {\r\n\t\tsuper(path);\r\n\t\tthis.text = text;\r\n\t}\r\n}","package tusk.resources;\r\n\r\nclass Texture extends Asset {\r\n\t#if snow\r\n\tprivate var image:snow.system.assets.Asset.AssetImage;\r\n\tpublic var texture(default, null):snow.modules.opengl.GL.GLTexture;\r\n\t#end\r\n\r\n\tpublic var width:Int = 0;\r\n\tpublic var height:Int = 0;\r\n\r\n\t#if snow\r\n\tpublic function new(path:String, image:snow.system.assets.Asset.AssetImage) {\r\n\t\tsuper(path);\r\n\t\tthis.image = image;\r\n\t\tthis.width = image.image.width;\r\n\t\tthis.height = image.image.height;\r\n\r\n        texture = snow.modules.opengl.GL.createTexture();\r\n        snow.modules.opengl.GL.bindTexture(snow.modules.opengl.GL.TEXTURE_2D, texture);\r\n        snow.modules.opengl.GL.texImage2D(\r\n            snow.modules.opengl.GL.TEXTURE_2D,\r\n            0, snow.modules.opengl.GL.RGBA,\r\n            image.image.width, image.image.height,\r\n            0, snow.modules.opengl.GL.RGBA,\r\n            snow.modules.opengl.GL.UNSIGNED_BYTE, image.image.pixels);\r\n        snow.modules.opengl.GL.texParameteri(snow.modules.opengl.GL.TEXTURE_2D, snow.modules.opengl.GL.TEXTURE_MAG_FILTER, snow.modules.opengl.GL.NEAREST);\r\n        snow.modules.opengl.GL.texParameteri(snow.modules.opengl.GL.TEXTURE_2D, snow.modules.opengl.GL.TEXTURE_MIN_FILTER, snow.modules.opengl.GL.NEAREST);\r\n        snow.modules.opengl.GL.bindTexture (snow.modules.opengl.GL.TEXTURE_2D, null);\r\n\t}\r\n\t#else\r\n\tpublic function new(path:String, image:Dynamic) {\r\n\t\tsuper(path);\r\n\t}\r\n\t#end\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\tprivate static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\tprivate static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\tprivate static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\tstatic function abs(v:Float):Float;\n\tstatic function acos(v:Float):Float;\n\tstatic function asin(v:Float):Float;\n\tstatic function atan(v:Float):Float;\n\tstatic function atan2(y:Float, x:Float):Float;\n\tstatic function ceil(v:Float):Int;\n\tstatic function cos(v:Float):Float;\n\tstatic function exp(v:Float):Float;\n\tstatic function floor(v:Float):Int;\n\tstatic function log(v:Float):Float;\n\tstatic function max(a:Float, b:Float):Float;\n\tstatic function min(a:Float, b:Float):Float;\n\tstatic function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\tstatic function round(v:Float):Int;\n\tstatic function sin(v:Float):Float;\n\tstatic function sqrt(v:Float):Float;\n\tstatic function tan(v:Float):Float;\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\tstatic inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\tstatic inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","package tusk.macros;\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\n#if !docgen\r\nimport sys.FileSystem;\r\n#end\r\n\r\nusing StringTools;\r\n\r\n/**\r\n * For code-completion of asset files in the project\r\n *\r\n * @see http://blog.stroep.nl/2014/01/haxe-macros/\r\n */\r\n@:noCompletion class AssetFilesBuilder {\r\n    macro public static function build(dir:String):Array<Field> {\r\n        var fields = Context.getBuildFields();\r\n\r\n        #if !docgen\r\n        // get all the files in the folder\r\n        var fileRefs:Array<FileRef> = recurseReadFiles(dir, dir);\r\n\r\n        // add the fields to the class\r\n        for(fileRef in fileRefs) {\r\n            fields.push({\r\n                name: fileRef.name,\r\n                doc: fileRef.documentation,\r\n                access: [Access.APublic, Access.AStatic, Access.AInline],\r\n                pos: Context.currentPos(),\r\n                kind: FieldType.FVar(macro: String, macro $v{fileRef.value})\r\n            });\r\n        }\r\n\r\n        #end\r\n        return fields;\r\n    }\r\n\r\n    #if !docgen\r\n    private static function recurseReadFiles(baseDir:String, file:String):Array<FileRef> {\r\n        var fileRefs:Array<FileRef> = new Array<FileRef>();\r\n        if(FileSystem.isDirectory(file)) {\r\n            for(fileName in FileSystem.readDirectory(file)) {\r\n                fileRefs = fileRefs.concat(recurseReadFiles(baseDir, file + \"/\" + fileName));\r\n            }\r\n            return fileRefs;\r\n        }\r\n        else {\r\n            if(!file.endsWith('Thumbs.db')) {\r\n                fileRefs.push(new FileRef(baseDir, file));\r\n            }\r\n            return fileRefs;\r\n        }\r\n    }\r\n    #end\r\n}\r\n\r\nprivate class FileRef {\r\n    public var name:String;\r\n    public var value:String;\r\n    public var documentation:String;\r\n\r\n    public function new(baseDir:String, value:String) {\r\n        //trace(\"Added file: \" + value);\r\n        this.value = value;\r\n        // clear out invalid characters\r\n        this.name = value.substr(baseDir.length + 1).split(\"/\").join(\"___\").split(\"-\").join(\"_\").split(\".\").join(\"__\");\r\n        // generate documentation\r\n        this.documentation = \"Reference to file '\" + value + \"' (auto)\";\r\n    }\r\n}"],
"names":[],
"mappings":"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;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCAEA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCAEA;qCACA;wCACA;kCACA;oCACA;oCAEA;qCACA;0CACA;2CACA;wCAgBA;wCAcL;wCACA;yCACA;oCAmBA;oCACA;qCACA;oCACA;uCAEA;iCAEA;iCACA;iCACA;iCACA;iCACA;iCACA;iCACA;iCACA;iCACA;kCACA;kCACA;kCACA;0CAEA;yCACA;oCACA;qCAGA;mCACA;qCACA;wCACA;kCACA;uCACA;oCACA;mCACA;mCACA;iCACA;2CAGA;wCACA;0CACA;uCACA;sCACA;uCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;wCACA;6CAaA;0CAGA;oCAKA;wCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;sCACA;mCACA;mCACA;qCACA;mCACA;oCAGA;mCACA;kCACA;mCACA;oCACA;mCACA;mCACA;uCACA;yCACA;uCAOA;6CACA;6CAGA;6CACA;6CAGA;6CACA;6CACA;6CACA;6CACA;6CACA;6CACA;oCAEA;oCAEA;oCAEA;oCAEA;oCAEA;oCAEA;oCAEA;oCAEA;oCAEA;uCAEA;qCACA;qCACA;oCACA;oCACA;sCACA;wCACA;kCACA;mCACA;yCACA;oCACA;oCACA;oCAEA;qCACA;iDACA;+CACA;2CACA;8CACA;2CACA;4CACA;2CACA;4CACA;qCACA;2CACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;qCACA;uCACA;yCACA;sCACA;yCACA;2CACA;8CACA;6CACA;gDACA;uCACA;sCACA;uCACA;oCACA;wCACA;0CACA;2CACA;0CACA;wCACA;6CACA;6CACA;2CACA;2CACA;uCACA;4CACA;wCACA;uCACA;yCACA;6CACA;oCAEA;qCACA;mCAEA;oCAEA;oCACA;qCACA;mCAEA;oCAEA;mCAKA;wCAOA;wCACA;wCACA;wCACA;wCACA;0CACA;kCACA;mCACA;yCACA;uCACA;wCACA;sCACA;sCACA;yCACA;sCACA;yCACA;2CACA;6CAKA;2CACA;4CAGA;6CAEA;2CACA;yCACA;oCACA;oCACA;mCAEA;mCACA;6CAEH,5CACtC,AAAM,AAAM,AAAM,AACllE,AAAM,AAAM,AAAM,AAAM,AAAM,AAC9B,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAC5D,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAAM,AACN,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAClE,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAAM,AAClE,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;qCAt2BkD;mCAEA;oCACA;uCACA;iCACA;mCACA;qCACA;sCACA;kCACA;qCACA;oCACA;uCACA;mCACA;uCACA;wCACA;sCACA;kCACA;mCACA;mCACA;oCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;uCACA;kCACA;oCACA;qCACA;sCACA;gCACA;yCAIA;uCACA;0CACA;mCACA;wCACA;uCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;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AAAa,AAAc,AAAS,AAAW,AAAW,AAAW,AAAS,AAAS;mBYvB/C;mBAIA;4BWyCZ;iCAYK;yBAEf;qCETgC;2BAEhC;2BGjCoB;2BACA,1BAAuB;0BKF5C;0BEOC;;CAAY;CAAZ;;;kBIkMS;8CI1ME;qBCZY;4BEmCD;;;wCSoEc;2CTpEd;wDYtCS;mDZsCT;gEcrCS;uDdqCT;2DgBrCA;+ChBqCA;mDkBtCA;sDlBsCA;;;;;;6D8BpCH;oEACc;oD9BmCX;gEgCpCQ;6DACH;yDACJ;kDhCkCD;0DkCtCH;iEACc;iDlCqCX;+DoCvCU;uDACf;+BCcb;8BGpBM;wBGQD;4BAGI;0BCmZK;2BACe;gCC5ZL;yECEU;qECDA;qECAA;kCE+OlC;wCCjIkB;uCACA;sCACA;2CACA;yCAEA;2CACA;sCACA;uCACA;uCACA;qCACA;wCACA;uCACA;2CACA;yCACA;yCACA;wCAEA;wCACA;uCAEA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;8CACA;0CACA;2CACA;6CACA;4CACA;6CACA;qCAEA;qCACA;qCACA;qCACA;qCACA;qCACA;qCACA;qCACA;qCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;wCAEA;0CACA;2CACA;uCACA;yCACA;0CACA;4CACA;6CACA;4CACA;6CACA;2CACA;uCACA;uCACA;wCACA;4CACA;6CACA;wCACA;4CAEA;6CACA;2CACA;wCAEA;yCACA;wCACA;4CACA;8CACA;+CACA;4CACA;wCACA;uCACA;gDCqON,/CAAC,AAAe;8CMqBS;gDACA;8CACA;oCAGA;mCACA;uCACA;wCACA;uCACA;4CACA;0CACA;kCAaA;iCACA;uCACA;iDACA;uCACA;iDACA;uCACA;iDACA;uCAKA;iDACA;gDACA;sCAOA;4CACA;gDACA;kDACA;2CAGA;mDACA;2CAGA;2CACA;6CACA;6CACA;4CACA;sDACA;4CACA;sDACA;yCACA;0CAGA;kDACA;kDACA;0DACA;yCAEA;yCACA;0CACA;yCAEA;0CACA;mDAEA;mCAGA;kCACA;4CACA;uCAcA;mCACA;oCACA;0CACA;wCACA;0CACA;iDACA;sDACA;6CACA;sCAGA;0CACA;2CACA;+CACA;2CACA;gCAGA;iCACA;wCAGA;sDACA;sDACA;4CACA;wCACA;yCACA;6CACA;+CACA;wCACA;iDACA;0CACA;0CACA;qDACA;qDACA;yCACA;gDACA;+CACA;+CACA;+CACA;0DACA;0DACA;8CACA;qDACA;oDACA;sCACA;yCACA;+CAEA;6CACA;8CACA;4CACA;8CACA;+CACA;2CACA;sCACA;wCACA;uCACA;wCACA;wCACA;0CACA;kDACA;mDAEA;gDACA;4CACA;qCACA;mDACA;oDACA;wDAQA;uCAGA;qCACA;oCACA;kDAGC;kCAGD;2CACA;mCACA;4CACA;iCACA;0CACA;mCACA;6CAGA;mCACA;iCACA;kCACA;uCACA;6CACA;oDAIA;oDACA;kDACA;6CAGE;2CACA;gDACA;wDACA;iDACA;8DACA;4DACA;qDACA;0DACA;yCACA;2CACA;yCACA;6CACA;8CACA;6CACA;+CACA;sDACA;6CACA;mCAGF;kCACA;mCACA;oCACA;qCACA;sCACA;oCACA;oCACA;kCAIA;qCACA;kCACA;kCACA;oCACA;uCACA;uCACA;oCAGA;sCACA;qCACA;qCAGA;oCACA;oDAKA;mDACA;mDACA;kDACA;gDAGA;gDACA;4CACA;4CACA;wCAGA;qCACA;8CAEA;sDACA;yDACA;yDACA;yDACA;yDACA;yDACA;yDACA;uDACA;sCAGA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;4CACA;oCAGA;2CACA;6CACA;wCAGA;wCACA;wCACA;sCACA;sCACA;sCACA;kCACA;uCACA;uCACA;uCACA;wCACA;wCACA;wCACA;wCACA;0CACA;yDAGI;sDACA;wDACA;sDACA;4DACA;yDACA;gEACA;uDAGH;0CACA;4CAGD;uCAGA;0CACA;wCACA;qCACA;wCACA;sCACA;yCAGA;0CACA;mCAEA;qCACA;oCACA;+CACA;2CACA;4CACA;2CACA;gDAEA;iDACA;0DACA;mDACA;qDACA;oDACA;qDACA;qDACA;uDACA;gEAEc;gEACA;kEACA;0EACA;+CAEd;8CACA;gDACA;sDACA;kCAEA;kDAEW;+DACA;uEACA;+DACA;qDACA;iDAEX;kDACA;mDACA;2DAEA;iDAGA;4DACA;gDACA;gEACI;mDACJ;mCGxvBnC;+CKtEvB,AAAc;6CACd,AAAc;4CACd,AAAc;4CACd,AAAc;6CACd,AAAc;6CACd,AAAc;yDAwNd,AAAoB;gDACpB,AAAW;mDA+IX,AAAiB;gDAEjB,AAAc;iDAEd,AAAc;4DAiBd,AAA0B;iEAE1B,AAA0B;mEAE1B,AAA0B;oEAE1B,AAA0B;qDA+D1B,AAAiC;kDAEjC,AAAiC;mDAEjC,AAAiC;oDAEjC,AAAiC;sDAEjC,AAAiC;oDAEjC,AAAiC;mDAEjC,AAAiC;kDAKjC,AAAiC;6DAEjC,AAAiC;2DAEjC,AAAiC;qEAEjC,AAAiC;oEAEjC,AAAiC;qEAEjC,AAAiC;oEAEjC,AAAiC;kDAEjC,AAAiC;qDAiCjC,AAAuB;qDAEvB,AAAuB;mDAEvB,AAAuB;oDAEvB,AAAuB;qDAEvB,AAAuB;mDAEvB,AAAuB;qDAEvB,AAAuB;0DAEvB,AAAuB;uDAEvB,AAAuB;uDAEvB,AAAuB;sDAEvB,AAAuB;mDAEvB,AAAuB;mDAEvB,AAAuB;0DAEvB,AAAuB;wDAEvB,AAAuB;mDAEvB,AAAuB;qDAEvB,AAAuB;oDAkCvB,AAAqB;gDAErB,AAAqB;kDAErB,AAAqB;kDAErB,AAAqB;qDAErB,AAAqB;uDAErB,AAAqB;mDAwBrB,AAAiB;kDAEjB,AAAiB;kDAEjB,AAAiB;kDAEjB,AAAiB;gDAEjB,AAAiB;qBC1oBY;qCmEM2B;;;;;;;;;;;;;;;;;;;oBjE8Bd;sCEhDL;sCvEqCE;;;;;;;;;;;;0CmG5BW;sCnGLlB;4CACiB;wCACJ;;;;"
}